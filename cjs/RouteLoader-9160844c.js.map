{"version":3,"file":"RouteLoader-9160844c.js","sources":["../src/routing/httpContext.ts","../src/util/mergeStaticRoutes.ts","../src/routing/components/NotFound.tsx","../src/routing/components/Status.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport type HttpContextValues = {\n  statusCode?: number;\n  url?: string;\n};\n\nexport const HttpContext = createContext<HttpContextValues>({});\nexport const useHttpContext = () => {\n  return useContext(HttpContext);\n};\n","import { StaticRoute } from '../';\n\nexport const mergeStaticRoutes = matchedStaticRoute => {\n  let finalRoute: StaticRoute = {};\n  for (const [i, route] of matchedStaticRoute.entries()) {\n    const staticRouteCopy = { ...route.route };\n    if (i === matchedStaticRoute.length - 1) {\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path ? route.route.path : ''\n        }`,\n      };\n      matchedStaticRoute[i].route = finalRoute;\n    } else {\n      delete staticRouteCopy.children;\n      delete staticRouteCopy.index;\n      delete staticRouteCopy.path;\n      delete staticRouteCopy.component;\n      delete staticRouteCopy.element;\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path\n            ? route.route.path.endsWith('/')\n              ? route.route.path\n              : route.route.path + '/'\n            : ''\n        }`,\n      };\n    }\n  }\n};\n","import React from 'react';\r\n\r\nconst NotFound = ({\r\n  statusCode,\r\n  statusText,\r\n}: {\r\n  statusCode: number;\r\n  statusText: string;\r\n}) => (\r\n  <>\r\n    <header>\r\n      <h1>{statusCode || '404'} Page Not Found</h1>\r\n      {statusText && (\r\n        <h2\r\n          style={{\r\n            background: '#eee',\r\n            color: '#666',\r\n            fontSize: '100%',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          {statusText}\r\n        </h2>\r\n      )}\r\n    </header>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { useHttpContext } from '../httpContext';\r\n\r\nexport const Status = ({\r\n  code,\r\n  children,\r\n}: PropsWithChildren<{ code: number }>) => {\r\n  const httpContext = useHttpContext();\r\n  if (httpContext) {\r\n    httpContext.statusCode = code;\r\n  }\r\n  return <>{children}</>;\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { hot } from 'react-hot-loader';\r\nimport {\r\n  Navigate,\r\n  useLocation,\r\n  matchRoutes,\r\n  RouteObject,\r\n  useRoutes,\r\n} from 'react-router-dom';\r\n\r\nimport { createSelector } from 'reselect';\r\n\r\nimport NotFound from './NotFound';\r\nimport { Status } from './Status';\r\n\r\nimport {\r\n  selectCurrentPath,\r\n  selectCurrentProject,\r\n  selectIsNotFound,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryContentTypeId,\r\n  selectRouteErrorMessage,\r\n  selectRouteIsError,\r\n  selectRouteLoading,\r\n  selectRouteStatusCode,\r\n} from '../redux/selectors';\r\nimport { setNavigationPath } from '../redux/actions';\r\n\r\nimport {\r\n  selectUserGroups,\r\n  selectUserIsAuthenticated,\r\n} from '~/user/redux/selectors';\r\nimport { matchUserGroup } from '~/user/util/matchGroups';\r\n\r\nimport { toJS } from '~/util/ToJs';\r\nimport { mergeStaticRoutes } from '~/util/mergeStaticRoutes';\r\nimport { Entry } from 'contensis-delivery-api/lib/models';\r\nimport {\r\n  AppRootProps,\r\n  RouteLoaderProps,\r\n  StaticRoute,\r\n  MatchedRoute,\r\n} from '../routes';\r\n\r\nconst replaceDoubleSlashRecursive = (path: string) => {\r\n  const nextPath = path.replace(/\\/\\//, '/');\r\n\r\n  if (nextPath.match(/\\/\\//)) {\r\n    return replaceDoubleSlashRecursive(nextPath);\r\n  }\r\n\r\n  return nextPath;\r\n};\r\n\r\nconst getTrimmedPath = path => {\r\n  if (path !== '/') {\r\n    const nextPath = replaceDoubleSlashRecursive(path);\r\n    const lastChar = nextPath[nextPath.length - 1];\r\n    if (lastChar === '/') {\r\n      return nextPath.substring(0, nextPath.length - 1);\r\n    }\r\n  }\r\n  return path;\r\n};\r\n\r\nconst processStaticRoutes = (\r\n  staticRoutes: StaticRoute[],\r\n  componentProps: Partial<IReduxProps>\r\n) => {\r\n  const { projectId, contentTypeId, entry, mappedEntry, isLoggedIn } =\r\n    componentProps;\r\n  return staticRoutes.map(x => {\r\n    const route = { ...x };\r\n    if (route.component) {\r\n      route.element = (\r\n        <route.component\r\n          projectId={projectId}\r\n          contentTypeId={contentTypeId ? contentTypeId : undefined}\r\n          entry={entry}\r\n          mappedEntry={mappedEntry}\r\n          isLoggedIn={isLoggedIn}\r\n        />\r\n      );\r\n      delete route.component;\r\n    }\r\n    if (route.children) {\r\n      route.children = processStaticRoutes(route.children, componentProps);\r\n    }\r\n    return route;\r\n  });\r\n};\r\n\r\ninterface IReduxProps {\r\n  contentTypeId: string | null;\r\n  entry: Entry | null;\r\n  isError: boolean;\r\n  isNotFound: boolean;\r\n  isLoading: boolean;\r\n  isLoggedIn: boolean;\r\n  mappedEntry: any;\r\n  projectId: string;\r\n  setNavigationPath: typeof setNavigationPath;\r\n  statePath: string;\r\n  statusCode: any;\r\n  statusText: string;\r\n  userGroups: any;\r\n}\r\n\r\nconst RouteLoader = ({\r\n  contentTypeId,\r\n  entry,\r\n  isError,\r\n  isLoading,\r\n  isLoggedIn,\r\n  isNotFound,\r\n  loadingComponent,\r\n  mappedEntry,\r\n  notFoundComponent,\r\n  projectId,\r\n  routes,\r\n  setNavigationPath,\r\n  statePath,\r\n  statusCode,\r\n  statusText,\r\n  userGroups,\r\n  withEvents,\r\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\r\n  const location = useLocation();\r\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\r\n  const trimmedPath = getTrimmedPath(location.pathname);\r\n\r\n  // Convert any react-router-v5 style routes to react-router-v6 style routes.\r\n  const staticRoutes = processStaticRoutes(routes.StaticRoutes, {\r\n    projectId,\r\n    contentTypeId,\r\n    entry,\r\n    mappedEntry,\r\n    isLoggedIn,\r\n  });\r\n\r\n  // Match any Static Routes a developer has defined\r\n  const matchedStaticRoute = matchRoutes(\r\n    staticRoutes as RouteObject[],\r\n    location\r\n  );\r\n  const isStaticRoute = matchedStaticRoute && matchedStaticRoute.length > 0;\r\n\r\n  // Combine custom params for all static routes, with the furthest config taking precedence.\r\n  if (isStaticRoute) {\r\n    mergeStaticRoutes(matchedStaticRoute);\r\n  }\r\n\r\n  const staticRoute: MatchedRoute<string, StaticRoute> | null = isStaticRoute\r\n    ? matchedStaticRoute.pop() || null\r\n    : null;\r\n\r\n  const routeRequiresLogin = staticRoute\r\n    ? staticRoute.route.requireLogin\r\n    : undefined;\r\n\r\n  const staticRouteElement = useRoutes(staticRoutes as RouteObject[]);\r\n\r\n  const setPath = useCallback(() => {\r\n    // Use serverPath to control the path we send to siteview node api to resolve a route\r\n    let serverPath = '';\r\n    if (staticRoute && staticRoute.pathname === staticRoute.pathnameBase) {\r\n      const { route, pathname } = staticRoute;\r\n\r\n      if (route.path?.includes('*')) {\r\n        // Send the whole url to api if we have matched route containing wildcard\r\n        serverPath = pathname;\r\n      } else if (typeof route.fetchNodeLevel === 'number') {\r\n        // Send all url parts to a specified level to api\r\n        serverPath = pathname\r\n          .split('/')\r\n          .splice(0, route.fetchNodeLevel + 1)\r\n          .join('/');\r\n      } else {\r\n        // Send all non-parameterised url parts to api\r\n        serverPath = (route.fullPath as string)\r\n          ?.split('/')\r\n          .filter(p => !p.startsWith(':'))\r\n          .join('/');\r\n      }\r\n    }\r\n\r\n    setNavigationPath(\r\n      serverPath || trimmedPath,\r\n      location,\r\n      staticRoute,\r\n      withEvents,\r\n      statePath,\r\n      routes\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    setNavigationPath,\r\n    // staticRoute,\r\n    withEvents,\r\n    location,\r\n    routes,\r\n    // statePath,\r\n    trimmedPath,\r\n  ]);\r\n\r\n  if (typeof window == 'undefined') setPath();\r\n\r\n  useEffect(() => {\r\n    setPath();\r\n  }, [location, setPath]);\r\n\r\n  // Need to redirect when url endswith a /\r\n  if (location.pathname.length > trimmedPath.length) {\r\n    // Todo: Also handle the redirect serverside\r\n    return <Navigate to={trimmedPath} />;\r\n  }\r\n\r\n  // Render any Static Routes a developer has defined\r\n  if (isStaticRoute && !(!isLoggedIn && routeRequiresLogin)) {\r\n    if (matchUserGroup(userGroups, routeRequiresLogin))\r\n      return staticRouteElement;\r\n  }\r\n\r\n  // Render a supplied Loading component if the route\r\n  // is not a static route and is in a loading state\r\n  if (isLoading && !isNotFound && loadingComponent) {\r\n    const LoadingComponent = loadingComponent;\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  // Match any defined Content Type Mappings\r\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\r\n    const MatchedComponent = routes.ContentTypeMappings.find(\r\n      item => item.contentTypeID === contentTypeId\r\n    );\r\n\r\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\r\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\r\n        return (\r\n          <MatchedComponent.component\r\n            projectId={projectId}\r\n            contentTypeId={contentTypeId}\r\n            entry={entry}\r\n            mappedEntry={mappedEntry}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\r\n  if (isNotFound || isError) {\r\n    return (\r\n      <Status code={statusCode}>\r\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\r\n      </Status>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nconst mapStateToPropsMemoized = createSelector(\r\n  selectRouteEntryContentTypeId,\r\n  selectRouteEntry,\r\n  selectRouteIsError,\r\n  selectIsNotFound,\r\n  selectRouteLoading,\r\n  selectUserIsAuthenticated,\r\n  selectMappedEntry,\r\n  selectCurrentProject,\r\n  selectCurrentPath,\r\n  selectRouteStatusCode,\r\n  selectRouteErrorMessage,\r\n  selectUserGroups,\r\n  (\r\n    contentTypeId,\r\n    entry,\r\n    isError,\r\n    isNotFound,\r\n    isLoading,\r\n    isLoggedIn,\r\n    mappedEntry,\r\n    projectId,\r\n    statePath,\r\n    statusCode,\r\n    statusText,\r\n    userGroups\r\n  ) => ({\r\n    contentTypeId,\r\n    entry,\r\n    isError,\r\n    isNotFound,\r\n    isLoading,\r\n    isLoggedIn,\r\n    mappedEntry,\r\n    projectId,\r\n    statePath,\r\n    statusCode,\r\n    statusText,\r\n    userGroups,\r\n  })\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  setNavigationPath,\r\n};\r\n\r\nexport default hot(module)(\r\n  connect(mapStateToPropsMemoized, mapDispatchToProps)(toJS(RouteLoader))\r\n) as unknown as (props: AppRootProps & RouteLoaderProps) => JSX.Element;\r\n"],"names":["HttpContext","createContext","useHttpContext","useContext","mergeStaticRoutes","matchedStaticRoute","finalRoute","i","route","entries","staticRouteCopy","length","fullPath","path","children","index","component","element","endsWith","NotFound","statusCode","statusText","React","background","color","fontSize","padding","Status","code","httpContext","replaceDoubleSlashRecursive","nextPath","replace","match","getTrimmedPath","lastChar","substring","processStaticRoutes","staticRoutes","componentProps","projectId","contentTypeId","entry","mappedEntry","isLoggedIn","map","x","undefined","RouteLoader","isError","isLoading","isNotFound","loadingComponent","notFoundComponent","routes","setNavigationPath","statePath","userGroups","withEvents","location","useLocation","trimmedPath","pathname","StaticRoutes","matchRoutes","isStaticRoute","staticRoute","pop","routeRequiresLogin","requireLogin","staticRouteElement","useRoutes","setPath","useCallback","serverPath","pathnameBase","includes","fetchNodeLevel","split","splice","join","filter","p","startsWith","window","useEffect","Navigate","matchUserGroup","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","NotFoundComponent","mapStateToPropsMemoized","createSelector","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","hot","module","connect","toJS"],"mappings":"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"}