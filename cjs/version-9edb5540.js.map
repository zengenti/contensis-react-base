{"version":3,"file":"version-9edb5540.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/util/merge.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\n","import { Draft, produce } from 'immer';\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\n\nconst initialState = {\n  root: null,\n  error: {\n    isError: false,\n    message: null,\n  },\n  isReady: false,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      state.root = action.nodes;\n      state.isReady = true;\n      return;\n    }\n    case GET_NODE_TREE_ERROR: {\n      state.error.isError = true;\n      state.error.message = action.error || 'Unknown error occurred';\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","import merge from 'deepmerge';\n\nexport const combineMerge = (target: any, source: any, options: any) => {\n  const destination = target.slice();\n\n  source.forEach((item: any, index: any) => {\n    if (typeof destination[index] === 'undefined') {\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\n    } else if (options.isMergeableObject(item)) {\n      destination[index] = merge(target[index], item, options);\n    } else if (target.indexOf(item) === -1) {\n      destination.push(item);\n    }\n  });\n  return destination;\n};\n","import { Draft, produce } from 'immer';\nimport merge from 'deepmerge';\n\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  SET_SURROGATE_KEYS,\n  UPDATE_LOADING_STATE,\n} from './types';\nimport { combineMerge } from '~/util/merge';\n\nconst initialState = {\n  canonicalPath: null,\n  currentHostname: null,\n  currentPath: '/',\n  currentNode: {},\n  currentNodeAncestors: [],\n  currentProject: 'unknown',\n  entryID: null,\n  entry: null,\n  error: undefined,\n  isError: false,\n  isLoading: false,\n  location: {},\n  mappedEntry: null,\n  notFound: false,\n  staticRoute: null,\n  statusCode: 200,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_ANCESTORS: {\n      state.currentNodeAncestors = action.ancestors;\n      return;\n    }\n    case SET_ENTRY: {\n      const {\n        entry,\n        error,\n        mappedEntry,\n        node = {},\n        isError = false,\n        isLoading = false,\n        notFound = false,\n        statusCode,\n        currentPath,\n      } = action;\n\n      let defaultStatus = 200;\n      if (notFound === true && isError === false) defaultStatus = 404;\n      else if (isError === true) defaultStatus = statusCode || 500;\n\n      if (!entry) {\n        state.entryID = null;\n        state.entry = null;\n        state.error = error;\n        state.mappedEntry = null;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n        state.canonicalPath = currentPath;\n      } else {\n        state.entryID = action.id;\n        state.entry = entry;\n        state.error = error;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n        state.canonicalPath = entry.sys.uri || currentPath;\n\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\n          state.mappedEntry = mappedEntry;\n          state.entry = { sys: entry.sys };\n        }\n      }\n\n      if (!node) {\n        state.currentNode = null;\n      } else {\n        // On Set Node, we reset all dependants.\n        state.currentNode = node;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { entry, ...nodeWithoutEntry } = node; // We have the entry stored elsewhere, so lets not keep it twice.\n        state.currentNode = nodeWithoutEntry;\n      }\n\n      return;\n    }\n    case UPDATE_LOADING_STATE: {\n      state.isLoading = action.isLoading;\n      return;\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = {} as any;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on initial load as we allready should have it in redux\n        const entryUri = state?.entry?.sys?.uri;\n        if (entryUri !== action.path) {\n          state.currentPath = action.path;\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, component: null },\n          };\n          state.isLoading = typeof window !== 'undefined';\n        } else {\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, component: null },\n          };\n        }\n      }\n      return;\n    }\n    case SET_ROUTE: {\n      state.nextPath = action.path;\n      return;\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n      }\n\n      state.currentNodeSiblings = action.siblings;\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\n      return;\n    }\n    case SET_SURROGATE_KEYS: {\n      // console.info(`SET_SURROGATE_KEYS: '${action.url}' keys: ${action.keys}`);\n      state.surrogateKeys = merge(\n        state.surrogateKeys,\n        (action.keys || '').split(' '),\n        { arrayMerge: combineMerge }\n      );\n      return;\n    }\n    case SET_TARGET_PROJECT: {\n      state.currentProject = action.project;\n      state.allowedGroups = action.allowedGroups;\n      state.currentHostname = action.hostname;\n      return;\n    }\n    default:\n      return state;\n  }\n}, initialState);\n","const VERSION_PREFIX = '@VERSION/';\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\n","import { Draft, produce } from 'immer';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\n\nconst initialState = {\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: null as 'latest' | 'published' | null,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      state.contensisVersionStatus = action.status;\n      return;\n    }\n    case SET_VERSION: {\n      state.commitRef = action.commitRef;\n      state.buildNo = action.buildNo;\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","/**\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== 'CALL_HISTORY_METHOD') {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Action,\n  Store,\n  StoreEnhancer,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport { createInjectorsEnhancer } from 'redux-injectors';\n\n// Core reducers\nimport NavigationReducer from '../reducers/navigation';\nimport RoutingReducer from '~/routing/redux/reducers';\nimport UserReducer from '~/user/redux/reducers';\nimport VersionReducer from '../reducers/version';\nimport routerMiddleware from './routerMiddleware';\nimport { AppState } from '../appstate';\nimport { History, MemoryHistory } from 'history';\nimport { StateType } from '~/config';\n\nexport let reduxStore;\n\n/* eslint-disable no-underscore-dangle */\ndeclare let window: Window &\n  typeof globalThis & {\n    __REDUX_DEVTOOLS_EXTENSION__: any;\n  };\n\nexport default async (\n  featureReducers: any,\n  initialState: AppState,\n  history: History | MemoryHistory,\n  stateType: StateType\n) => {\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  // Reassign the combiner and fromJS functions when\n  // stateType is 'immutable' with dynamic imports\n  let combiner = combineReducers;\n  let fromJS: any = (obj: any) => obj;\n  globalThis.STATE_TYPE = stateType;\n\n  if (stateType === 'immutable') {\n    globalThis.immutable = await import(\n      /* webpackChunkName: \"immutable\" */ 'immutable'\n    );\n\n    fromJS = (\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\n    ).default;\n\n    combiner = (\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\n    ).combineReducers;\n  }\n\n  const createReducer = (injectedReducers = {}) => {\n    const rootReducer = combiner<AppState>({\n      ...injectedReducers,\n      // other non-injected reducers go here\n      ...reducers,\n    });\n\n    return rootReducer;\n  };\n\n  const store = (initialState: AppState) => {\n    const runSaga = sagaMiddleware.run;\n\n    const middleware: StoreEnhancer<\n      {\n        dispatch: unknown;\n      },\n      unknown\n    > = compose(\n      applyMiddleware(\n        thunkMiddleware,\n        sagaMiddleware,\n        routerMiddleware(history)\n      ),\n      createInjectorsEnhancer({\n        createReducer,\n        runSaga,\n      }),\n      reduxDevToolsMiddleware\n    );\n\n    const store: Store<AppState, Action<any>> & {\n      runSaga?: typeof runSaga;\n      close?: () => void;\n    } = createStore<AppState, Action<any>, unknown, unknown>(\n      createReducer(),\n      initialState,\n      middleware\n    );\n\n    store.runSaga = runSaga;\n    store.close = () => store.dispatch(END);\n\n    return store;\n  };\n\n  reduxStore = store(fromJS(initialState));\n  return reduxStore;\n};\n","import { getImmutableOrJS as getIn } from '~/redux/util';\n\nexport const selectCommitRef = state => getIn(state, ['version', 'commitRef']);\n\nexport const selectBuildNumber = state => getIn(state, ['version', 'buildNo']);\n\nexport const selectVersionStatus = state =>\n  getIn(state, ['version', 'contensisVersionStatus']);\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","error","isError","message","isReady","produce","state","action","type","nodes","combineMerge","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","merge","indexOf","push","canonicalPath","currentHostname","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","undefined","isLoading","location","mappedEntry","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","sys","uri","Object","keys","length","nodeWithoutEntry","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","_state$entry","_state$entry$sys","entryUri","route","component","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblings","parentId","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","surrogateKeys","split","arrayMerge","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","globalThis","STATE_TYPE","immutable","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","selectCommitRef","getIn","selectBuildNumber","selectVersionStatus"],"mappings":"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"}