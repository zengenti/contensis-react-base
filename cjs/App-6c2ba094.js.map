{"version":3,"file":"App-6c2ba094.js","sources":["../src/util/ContensisDeliveryApi.js","../src/redux/store/history.js","../src/redux/sagas/navigation.js","../src/util/schema.ts","../src/routing/util/expressions.ts","../src/routing/util/queries.ts","../src/routing/redux/sagas.js","../src/user/redux/sagas/register.js","../src/user/util/userHelper.js","../src/user/redux/sagas/resetPassword.js","../src/user/redux/sagas/index.js","../src/redux/sagas/index.js","../src/util/pickProject.js","../src/app/App.tsx"],"sourcesContent":["import { Client } from 'contensis-delivery-api';\r\nimport { setSurrogateKeys } from '../routing/redux/actions';\r\nimport { reduxStore } from '~/redux/store/store';\r\n\r\nconst storeSurrogateKeys = response => {\r\n  const keys = response.headers.get\r\n    ? response.headers.get('surrogate-key')\r\n    : response.headers.map['surrogate-key'];\r\n  if (keys) reduxStore?.dispatch(setSurrogateKeys(keys, response.url));\r\n};\r\n\r\nconst getClientConfig = project => {\r\n  let config = DELIVERY_API_CONFIG; /* global DELIVERY_API_CONFIG */\r\n  config.responseHandler = {};\r\n\r\n  if (project) {\r\n    config.projectId = project;\r\n  }\r\n\r\n  // we only want the surrogate key header in a server context\r\n  if (typeof window === 'undefined') {\r\n    config.defaultHeaders = {\r\n      'x-require-surrogate-key': true,\r\n    };\r\n    config.responseHandler[200] = storeSurrogateKeys;\r\n  }\r\n\r\n  if (\r\n    typeof window !== 'undefined' &&\r\n    PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n  ) {\r\n    // ensure a relative url is used to bypass the need for CORS (separate OPTIONS calls)\r\n    config.rootUrl = '';\r\n    config.responseHandler[404] = () => null;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport * from 'contensis-delivery-api';\r\n\r\nclass DeliveryApi {\r\n  getClientSideVersionStatus = () => {\r\n    if (typeof window != 'undefined') {\r\n      const currentHostname = window.location.hostname;\r\n      return this.getVersionStatusFromHostname(currentHostname);\r\n    }\r\n    return null;\r\n  };\r\n  getVersionStatusFromHostname = currentHostname => {\r\n    if (currentHostname.indexOf('localhost') > -1) return 'latest';\r\n\r\n    if (currentHostname.endsWith('contensis.cloud')) {\r\n      if (currentHostname.indexOf('preview.') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    if (currentHostname.endsWith('cloud.contensis.com')) {\r\n      if (currentHostname.indexOf('preview-') > -1) {\r\n        return 'latest';\r\n      } else {\r\n        return 'published';\r\n      }\r\n    }\r\n\r\n    return 'published';\r\n  };\r\n  search = (query, linkDepth, project, env) => {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return client.entries.search(\r\n      query,\r\n      typeof linkDepth !== 'undefined' ? linkDepth : 1\r\n    );\r\n  };\r\n  getClient = (deliveryApiStatus = 'published', project, env) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    return Client.create(baseConfig);\r\n  };\r\n  getEntry = (\r\n    id,\r\n    linkDepth = 0,\r\n    deliveryApiStatus = 'published',\r\n    project,\r\n    env\r\n  ) => {\r\n    const baseConfig = getClientConfig(project, env);\r\n    baseConfig.versionStatus = deliveryApiStatus;\r\n    const client = Client.create(baseConfig);\r\n    // return client.entries.get(id, linkDepth);\r\n    return client.entries.get({ id, linkDepth });\r\n  };\r\n}\r\n\r\nexport const deliveryApi = new DeliveryApi();\r\n\r\nclass CacheNode {\r\n  constructor(key, value) {\r\n    this.key = key;\r\n    this.value = value;\r\n    this.next = null;\r\n    this.prev = null;\r\n  }\r\n}\r\n\r\nclass LruCache {\r\n  constructor(limit = 100) {\r\n    this.map = {};\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.limit = limit || 100;\r\n    this.size = 0;\r\n  }\r\n\r\n  get(key) {\r\n    if (this.map[key]) {\r\n      let value = this.map[key].value;\r\n      let node = new CacheNode(key, value);\r\n      this.remove(key);\r\n      this.setHead(node);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  set(key, value) {\r\n    let node = new CacheNode(key, value);\r\n    if (this.map[key]) {\r\n      this.remove(key);\r\n    } else {\r\n      if (this.size >= this.limit) {\r\n        delete this.map[this.tail.key];\r\n        this.size--;\r\n        this.tail = this.tail.prev;\r\n        this.tail.next = null;\r\n      }\r\n    }\r\n    this.setHead(node);\r\n  }\r\n\r\n  setHead(node) {\r\n    node.next = this.head;\r\n    node.prev = null;\r\n    if (this.head) {\r\n      this.head.prev = node;\r\n    }\r\n    this.head = node;\r\n    if (!this.tail) {\r\n      this.tail = node;\r\n    }\r\n    this.size++;\r\n    this.map[node.key] = node;\r\n  }\r\n\r\n  remove(key) {\r\n    let node = this.map[key];\r\n    if (node.prev) {\r\n      node.prev.next = node.next;\r\n    } else {\r\n      this.head = node.next;\r\n    }\r\n    if (node.next) {\r\n      node.next.prev = node.prev;\r\n    } else {\r\n      this.tail = node.prev;\r\n    }\r\n    delete this.map[key];\r\n    this.size--;\r\n  }\r\n}\r\n\r\nclass CachedSearch {\r\n  cache = new LruCache();\r\n  taxonomyLookup = {};\r\n\r\n  search(query, linkDepth, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.search(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  searchUsingPost(query, linkDepth = 0, project = '', env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      project + JSON.stringify(query) + linkDepth.toString(),\r\n      () => client.entries.searchUsingPost(query, linkDepth)\r\n    );\r\n  }\r\n\r\n  get(id, linkDepth, versionStatus, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    client.clientConfig.versionStatus = versionStatus;\r\n    return this.request(id, () => client.entries.get({ id, linkDepth }));\r\n  }\r\n\r\n  getContentType(id, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[CONTENT TYPE] ${id} ${project}`, () =>\r\n      client.contentTypes.get(id)\r\n    );\r\n  }\r\n\r\n  getTaxonomyNode(key, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`[TAXONOMY NODE] ${key}`, () =>\r\n      client.taxonomy\r\n        .resolveChildren(key)\r\n        .then(node => this.extendTaxonomyNode(node))\r\n    );\r\n  }\r\n\r\n  getRootNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(`${project} / ${JSON.stringify(options)}`, () =>\r\n      client.nodes.getRoot(options)\r\n    );\r\n  }\r\n\r\n  getNode(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} ${(options && options.path) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.get(options)\r\n    );\r\n  }\r\n\r\n  getAncestors(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [A] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getAncestors(options)\r\n    );\r\n  }\r\n\r\n  getChildren(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [C] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getChildren(options)\r\n    );\r\n  }\r\n\r\n  getSiblings(options, project, env) {\r\n    const client = Client.create(getClientConfig(project, env));\r\n    return this.request(\r\n      `${project} [S] ${(options && options.id) || options} ${JSON.stringify(\r\n        options\r\n      )}`,\r\n      () => client.nodes.getSiblings(options)\r\n    );\r\n  }\r\n\r\n  request(key, execute) {\r\n    if (!this.cache.get(key) || typeof window == 'undefined') {\r\n      let promise = execute();\r\n      this.cache.set(key, promise);\r\n      promise.catch(() => {\r\n        this.cache.remove(key);\r\n      });\r\n    }\r\n    return this.cache.get(key);\r\n  }\r\n}\r\n\r\nexport const cachedSearch = new CachedSearch();\r\n","import { createBrowserHistory, createMemoryHistory } from 'history';\r\n\r\n// Create a history depending on the environment\r\nconst selectedHistory =\r\n  typeof window !== 'undefined' ? createBrowserHistory : createMemoryHistory;\r\n\r\nexport const history = (options = {}) => selectedHistory(options);\r\nexport const browserHistory = selectedHistory();\r\n","import { takeEvery, put, select } from 'redux-saga/effects';\r\n\r\nimport { deliveryApi } from '~/util/ContensisDeliveryApi';\r\nimport {\r\n  GET_NODE_TREE,\r\n  SET_NODE_TREE,\r\n  GET_NODE_TREE_ERROR,\r\n} from '~/redux/types/navigation';\r\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '~/redux/selectors/version';\r\nimport { selectCurrentProject } from '~/routing/redux/selectors';\r\n\r\nexport const navigationSagas = [takeEvery(GET_NODE_TREE, ensureNodeTreeSaga)];\r\n\r\nexport function* ensureNodeTreeSaga(action) {\r\n  const state = yield select();\r\n  try {\r\n    if (!hasNavigationTree(state)) {\r\n      const deliveryApiVersionStatus = yield select(selectVersionStatus);\r\n      const project = yield select(selectCurrentProject);\r\n      const nodes = yield deliveryApi\r\n        .getClient(deliveryApiVersionStatus, project)\r\n        .nodes.getRoot({\r\n          depth: action.treeDepth || 0,\r\n        });\r\n      if (nodes) {\r\n        yield put({ type: SET_NODE_TREE, nodes });\r\n      } else {\r\n        yield put({ type: GET_NODE_TREE_ERROR });\r\n      }\r\n    }\r\n  } catch (ex) {\r\n    yield put({ type: GET_NODE_TREE_ERROR, error: ex.toString() });\r\n  }\r\n}\r\n","export const DataFormats = {\r\n  entry: 'entry',\r\n  webpage: 'webpage',\r\n};\r\n\r\nconst sys = {\r\n  contentTypeId: 'sys.contentTypeId',\r\n  dataFormat: 'sys.dataFormat',\r\n  filename: 'sys.properties.filename',\r\n  id: 'sys.id',\r\n  includeInSearch: 'sys.metadata.includeInSearch',\r\n  slug: 'sys.slug',\r\n  uri: 'sys.uri',\r\n  versionStatus: 'sys.versionStatus',\r\n};\r\n\r\nexport const Fields = {\r\n  entryTitle: 'entryTitle',\r\n  entryDescription: 'entryDescription',\r\n  keywords: 'keywords',\r\n  sys,\r\n  contentTypeId: 'sys.contentTypeId',\r\n  wildcard: '*',\r\n};\r\n\r\nexport const VersionStatus = {\r\n  published: 'published',\r\n  latest: 'latest',\r\n};\r\n","import { IExpression } from 'contensis-core-api';\r\nimport { Op } from 'contensis-delivery-api';\r\nimport { Fields } from '~/util/schema';\r\n\r\nexport const fieldExpression = (\r\n  field: string,\r\n  value: string | string[],\r\n  operator = 'equalTo',\r\n  weight = null\r\n) => {\r\n  if (!field || !value) return [];\r\n  if (Array.isArray(value)) return equalToOrIn(field, value, operator);\r\n  else\r\n    return !weight\r\n      ? [Op[operator](field, value)]\r\n      : [Op[operator](field, value).weight(weight)];\r\n};\r\n\r\nexport const defaultExpressions = (\r\n  versionStatus: 'published' | 'latest'\r\n): IExpression[] => {\r\n  return [Op.equalTo(Fields.sys.versionStatus, versionStatus)];\r\n};\r\n\r\nconst equalToOrIn = (field: string, arr: string[], operator = 'equalTo') =>\r\n  arr.length === 0\r\n    ? []\r\n    : arr.length === 1\r\n    ? [Op[operator](field, arr[0])]\r\n    : [Op.in(field, ...arr)];\r\n","import { Query } from '~/util/ContensisDeliveryApi';\r\nimport { fieldExpression, defaultExpressions } from './expressions';\r\n\r\nexport const routeEntryByFieldsQuery = (\r\n  id: string,\r\n  language = 'en-GB',\r\n  fields: string[] = [],\r\n  versionStatus: 'published' | 'latest' = 'published'\r\n) => {\r\n  const query = new Query(\r\n    ...[\r\n      ...fieldExpression('sys.id', id),\r\n      ...fieldExpression('sys.language', language),\r\n      ...defaultExpressions(versionStatus),\r\n    ]\r\n  );\r\n  query.fields = fields;\r\n  return query;\r\n};\r\n","import * as log from 'loglevel';\r\nimport { takeEvery, put, select, call, all } from 'redux-saga/effects';\r\n\r\nimport {\r\n  SET_ENTRY,\r\n  SET_ANCESTORS,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  UPDATE_LOADING_STATE,\r\n} from './types';\r\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\r\nimport {\r\n  selectCurrentAncestors,\r\n  selectCurrentNode,\r\n  selectCurrentProject,\r\n  selectCurrentSiblings,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryEntryId,\r\n  selectRouteEntryLanguage,\r\n} from './selectors';\r\nimport { hasNavigationTree } from '~/redux/selectors/navigation';\r\nimport { selectVersionStatus } from '~/redux/selectors/version';\r\nimport { ensureNodeTreeSaga } from '~/redux/sagas/navigation';\r\nimport { handleRequiresLoginSaga } from '~/user/redux/sagas/login';\r\n\r\nimport { findContentTypeMapping } from '../util/find-contenttype-mapping';\r\nimport { routeEntryByFieldsQuery } from '../util/queries';\r\nimport { cachedSearch, deliveryApi } from '~/util/ContensisDeliveryApi';\r\nimport { injectRedux as reduxInjector } from '~/redux/store/injectors';\r\n\r\nexport const routingSagas = [\r\n  takeEvery(SET_NAVIGATION_PATH, getRouteSaga),\r\n  takeEvery(SET_ROUTE, setRouteSaga),\r\n];\r\n\r\n/**\r\n * To navigate / push a specific route via redux middleware\r\n * @param {path, state} action\r\n */\r\nfunction* setRouteSaga(action) {\r\n  yield put({\r\n    type: 'CALL_HISTORY_METHOD',\r\n    payload: {\r\n      method: 'push',\r\n      args: [action.path, action.state],\r\n    },\r\n  });\r\n}\r\n\r\nfunction* getRouteSaga(action) {\r\n  let entry = null;\r\n  try {\r\n    const {\r\n      withEvents,\r\n      routes: { ContentTypeMappings = {} } = {},\r\n      staticRoute,\r\n    } = action;\r\n\r\n    // Inject redux { key, reducer, saga } provided by staticRoute\r\n    if (staticRoute && staticRoute.route.injectRedux)\r\n      yield call(reduxInjectorSaga, staticRoute.route.injectRedux);\r\n\r\n    // Variables we will pass to setRouteEntry\r\n    let pathNode = null,\r\n      ancestors = null,\r\n      children = [],\r\n      siblings = null;\r\n\r\n    let contentTypeMapping = {};\r\n\r\n    // These variables are the return values from\r\n    // calls to withEvents.onRouteLoad and onRouteLoaded\r\n    let appsays,\r\n      requireLogin = false;\r\n\r\n    if (withEvents && withEvents.onRouteLoad) {\r\n      appsays = yield withEvents.onRouteLoad(action);\r\n    }\r\n\r\n    const entryLinkDepth =\r\n      appsays && appsays.entryLinkDepth !== undefined\r\n        ? appsays.entryLinkDepth\r\n        : 2;\r\n    const setContentTypeLimits = !!ContentTypeMappings.find(\r\n      ct => ct.fields || ct.linkDepth || ct.nodeOptions\r\n    );\r\n\r\n    const state = yield select();\r\n    const routeEntry = selectRouteEntry(state, 'js');\r\n    const routeNode = selectCurrentNode(state, 'js');\r\n    const currentPath = action.path; //selectCurrentPath(state);\r\n    const deliveryApiStatus = selectVersionStatus(state);\r\n    const project = selectCurrentProject(state);\r\n    // const isHome = currentPath === '/';\r\n    const isPreview = currentPath && currentPath.startsWith('/preview/');\r\n    const defaultLang = (appsays && appsays.defaultLang) || 'en-GB';\r\n\r\n    if (\r\n      !isPreview &&\r\n      ((appsays && appsays.customRouting) ||\r\n        (staticRoute && !staticRoute.route.fetchNode) ||\r\n        (routeEntry &&\r\n          action.statePath === action.path &&\r\n          (appsays && appsays.refetchNode) !== true))\r\n    ) {\r\n      // To prevent erroneous 404s and wasted network calls, this covers\r\n      // - appsays customRouting and does SET_ENTRY etc. via the consuming app\r\n      // - all staticRoutes (where custom 'route.fetchNode' attribute is falsey)\r\n      // - standard Contensis SiteView Routing where we already have that entry in state\r\n      if (\r\n        routeEntry &&\r\n        (!staticRoute || (staticRoute.route && staticRoute.route.fetchNode))\r\n      ) {\r\n        pathNode = { ...routeNode, entry: null };\r\n        pathNode.entry = entry = routeEntry;\r\n        //Do nothing, the entry is allready the right one.\r\n        // yield put({\r\n        //   type: SET_ENTRY,\r\n        //   entry,\r\n        //   node: routeNode,\r\n        //   isLoading: false,\r\n        // });\r\n        yield put({\r\n          type: UPDATE_LOADING_STATE,\r\n          isLoading: false,\r\n        });\r\n      } else\r\n        yield call(\r\n          setRouteEntry,\r\n          routeEntry,\r\n          yield select(selectCurrentNode),\r\n          yield select(selectCurrentAncestors),\r\n          yield select(selectCurrentSiblings)\r\n        );\r\n    } else {\r\n      // Handle preview routes\r\n      if (isPreview) {\r\n        let splitPath = currentPath.split('/');\r\n        let entryGuid = splitPath[2];\r\n        let language = defaultLang;\r\n        if (splitPath.length >= 3) {\r\n          //set lang key if available in the path, else use default lang\r\n          //assumes preview url on content type is: http://preview.ALIAS.contensis.cloud/preview/{GUID}/{LANG}\r\n          if (splitPath.length == 4) language = splitPath[3];\r\n          // According to product dev we cannot use Node API\r\n          // for previewing entries as it gives a response of []\r\n          // -- apparently it is not correct to request latest content\r\n          // with Node API\r\n\r\n          let previewEntry = yield deliveryApi\r\n            .getClient(deliveryApiStatus, project)\r\n            .entries.get({\r\n              id: entryGuid,\r\n              language,\r\n              linkDepth: entryLinkDepth,\r\n            });\r\n          if (previewEntry) {\r\n            pathNode = { entry: previewEntry };\r\n            ({ entry } = pathNode || {});\r\n          }\r\n        }\r\n      } else {\r\n        // Handle all other routes\r\n        pathNode = yield cachedSearch.getNode(\r\n          {\r\n            depth: 0,\r\n            path: currentPath,\r\n            entryFields: setContentTypeLimits\r\n              ? ['sys.contentTypeId', 'sys.id']\r\n              : '*',\r\n            entryLinkDepth: setContentTypeLimits ? 0 : entryLinkDepth,\r\n            language: defaultLang,\r\n            versionStatus: deliveryApiStatus,\r\n          },\r\n          project\r\n        );\r\n        ({ entry } = pathNode || {});\r\n\r\n        if (setContentTypeLimits && pathNode?.entry?.sys?.id) {\r\n          // Get fields[] and linkDepth from ContentTypeMapping to get the entry data\r\n          // and current node's ordinates at a specified depth with specified fields\r\n          contentTypeMapping =\r\n            findContentTypeMapping(\r\n              ContentTypeMappings,\r\n              pathNode.entry.sys.contentTypeId\r\n            ) || {};\r\n          const { fields, linkDepth } = contentTypeMapping;\r\n          const query = routeEntryByFieldsQuery(\r\n            pathNode.entry.sys.id,\r\n            pathNode.entry.sys.language,\r\n            fields,\r\n            deliveryApiStatus\r\n          );\r\n          const payload = yield cachedSearch.search(\r\n            query,\r\n            typeof linkDepth !== 'undefined' ? linkDepth : entryLinkDepth || 0,\r\n            project\r\n          );\r\n          if (payload?.items?.length > 0) {\r\n            pathNode.entry = entry = payload.items[0];\r\n          }\r\n        }\r\n      }\r\n\r\n      // make calls to fetch node ancestors, children,\r\n      // siblings or entire node tree\r\n      [ancestors, children, siblings] = yield call(\r\n        resolveCurrentNodeOrdinates,\r\n        {\r\n          appsays,\r\n          contentTypeMapping,\r\n          language: defaultLang,\r\n          path: currentPath,\r\n          pathNode,\r\n          project,\r\n          versionStatus: deliveryApiStatus,\r\n        }\r\n      );\r\n\r\n      if (children) pathNode.children = children;\r\n    }\r\n\r\n    const { entryMapper, injectRedux } =\r\n      findContentTypeMapping(\r\n        ContentTypeMappings,\r\n        pathNode?.entry?.sys?.contentTypeId\r\n      ) || {};\r\n\r\n    // Inject redux { key, reducer, saga } provided by ContentTypeMapping\r\n    if (injectRedux) yield call(reduxInjectorSaga, injectRedux);\r\n\r\n    if (withEvents && withEvents.onRouteLoaded) {\r\n      // Check if the app has provided a requireLogin boolean flag or groups array\r\n      // in addition to checking if requireLogin is set in the route definition\r\n      ({ requireLogin } =\r\n        (yield withEvents.onRouteLoaded({ ...action, entry })) || {});\r\n    }\r\n\r\n    if (requireLogin !== false) {\r\n      // Do not call the login feature saga if requireLogin is false\r\n      yield call(handleRequiresLoginSaga, {\r\n        ...action,\r\n        entry,\r\n        requireLogin,\r\n      });\r\n    }\r\n\r\n    if (!appsays || !appsays.preventScrollTop) {\r\n      // Scroll into View\r\n      if (typeof window !== 'undefined') {\r\n        window.scroll({\r\n          top: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (pathNode?.entry?.sys?.id) {\r\n      entry = pathNode.entry;\r\n\r\n      yield call(\r\n        setRouteEntry,\r\n        entry,\r\n        pathNode,\r\n        ancestors,\r\n        siblings,\r\n        entryMapper,\r\n        false,\r\n        appsays?.refetchNode\r\n      );\r\n    } else {\r\n      if (staticRoute)\r\n        yield call(setRouteEntry, null, pathNode, ancestors, siblings);\r\n      else yield call(do404);\r\n    }\r\n  } catch (e) {\r\n    log.error(...['Error running route saga:', e, e.stack]);\r\n    yield call(do500, e);\r\n  }\r\n}\r\n\r\nfunction* resolveCurrentNodeOrdinates({\r\n  appsays,\r\n  contentTypeMapping,\r\n  language,\r\n  path,\r\n  pathNode,\r\n  project,\r\n  versionStatus,\r\n}) {\r\n  const apiCall = [() => null, () => null, () => null, () => null];\r\n\r\n  // if appsays customNavigation: true, we will set doNavigation to false\r\n  // if appsays customNavigation: { ... }, we will set doNavigation to the customNavigation object and check for child elements\r\n  // if appsays nothing we will set doNavigation to true and continue to do navigation calls\r\n  const doNavigation =\r\n    !appsays ||\r\n    (appsays?.customNavigation === true\r\n      ? false\r\n      : appsays?.customNavigation || true);\r\n\r\n  const {\r\n    entryLinkDepth = 0,\r\n    fields,\r\n    linkDepth,\r\n    nodeOptions = {},\r\n  } = contentTypeMapping;\r\n\r\n  if (pathNode && pathNode.id) {\r\n    if (doNavigation === true || doNavigation.ancestors) {\r\n      apiCall[0] = function* getAncestors() {\r\n        try {\r\n          return yield cachedSearch.getAncestors(\r\n            {\r\n              id: pathNode.id,\r\n              language,\r\n              versionStatus,\r\n            },\r\n            project\r\n          );\r\n        } catch (ex) {\r\n          log.info('Problem fetching ancestors', ex);\r\n          return [];\r\n        }\r\n      };\r\n    }\r\n\r\n    const childrenDepth =\r\n      doNavigation === true || doNavigation.children === true\r\n        ? 1\r\n        : (doNavigation && doNavigation.children) || 0;\r\n\r\n    if (\r\n      (typeof nodeOptions?.children === 'undefined' && childrenDepth > 0) ||\r\n      nodeOptions.children\r\n    ) {\r\n      const childrenOptions =\r\n        typeof nodeOptions.children === 'boolean' ? {} : nodeOptions.children;\r\n      apiCall[1] = function* getChildren() {\r\n        try {\r\n          return yield cachedSearch.getNode(\r\n            {\r\n              depth:\r\n                childrenOptions.depth !== undefined\r\n                  ? childrenOptions.depth\r\n                  : childrenDepth,\r\n              path,\r\n              entryFields: childrenOptions.fields || fields || undefined,\r\n              entryLinkDepth:\r\n                typeof childrenOptions.linkDepth !== 'undefined'\r\n                  ? childrenOptions.linkDepth\r\n                  : typeof linkDepth !== 'undefined'\r\n                  ? linkDepth\r\n                  : entryLinkDepth,\r\n              language,\r\n              versionStatus,\r\n            },\r\n            project\r\n          );\r\n        } catch (ex) {\r\n          log.info('Problem fetching children', ex);\r\n          return [];\r\n        }\r\n      };\r\n    }\r\n\r\n    if (\r\n      (typeof nodeOptions?.siblings === 'undefined' && doNavigation.siblings) ||\r\n      nodeOptions.siblings\r\n    ) {\r\n      apiCall[2] = function* getSiblings() {\r\n        try {\r\n          return yield cachedSearch.getSiblings(\r\n            {\r\n              id: pathNode.id,\r\n              entryFields: nodeOptions?.siblings?.fields || fields || undefined,\r\n              entryLinkDepth:\r\n                typeof nodeOptions?.siblings?.linkDepth !== 'undefined'\r\n                  ? nodeOptions.siblings.linkDepth\r\n                  : typeof linkDepth !== 'undefined'\r\n                  ? linkDepth\r\n                  : entryLinkDepth,\r\n              includeInMenu: true,\r\n              language,\r\n              versionStatus,\r\n            },\r\n            project\r\n          );\r\n        } catch (ex) {\r\n          log.info('Problem fetching siblings', ex);\r\n          return [];\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  const isTreeLoaded = yield select(hasNavigationTree);\r\n  if (!isTreeLoaded && (doNavigation === true || doNavigation.tree))\r\n    apiCall[3] = function* getNodeTree() {\r\n      if (typeof window !== 'undefined') {\r\n        return yield put({\r\n          type: GET_NODE_TREE,\r\n          treeDepth:\r\n            doNavigation === true ||\r\n            !doNavigation.tree ||\r\n            doNavigation.tree === true\r\n              ? 2\r\n              : doNavigation.tree,\r\n        });\r\n      } else {\r\n        return yield call(ensureNodeTreeSaga);\r\n      }\r\n    };\r\n\r\n  const [loadAncestors, loadChildren, loadSiblings, loadTree] = apiCall;\r\n  const [ancestors, nodeWithChildren, siblings] = yield all([\r\n    loadAncestors(),\r\n    loadChildren(),\r\n    loadSiblings(),\r\n    loadTree(),\r\n  ]);\r\n  return [ancestors, nodeWithChildren?.children, siblings];\r\n}\r\n\r\nfunction* setRouteEntry(\r\n  entry,\r\n  node,\r\n  ancestors,\r\n  siblings,\r\n  entryMapper,\r\n  notFound = false,\r\n  remapEntry = false\r\n) {\r\n  const entrySys = (entry && entry.sys) || {};\r\n\r\n  const currentEntryId = yield select(selectRouteEntryEntryId);\r\n  const currentEntryLang = yield select(selectRouteEntryLanguage);\r\n  const mappedEntry =\r\n    currentEntryId === entrySys.id &&\r\n    currentEntryLang === entrySys.language &&\r\n    remapEntry === false\r\n      ? (yield select(selectMappedEntry, 'js')) || {}\r\n      : yield mapRouteEntry(entryMapper, {\r\n          ...node,\r\n          entry,\r\n          ancestors,\r\n          siblings,\r\n        });\r\n\r\n  yield all([\r\n    put({\r\n      type: SET_ENTRY,\r\n      id: entrySys.id,\r\n      entry,\r\n      mappedEntry,\r\n      node,\r\n      notFound,\r\n    }),\r\n    ancestors &&\r\n      put({\r\n        type: SET_ANCESTORS,\r\n        ancestors,\r\n      }),\r\n    siblings &&\r\n      put({\r\n        type: SET_SIBLINGS,\r\n        siblings,\r\n      }),\r\n  ]);\r\n}\r\n\r\nfunction* mapRouteEntry(entryMapper, node) {\r\n  try {\r\n    if (typeof entryMapper === 'function') {\r\n      const state = yield select();\r\n      const mappedEntry = yield call(entryMapper, node, state);\r\n      return mappedEntry;\r\n    }\r\n  } catch (e) {\r\n    log.error(...['Error running entryMapper:', e, e.stack]);\r\n  }\r\n  return;\r\n}\r\n\r\nfunction* do404() {\r\n  yield call(clientReloadHitServer);\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n  });\r\n}\r\n\r\nfunction* clientReloadHitServer() {\r\n  const stateEntry = yield select(selectRouteEntry);\r\n\r\n  // If in client and there is a stateEntry.sys field reload the page,\r\n  // on the 2nd load stateEntry.sys should be null at this point,\r\n  // we do not wish to reload again and get stuck in an infinite reloading loop\r\n  if (typeof window !== 'undefined' && (stateEntry?.sys || null)) {\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nfunction* do500(error) {\r\n  yield put({\r\n    type: SET_ENTRY,\r\n    id: null,\r\n    entry: null,\r\n    notFound: true,\r\n    isError: true,\r\n    error,\r\n    statusCode: error && error.status ? error.status : 500,\r\n  });\r\n}\r\n\r\nfunction* reduxInjectorSaga(injectorFn) {\r\n  if (typeof injectorFn === 'function') {\r\n    const { key, reducer, saga } = yield injectorFn();\r\n    reduxInjector({ key, reducer, saga });\r\n  }\r\n}\r\n","import { to } from 'await-to-js';\r\nimport { put, select, takeEvery } from 'redux-saga/effects';\r\nimport { setRoute } from '~/routing/redux/actions';\r\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\r\nimport { queryParams } from '~/util/navigation';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  REGISTER_USER_FAILED,\r\n} from '../types';\r\n\r\nexport const registerSagas = [\r\n  takeEvery(REGISTER_USER, registerSaga),\r\n  takeEvery(REGISTER_USER_SUCCESS, redirectSaga),\r\n];\r\n\r\nfunction* registerSaga({ user, mappers }) {\r\n  let requestBody = user;\r\n  // Allow use of request mapper to take a user object\r\n  // of any format and return the payload for the api request\r\n  if (mappers && mappers.request && typeof mappers.request === 'function') {\r\n    requestBody = yield mappers.request(user);\r\n  }\r\n\r\n  // Make POST call to register API\r\n  const response = yield fetch('/account/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(requestBody),\r\n  });\r\n\r\n  if (response.ok) {\r\n    let mappedResponse;\r\n    const [, responseBody] = yield to(response.json());\r\n    if (responseBody) {\r\n      // Allow use of response mapper to convert the successful user object\r\n      // from the api response body into a user object of any format\r\n      if (\r\n        mappers &&\r\n        mappers.response &&\r\n        typeof mappers.response === 'function'\r\n      ) {\r\n        mappedResponse = yield mappers.response(responseBody);\r\n      }\r\n      // Update user object with mappedResponse or responseBody\r\n      yield put({\r\n        type: REGISTER_USER_SUCCESS,\r\n        user: mappedResponse || responseBody,\r\n      });\r\n    } else {\r\n      // OK response but unable to parse the response body\r\n      yield put({\r\n        type: REGISTER_USER_FAILED,\r\n        error: {\r\n          message:\r\n            'Unable to parse the created user from the register service response',\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    // Not OK responses, these can be due to service availability\r\n    // or status codes echoed from the responses received from\r\n    // management api when registering the user\r\n    const [, errorResponse] = yield to(response.json());\r\n    const error = (errorResponse && errorResponse.error) || errorResponse || {};\r\n    // Get something meaningful from the response if there is no message in the body\r\n    if (!error.message) {\r\n      error.message = `Registration service: ${response.statusText}`;\r\n      error.status = response.status;\r\n    }\r\n    yield put({\r\n      type: REGISTER_USER_FAILED,\r\n      error,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* redirectSaga() {\r\n  // Check if querystring contains a redirect_uri\r\n  const currentQs = queryParams(yield select(selectCurrentSearch));\r\n  const redirectUri = currentQs.redirect_uri || currentQs.redirect;\r\n\r\n  // We must use redux based navigation to preserve the registration state\r\n  if (redirectUri) yield put(setRoute(redirectUri));\r\n}\r\n","const PAP_URL = 'https://pap.zengenti.com';\r\n\r\nconst USER_ENVS_URI = 'my-environments';\r\nconst USER_RESEND_VERIFICATION_URI = 'account/verify/resend';\r\nconst USER_REQUEST_PASSWORD_RESET_URI = 'account/reset';\r\nconst USER_RESET_PASSWORD_URI = 'account/reset/password';\r\n\r\nconst USER_ENVS_URL = `${PAP_URL}/${USER_ENVS_URI}`;\r\n\r\nconst BASE_OPTIONS = {\r\n  method: 'GET',\r\n  headers: { 'Content-Type': 'application/json' },\r\n};\r\n\r\nexport class UserHelper {\r\n  static async GetUsersEnvironments(securityToken) {\r\n    const options = {\r\n      ...BASE_OPTIONS,\r\n      headers: {\r\n        'x-security-token': securityToken,\r\n      },\r\n    };\r\n    return await UserHelper.get(USER_ENVS_URL, options);\r\n  }\r\n  static async ResendUserVerification(userEmail) {\r\n    const options = {\r\n      ...BASE_OPTIONS,\r\n    };\r\n    return await UserHelper.get(\r\n      `/${USER_RESEND_VERIFICATION_URI}?user=${userEmail}`,\r\n      options\r\n    );\r\n  }\r\n  static async RequestPasswordReset(userEmailObject) {\r\n    const options = {\r\n      ...BASE_OPTIONS,\r\n      body: JSON.stringify(userEmailObject),\r\n    };\r\n    options.method = 'POST';\r\n\r\n    return await UserHelper.get(`/${USER_REQUEST_PASSWORD_RESET_URI}`, options);\r\n  }\r\n  static async ResetPassword(resetPasswordObject) {\r\n    const options = {\r\n      ...BASE_OPTIONS,\r\n      body: JSON.stringify(resetPasswordObject),\r\n    };\r\n    options.method = 'POST';\r\n\r\n    return await UserHelper.get(`/${USER_RESET_PASSWORD_URI}`, options);\r\n  }\r\n\r\n  static async get(url, options = BASE_OPTIONS) {\r\n    try {\r\n      const responseBody = await api(url, options);\r\n      return responseBody;\r\n    } catch (err) {\r\n      return { error: { message: err.message } };\r\n    }\r\n  }\r\n}\r\n\r\nasync function api(url, options) {\r\n  return fetch(url, options)\r\n    .then(async response => {\r\n      return response.json().then(data => data);\r\n    })\r\n    .catch(error => {\r\n      throw error;\r\n    });\r\n}\r\n","import { put, takeEvery, select } from 'redux-saga/effects';\r\nimport { to } from 'await-to-js';\r\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\r\nimport { UserHelper } from '~/user/util/userHelper';\r\nimport { selectClientCredentials } from '../selectors';\r\nimport {\r\n  REQUEST_USER_PASSWORD_RESET,\r\n  RESET_USER_PASSWORD,\r\n  REQUEST_USER_PASSWORD_RESET_ERROR,\r\n  REQUEST_USER_PASSWORD_RESET_SENDING,\r\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\r\n  RESET_USER_PASSWORD_ERROR,\r\n  RESET_USER_PASSWORD_SENDING,\r\n  RESET_USER_PASSWORD_SUCCESS,\r\n  CHANGE_USER_PASSWORD,\r\n  CHANGE_USER_PASSWORD_SENDING,\r\n  CHANGE_USER_PASSWORD_SUCCESS,\r\n  CHANGE_USER_PASSWORD_ERROR,\r\n} from '../types';\r\n\r\nexport const resetPasswordSagas = [\r\n  takeEvery(REQUEST_USER_PASSWORD_RESET, requestPasswordResetSaga),\r\n  takeEvery(RESET_USER_PASSWORD, resetPasswordSaga),\r\n  takeEvery(CHANGE_USER_PASSWORD, changePasswordSaga),\r\n];\r\n\r\nfunction* requestPasswordResetSaga(action) {\r\n  const userEmailObject = action.userEmailObject;\r\n  yield put({\r\n    type: REQUEST_USER_PASSWORD_RESET_SENDING,\r\n  });\r\n  if (userEmailObject && userEmailObject.userEmail) {\r\n    try {\r\n      const passwordResetRequestResponse =\r\n        yield UserHelper.RequestPasswordReset(userEmailObject);\r\n\r\n      if (passwordResetRequestResponse) {\r\n        if (!passwordResetRequestResponse.error) {\r\n          yield put({\r\n            type: REQUEST_USER_PASSWORD_RESET_SUCCESS,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: REQUEST_USER_PASSWORD_RESET_ERROR,\r\n            error: passwordResetRequestResponse.error.message,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: REQUEST_USER_PASSWORD_RESET_ERROR,\r\n          error: 'No response from server',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({\r\n        type: REQUEST_USER_PASSWORD_RESET_ERROR,\r\n        error: error && error.toString(),\r\n      });\r\n    }\r\n  } else {\r\n    yield put({\r\n      type: REQUEST_USER_PASSWORD_RESET_ERROR,\r\n      error: 'Invalid object',\r\n    });\r\n  }\r\n}\r\n\r\nfunction* resetPasswordSaga(action) {\r\n  const resetPasswordObject = action.resetPasswordObject;\r\n\r\n  yield put({\r\n    type: RESET_USER_PASSWORD_SENDING,\r\n  });\r\n  if (resetPasswordObject.token && resetPasswordObject.password) {\r\n    try {\r\n      const resetPasswordResponse = yield UserHelper.ResetPassword(\r\n        resetPasswordObject\r\n      );\r\n\r\n      if (resetPasswordResponse) {\r\n        if (!resetPasswordResponse.error) {\r\n          yield put({\r\n            type: RESET_USER_PASSWORD_SUCCESS,\r\n          });\r\n        } else {\r\n          const error =\r\n            (resetPasswordResponse.error.data &&\r\n              resetPasswordResponse.error.data.length > 0 &&\r\n              resetPasswordResponse.error.data[0].message) ||\r\n            resetPasswordResponse.error.message;\r\n          yield put({\r\n            type: RESET_USER_PASSWORD_ERROR,\r\n            error,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: RESET_USER_PASSWORD_ERROR,\r\n          error: 'No response from server',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({\r\n        type: RESET_USER_PASSWORD_ERROR,\r\n        error: error && error.toString(),\r\n      });\r\n    }\r\n  } else {\r\n    yield put({\r\n      type: RESET_USER_PASSWORD_ERROR,\r\n      error: 'Invalid object',\r\n    });\r\n  }\r\n}\r\n\r\n// userId\r\n// existingPassword\r\n// newPassword\r\nfunction* changePasswordSaga(action) {\r\n  if (\r\n    !action ||\r\n    !action.userId ||\r\n    !action.currentPassword ||\r\n    !action.newPassword\r\n  ) {\r\n    yield put({\r\n      type: CHANGE_USER_PASSWORD_ERROR,\r\n      error: 'Invalid action object sent to changePassword saga',\r\n    });\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const changePasswordObject = {\r\n      userId: action.userId,\r\n      existing: action.currentPassword,\r\n      new: action.newPassword,\r\n    };\r\n\r\n    yield put({\r\n      type: CHANGE_USER_PASSWORD_SENDING,\r\n    });\r\n    const clientCredentials = yield select(selectClientCredentials, 'js');\r\n    const client = yield getManagementApiClient({ ...clientCredentials });\r\n\r\n    const [err, res] = yield to(\r\n      client.security.users.updatePassword(changePasswordObject)\r\n    );\r\n\r\n    if (err) {\r\n      const error =\r\n        (err?.data?.data?.length > 0 && err.data.data[0].message) ||\r\n        err?.data?.message;\r\n      yield put({\r\n        type: CHANGE_USER_PASSWORD_ERROR,\r\n        error,\r\n      });\r\n      return;\r\n    }\r\n\r\n    // // eslint-disable-next-line no-console\r\n    // console.log(changePasswordObject);\r\n    // // eslint-disable-next-line no-console\r\n    // console.log(userCredentialsObject);\r\n    yield put({\r\n      type: CHANGE_USER_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: CHANGE_USER_PASSWORD_ERROR,\r\n      error: error && error.toString(),\r\n    });\r\n  }\r\n}\r\n","import { loginSagas } from './login';\r\nimport { registerSagas } from './register';\r\nimport { resetPasswordSagas } from './resetPassword';\r\n\r\nexport const userSagas = [\r\n  ...loginSagas,\r\n  ...registerSagas,\r\n  ...resetPasswordSagas,\r\n];\r\n","// index.js\r\nimport { all } from 'redux-saga/effects';\r\nimport { navigationSagas } from './navigation';\r\nimport { routingSagas } from '~/routing/redux/sagas';\r\nimport { userSagas } from '~/user/redux/sagas';\r\n\r\nexport default function (featureSagas = []) {\r\n  return function* rootSaga() {\r\n    const subSagas = [...routingSagas, ...navigationSagas, ...userSagas];\r\n    yield all([...subSagas, ...featureSagas]);\r\n  };\r\n}\r\n","const servers = SERVERS; /* global SERVERS */\r\nconst alias = servers.alias.toLowerCase();\r\nconst publicUri = PUBLIC_URI; /* global PUBLIC_URI */\r\nconst projects = PROJECTS; /* global PROJECTS */\r\n\r\n// return a projectId via the request hostname\r\nconst pickProject = (hostname, query) => {\r\n  // if localhost we can only infer via a querystring, and take your word for it\r\n  if (hostname == 'localhost') {\r\n    return (query && query.p) || projects[0].id;\r\n  }\r\n\r\n  // if hostname is the actual public uri we can return the first project from the list\r\n  if (hostname == publicUri) {\r\n    return projects[0].id;\r\n  }\r\n\r\n  let project = 'unknown';\r\n\r\n  // // go through all the defined projects\r\n  // Object.entries(projects).map(([, p]) => {\r\n  const p = projects[0];\r\n\r\n  // check if we're accessing via the project's public uri\r\n  if (hostname.includes(p.publicUri)) project = p.id;\r\n\r\n  // the url structure is different for website (we don't prefix)\r\n  if (p.id.startsWith('website')) {\r\n    // check for internal and external hostnames\r\n    // we check live and preview distinctly so our rule does not clash with\r\n    // hostnames that use a project prefix\r\n    if (\r\n      hostname.includes(`live-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`live.${alias}.contensis.cloud`) ||\r\n      hostname.includes(`preview-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`preview.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  } else {\r\n    // check for internal and external hostnames, prefixed with the projectId\r\n    if (\r\n      hostname.includes(`${p.id.toLowerCase()}-${alias}.cloud.contensis.com`) ||\r\n      hostname.includes(`${p.id.toLowerCase()}.${alias}.contensis.cloud`)\r\n    )\r\n      project = p.id;\r\n  }\r\n  // });\r\n  return project === 'unknown' ? p.id : project;\r\n};\r\n\r\nexport default pickProject;\r\n","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport { AppRootProps } from '../routing/routes';\r\nimport { RouteLoader } from '../routing';\r\n\r\nconst AppRoot = (props: AppRootProps) => {\r\n  return <RouteLoader {...props} />;\r\n};\r\n\r\nexport default hot(module)(AppRoot);\r\n"],"names":["storeSurrogateKeys","response","keys","headers","get","map","reduxStore","dispatch","setSurrogateKeys","url","getClientConfig","project","config","DELIVERY_API_CONFIG","responseHandler","projectId","window","defaultHeaders","PROXY_DELIVERY_API","rootUrl","DeliveryApi","getClientSideVersionStatus","currentHostname","location","hostname","getVersionStatusFromHostname","indexOf","endsWith","search","query","linkDepth","env","client","Client","create","entries","getClient","deliveryApiStatus","baseConfig","versionStatus","getEntry","id","deliveryApi","CacheNode","constructor","key","value","next","prev","LruCache","limit","head","tail","size","node","remove","setHead","set","CachedSearch","cache","taxonomyLookup","request","JSON","stringify","toString","searchUsingPost","clientConfig","getContentType","contentTypes","getTaxonomyNode","taxonomy","resolveChildren","then","extendTaxonomyNode","getRootNode","options","nodes","getRoot","getNode","path","getAncestors","getChildren","getSiblings","execute","promise","catch","cachedSearch","selectedHistory","createBrowserHistory","createMemoryHistory","history","browserHistory","navigationSagas","takeEvery","GET_NODE_TREE","ensureNodeTreeSaga","action","state","select","hasNavigationTree","deliveryApiVersionStatus","selectVersionStatus","selectCurrentProject","depth","treeDepth","put","type","SET_NODE_TREE","GET_NODE_TREE_ERROR","ex","error","sys","contentTypeId","dataFormat","filename","includeInSearch","slug","uri","Fields","entryTitle","entryDescription","keywords","wildcard","fieldExpression","field","operator","weight","Array","isArray","equalToOrIn","Op","defaultExpressions","equalTo","arr","length","in","routeEntryByFieldsQuery","language","fields","Query","routingSagas","SET_NAVIGATION_PATH","getRouteSaga","SET_ROUTE","setRouteSaga","payload","method","args","entry","withEvents","routes","ContentTypeMappings","staticRoute","route","injectRedux","call","reduxInjectorSaga","pathNode","ancestors","children","siblings","contentTypeMapping","appsays","requireLogin","onRouteLoad","entryLinkDepth","undefined","setContentTypeLimits","find","ct","nodeOptions","routeEntry","selectRouteEntry","routeNode","selectCurrentNode","currentPath","isPreview","startsWith","defaultLang","customRouting","fetchNode","statePath","refetchNode","UPDATE_LOADING_STATE","isLoading","setRouteEntry","selectCurrentAncestors","selectCurrentSiblings","splitPath","split","entryGuid","previewEntry","entryFields","findContentTypeMapping","items","resolveCurrentNodeOrdinates","entryMapper","onRouteLoaded","handleRequiresLoginSaga","preventScrollTop","scroll","top","do404","e","log","stack","do500","apiCall","doNavigation","customNavigation","info","childrenDepth","childrenOptions","includeInMenu","isTreeLoaded","tree","getNodeTree","loadAncestors","loadChildren","loadSiblings","loadTree","nodeWithChildren","all","notFound","remapEntry","entrySys","currentEntryId","selectRouteEntryEntryId","currentEntryLang","selectRouteEntryLanguage","mappedEntry","selectMappedEntry","mapRouteEntry","SET_ENTRY","SET_ANCESTORS","SET_SIBLINGS","clientReloadHitServer","stateEntry","reload","isError","statusCode","status","injectorFn","reducer","saga","reduxInjector","registerSagas","REGISTER_USER","registerSaga","REGISTER_USER_SUCCESS","redirectSaga","user","mappers","requestBody","fetch","Accept","body","ok","mappedResponse","responseBody","to","json","REGISTER_USER_FAILED","message","errorResponse","statusText","currentQs","queryParams","selectCurrentSearch","redirectUri","redirect_uri","redirect","setRoute","PAP_URL","USER_ENVS_URI","USER_RESEND_VERIFICATION_URI","USER_REQUEST_PASSWORD_RESET_URI","USER_RESET_PASSWORD_URI","USER_ENVS_URL","BASE_OPTIONS","UserHelper","GetUsersEnvironments","securityToken","ResendUserVerification","userEmail","RequestPasswordReset","userEmailObject","ResetPassword","resetPasswordObject","api","err","data","resetPasswordSagas","REQUEST_USER_PASSWORD_RESET","requestPasswordResetSaga","RESET_USER_PASSWORD","resetPasswordSaga","CHANGE_USER_PASSWORD","changePasswordSaga","REQUEST_USER_PASSWORD_RESET_SENDING","passwordResetRequestResponse","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","token","password","resetPasswordResponse","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","userId","currentPassword","newPassword","CHANGE_USER_PASSWORD_ERROR","changePasswordObject","existing","new","CHANGE_USER_PASSWORD_SENDING","clientCredentials","selectClientCredentials","getManagementApiClient","res","security","users","updatePassword","CHANGE_USER_PASSWORD_SUCCESS","userSagas","loginSagas","featureSagas","rootSaga","subSagas","servers","SERVERS","alias","toLowerCase","publicUri","PUBLIC_URI","projects","PROJECTS","pickProject","p","includes","AppRoot","props","React","RouteLoader"],"mappings":"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"}