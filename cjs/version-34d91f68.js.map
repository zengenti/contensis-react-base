{"version":3,"file":"version-34d91f68.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\n","import { Draft, produce } from 'immer';\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\n\nconst initialState = {\n  root: null,\n  error: {\n    isError: false,\n    message: null,\n  },\n  isReady: false,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_NODE_TREE: {\n      state.root = action.nodes;\n      state.isReady = true;\n      return;\n    }\n    case GET_NODE_TREE_ERROR: {\n      state.error.isError = true;\n      state.error.message = action.error || 'Unknown error occurred';\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","import { Draft, original, produce } from 'immer';\n\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_ANCESTORS,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SIBLINGS,\n  SET_SURROGATE_KEYS,\n  UPDATE_LOADING_STATE,\n} from './types';\n\nconst initialState = {\n  canonicalPath: null,\n  currentHostname: null,\n  currentPath: '/',\n  currentNode: {},\n  currentNodeAncestors: [],\n  currentProject: 'unknown',\n  entryID: null,\n  entry: null,\n  error: undefined,\n  isError: false,\n  isLoading: false,\n  location: {},\n  mappedEntry: null,\n  notFound: false,\n  staticRoute: null,\n  statusCode: 200,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_ANCESTORS: {\n      state.currentNodeAncestors = action.ancestors;\n      return;\n    }\n    case SET_ENTRY: {\n      const {\n        entry,\n        error,\n        mappedEntry,\n        node = {},\n        isError = false,\n        isLoading = false,\n        notFound = false,\n        statusCode,\n        currentPath,\n      } = action;\n\n      let defaultStatus = 200;\n      if (notFound === true && isError === false) defaultStatus = 404;\n      else if (isError === true) defaultStatus = statusCode || 500;\n\n      if (!entry) {\n        state.entryID = null;\n        state.entry = null;\n        state.error = error;\n        state.mappedEntry = null;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n        state.canonicalPath = currentPath;\n      } else {\n        state.entryID = action.id;\n        state.entry = entry;\n        state.error = error;\n        state.isError = isError;\n        state.isLoading = isLoading;\n        state.notFound = notFound;\n        state.statusCode = statusCode || defaultStatus;\n        state.canonicalPath = entry.sys.uri || currentPath;\n\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\n          state.mappedEntry = mappedEntry;\n          state.entry = { sys: entry.sys };\n        }\n      }\n\n      if (!node) {\n        state.currentNode = null;\n      } else {\n        // On Set Node, we reset all dependants.\n        state.currentNode = node;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { entry, ...nodeWithoutEntry } = node; // We have the entry stored elsewhere, so lets not keep it twice.\n        state.currentNode = nodeWithoutEntry;\n      }\n\n      return;\n    }\n    case UPDATE_LOADING_STATE: {\n      state.isLoading = action.isLoading;\n      return;\n    }\n    case SET_NAVIGATION_PATH: {\n      let staticRoute = {} as any;\n      if (action.staticRoute) {\n        staticRoute = { ...action.staticRoute };\n      }\n      if (action.path) {\n        // Don't run a path update on initial load as we allready should have it in redux\n        const entryUri = state?.entry?.sys?.uri;\n        if (entryUri !== action.path) {\n          state.currentPath = action.path;\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, element: null },\n          };\n          state.isLoading = typeof window !== 'undefined';\n        } else {\n          state.location = action.location;\n          state.staticRoute = {\n            ...staticRoute,\n            route: { ...staticRoute.route, element: null },\n          };\n        }\n      }\n      return;\n    }\n    case SET_ROUTE: {\n      state.nextPath = action.path;\n      return;\n    }\n    case SET_SIBLINGS: {\n      // Can be null in some cases like the homepage.\n      let currentNodeSiblingParent = null;\n      if (action.siblings && action.siblings.length > 0) {\n        currentNodeSiblingParent = action.siblings[0].parentId;\n      }\n\n      state.currentNodeSiblings = action.siblings;\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\n      return;\n    }\n    case SET_SURROGATE_KEYS: {\n      const newKeys = (action.keys || '').split(' ');\n      const stateKeys = state.surrogateKeys\n        ? original(state.surrogateKeys)\n        : [];\n      const allKeys = [...stateKeys, ...newKeys];\n      const uniqueKeys = [...new Set(allKeys)];\n      state.surrogateKeys = uniqueKeys;\n      return;\n    }\n    case SET_TARGET_PROJECT: {\n      state.currentProject = action.project;\n      state.allowedGroups = action.allowedGroups;\n      state.currentHostname = action.hostname;\n      return;\n    }\n    default:\n      return state;\n  }\n}, initialState);\n","const VERSION_PREFIX = '@VERSION/';\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\n","import { Draft, produce } from 'immer';\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\n\nconst initialState = {\n  commitRef: null,\n  buildNo: null,\n  contensisVersionStatus: null as 'latest' | 'published' | null,\n};\n\nexport default produce((state: Draft<any>, action) => {\n  switch (action.type) {\n    case SET_VERSION_STATUS: {\n      state.contensisVersionStatus = action.status;\n      return;\n    }\n    case SET_VERSION: {\n      state.commitRef = action.commitRef;\n      state.buildNo = action.buildNo;\n      return;\n    }\n    default:\n      return;\n  }\n}, initialState);\n","/**\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n/* eslint-disable no-unused-vars */\nconst routerMiddleware = history => store => next => action => {\n  if (action.type !== 'CALL_HISTORY_METHOD') {\n    return next(action);\n  }\n\n  const {\n    payload: { method, args },\n  } = action;\n  history[method](...args);\n};\n\nexport default routerMiddleware;\n","import {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore,\n  Action,\n  Store,\n  StoreEnhancer,\n} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware, { END } from 'redux-saga';\nimport { createInjectorsEnhancer } from 'redux-injectors';\n\n// Core reducers\nimport NavigationReducer from '../reducers/navigation';\nimport RoutingReducer from '~/routing/redux/reducers';\nimport UserReducer from '~/user/redux/reducers';\nimport VersionReducer from '../reducers/version';\nimport routerMiddleware from './routerMiddleware';\nimport { AppState } from '../appstate';\nimport { History, MemoryHistory } from 'history';\nimport { StateType } from '~/config';\n\nexport let reduxStore;\n\n/* eslint-disable no-underscore-dangle */\ndeclare let window: Window &\n  typeof globalThis & {\n    __REDUX_DEVTOOLS_EXTENSION__: any;\n  };\n\nexport default async (\n  featureReducers: any,\n  initialState: AppState,\n  history: History | MemoryHistory,\n  stateType: StateType\n) => {\n  let reduxDevToolsMiddleware = f => f;\n\n  if (typeof window != 'undefined') {\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n      : f => f;\n  }\n\n  const sagaMiddleware = createSagaMiddleware();\n\n  const reducers = {\n    navigation: NavigationReducer,\n    routing: RoutingReducer,\n    user: UserReducer,\n    version: VersionReducer,\n    ...featureReducers,\n  };\n\n  // Reassign the combiner and fromJS functions when\n  // stateType is 'immutable' with dynamic imports\n  let combiner = combineReducers;\n  let fromJS: any = (obj: any) => obj;\n  globalThis.STATE_TYPE = stateType;\n\n  if (stateType === 'immutable') {\n    globalThis.immutable = await import(\n      /* webpackChunkName: \"immutable\" */ 'immutable'\n    );\n\n    fromJS = (\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\n    ).default;\n\n    combiner = (\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\n    ).combineReducers;\n  }\n\n  const createReducer = (injectedReducers = {}) => {\n    const rootReducer = combiner<AppState>({\n      ...injectedReducers,\n      // other non-injected reducers go here\n      ...reducers,\n    });\n\n    return rootReducer;\n  };\n\n  const store = (initialState: AppState) => {\n    const runSaga = sagaMiddleware.run;\n\n    const middleware: StoreEnhancer<\n      {\n        dispatch: unknown;\n      },\n      unknown\n    > = compose(\n      applyMiddleware(\n        thunkMiddleware,\n        sagaMiddleware,\n        routerMiddleware(history)\n      ),\n      createInjectorsEnhancer({\n        createReducer,\n        runSaga,\n      }),\n      reduxDevToolsMiddleware\n    );\n\n    const store: Store<AppState, Action<any>> & {\n      runSaga?: typeof runSaga;\n      close?: () => void;\n    } = createStore<AppState, Action<any>, unknown, unknown>(\n      createReducer(),\n      initialState,\n      middleware\n    );\n\n    store.runSaga = runSaga;\n    store.close = () => store.dispatch(END);\n\n    return store;\n  };\n\n  reduxStore = store(fromJS(initialState));\n  return reduxStore;\n};\n","import { getImmutableOrJS as getIn } from '~/redux/util';\n\nexport const selectCommitRef = state => getIn(state, ['version', 'commitRef']);\n\nexport const selectBuildNumber = state => getIn(state, ['version', 'buildNo']);\n\nexport const selectVersionStatus = state =>\n  getIn(state, ['version', 'contensisVersionStatus']);\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","error","isError","message","isReady","produce","state","action","type","nodes","canonicalPath","currentHostname","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","undefined","isLoading","location","mappedEntry","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","sys","uri","Object","keys","length","nodeWithoutEntry","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","route","element","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblings","parentId","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","newKeys","split","stateKeys","surrogateKeys","original","allKeys","uniqueKeys","Set","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","globalThis","STATE_TYPE","immutable","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","selectCommitRef","getIn","selectBuildNumber","selectVersionStatus"],"mappings":"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"}