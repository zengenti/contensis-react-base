{"version":3,"file":"reducers-84b5db70.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\nexport const VERIFY_TWO_FA_TOKEN = `${ACTION_PREFIX}VERIFY_TWO_FA_TOKEN`;\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\n\nexport const REQUEST_USER_PASSWORD_RESET = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET`;\nexport const RESET_USER_PASSWORD = `${ACTION_PREFIX}RESET_USER_PASSWORD`;\nexport const REQUEST_USER_PASSWORD_RESET_SENDING = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SENDING`;\nexport const REQUEST_USER_PASSWORD_RESET_SUCCESS = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SUCCESS`;\nexport const REQUEST_USER_PASSWORD_RESET_ERROR = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_ERROR`;\nexport const RESET_USER_PASSWORD_SENDING = `${ACTION_PREFIX}RESET_USER_PASSWORD_SENDING`;\nexport const RESET_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}RESET_USER_PASSWORD_SUCCESS`;\nexport const RESET_USER_PASSWORD_ERROR = `${ACTION_PREFIX}RESET_USER_PASSWORD_ERROR`;\n\nexport const CHANGE_USER_PASSWORD = `${ACTION_PREFIX}CHANGE_USER_PASSWORD`;\nexport const CHANGE_USER_PASSWORD_SENDING = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SENDING`;\nexport const CHANGE_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SUCCESS`;\nexport const CHANGE_USER_PASSWORD_ERROR = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_ERROR`;\n","import { Draft, produce } from 'immer';\nimport { AppState } from '~/redux/appstate';\nimport {\n  REGISTER_USER,\n  REGISTER_USER_FAILED,\n  REGISTER_USER_SUCCESS,\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REQUEST_USER_PASSWORD_RESET_SENDING,\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\n  REQUEST_USER_PASSWORD_RESET_ERROR,\n  RESET_USER_PASSWORD_SENDING,\n  RESET_USER_PASSWORD_SUCCESS,\n  RESET_USER_PASSWORD_ERROR,\n  CHANGE_USER_PASSWORD_SENDING,\n  CHANGE_USER_PASSWORD_SUCCESS,\n  CHANGE_USER_PASSWORD_ERROR,\n} from './types';\n\nconst defaultAuthenticationState = {\n  requiresTwoFa: false,\n  clientCredentials: null,\n  errorMessage: null,\n  isAuthenticated: false,\n  isAuthenticationError: false,\n  isError: false,\n  isLoading: false,\n};\n\nconst defaultPasswordResetRequestValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultResetPasswordValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultChangePasswordValues = {\n  isSending: false,\n  sent: false,\n  error: null,\n};\n\nconst defaultRegistrationValues = {\n  isLoading: false,\n  success: false,\n  error: null,\n};\n\nexport const initialUserState = {\n  authenticationState: defaultAuthenticationState,\n  passwordResetRequest: defaultPasswordResetRequestValues,\n  resetPassword: defaultResetPasswordValues,\n  changePassword: defaultChangePasswordValues,\n  groups: [],\n};\n\nexport default produce((state: Draft<AppState['user']>, action) => {\n  switch (action.type) {\n    case LOGOUT_USER: {\n      return initialUserState;\n    }\n    case LOGIN_USER:\n    case SET_AUTHENTICATION_STATE: {\n      if (!action.authenticationState) {\n        action.authenticationState = defaultAuthenticationState;\n      }\n\n      const {\n        authenticationState: {\n          requiresTwoFa = false,\n          clientCredentials = null,\n          errorMessage = null,\n          isAuthenticated,\n          isAuthenticationError = false,\n          isError = false,\n          isLoading = action.type === LOGIN_USER,\n        },\n        user,\n      } = action;\n\n      // userObj is so we aren't trying to modify user prop directly, as it can be immutable\n      const userObj: any = {};\n      if (user) {\n        userObj.name =\n          `${user.firstName}${user.lastName ? ` ${user.lastName}` : ''}` ||\n          null;\n        userObj.isZengentiStaff = user.email.includes('@zengenti.com');\n      }\n\n      state = {\n        ...initialUserState,\n        ...(user || state),\n        ...userObj,\n        authenticationState: {\n          requiresTwoFa,\n          clientCredentials,\n          errorMessage,\n          isAuthenticated:\n            isAuthenticated || state?.authenticationState?.isAuthenticated,\n          isAuthenticationError,\n          isError,\n          isLoading,\n        },\n      };\n      return state;\n    }\n    // REGISTER_USER is the trigger to set the user.registration initial state\n    // and will set user.registration.isLoading to true\n    // REGISTER_USER_FAILED will unset user.registration.isLoading and will set\n    // the value in user.registration.error\n    // REGISTER_USER_SUCCESS will unset user.registration.isLoading and will\n    // set user.registration to the created user from the api response\n    case REGISTER_USER:\n    case REGISTER_USER_FAILED:\n    case REGISTER_USER_SUCCESS: {\n      const { error, user } = action;\n\n      // Set registration object from the supplied action.user\n      // so we can call these values back later\n      state.registration = (user ||\n        state.registration ||\n        defaultRegistrationValues) as typeof defaultRegistrationValues;\n\n      // Set registration flags so the UI can track the status\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\n      state.registration.error = error || false;\n      state.registration.isLoading = action.type === REGISTER_USER;\n      return;\n    }\n    case REQUEST_USER_PASSWORD_RESET_SENDING:\n      if (state.passwordResetRequest) {\n        state.passwordResetRequest = { ...defaultPasswordResetRequestValues };\n        state.passwordResetRequest.isSending = true;\n      }\n      return;\n    case REQUEST_USER_PASSWORD_RESET_SUCCESS:\n      if (state.passwordResetRequest) {\n        state.passwordResetRequest.isSending = false;\n        state.passwordResetRequest.sent = true;\n      }\n      return;\n    case REQUEST_USER_PASSWORD_RESET_ERROR:\n      if (state.passwordResetRequest) {\n        state.passwordResetRequest.isSending = false;\n        state.passwordResetRequest.error = action.error;\n      }\n      return;\n    case RESET_USER_PASSWORD_SENDING:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = true;\n      }\n      return;\n    case RESET_USER_PASSWORD_SUCCESS:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = false;\n        state.resetPassword.sent = true;\n      }\n      return;\n    case RESET_USER_PASSWORD_ERROR:\n      if (state.resetPassword) {\n        state.resetPassword.isSending = false;\n        state.resetPassword.error = action.error;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_SENDING:\n      if (state.changePassword) {\n        state.changePassword.isSending = true;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_SUCCESS:\n      if (state.changePassword) {\n        state.changePassword.isSending = false;\n        state.changePassword.sent = true;\n      }\n      return;\n    case CHANGE_USER_PASSWORD_ERROR:\n      if (state.changePassword) {\n        state.changePassword.isSending = false;\n        state.changePassword.error = action.error;\n      }\n      return;\n    default:\n      return;\n  }\n}, initialUserState);\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","VERIFY_TWO_FA_TOKEN","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","REQUEST_USER_PASSWORD_RESET","RESET_USER_PASSWORD","REQUEST_USER_PASSWORD_RESET_SENDING","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_SENDING","CHANGE_USER_PASSWORD_SUCCESS","CHANGE_USER_PASSWORD_ERROR","defaultAuthenticationState","requiresTwoFa","clientCredentials","errorMessage","isAuthenticated","isAuthenticationError","isError","isLoading","defaultPasswordResetRequestValues","isSending","sent","error","defaultResetPasswordValues","defaultChangePasswordValues","defaultRegistrationValues","success","initialUserState","authenticationState","passwordResetRequest","resetPassword","changePassword","groups","produce","state","action","type","_state","_state$authentication","user","userObj","name","firstName","lastName","isZengentiStaff","email","includes","registration"],"mappings":"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"}