{"version":3,"file":"RouteLoader-c06dccd5.js","sources":["../src/routing/httpContext.ts","../src/util/mergeStaticRoutes.ts","../src/routing/components/Redirect.tsx","../src/routing/components/Status.tsx","../src/routing/components/NotFound.tsx","../src/routing/components/StaticRouteLoader.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport type HttpContextValues = {\n  statusCode?: number;\n  url?: string;\n};\n\nexport const HttpContext = createContext<HttpContextValues>({});\nexport const useHttpContext = () => {\n  return useContext(HttpContext);\n};\n","import { StaticRoute } from '../';\n\nexport const mergeStaticRoutes = matchedStaticRoute => {\n  let finalRoute: StaticRoute = {};\n  for (const [i, route] of matchedStaticRoute.entries()) {\n    const staticRouteCopy = { ...route.route };\n    if (i === matchedStaticRoute.length - 1) {\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path ? route.route.path : ''\n        }`,\n      };\n      matchedStaticRoute[i].route = finalRoute;\n    } else {\n      delete staticRouteCopy.children;\n      delete staticRouteCopy.index;\n      delete staticRouteCopy.path;\n      delete staticRouteCopy.component;\n      delete staticRouteCopy.element;\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path\n            ? route.route.path.endsWith('/')\n              ? route.route.path\n              : route.route.path + '/'\n            : ''\n        }`,\n      };\n    }\n  }\n};\n","import React, { PropsWithChildren } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useHttpContext } from '../httpContext';\n\nexport const Redirect = ({\n  code,\n  to,\n}: PropsWithChildren<{ code: 301 | 302; to: string }>) => {\n  const httpContext = useHttpContext();\n  if (httpContext) {\n    httpContext.statusCode = code;\n    httpContext.url = to;\n  }\n  return <Navigate to={to} />;\n};\n","import React, { PropsWithChildren } from 'react';\nimport { useHttpContext } from '../httpContext';\n\nexport const Status = ({\n  code,\n  children,\n}: PropsWithChildren<{ code: number }>) => {\n  const httpContext = useHttpContext();\n  if (httpContext) {\n    httpContext.statusCode = code;\n  }\n  return <>{children}</>;\n};\n","import React from 'react';\n\nconst NotFound = ({\n  statusCode,\n  statusText,\n}: {\n  statusCode: number;\n  statusText: string;\n}) => (\n  <>\n    <header>\n      <h1>{statusCode || '404'} Page Not Found</h1>\n      {statusText && (\n        <h2\n          style={{\n            background: '#eee',\n            color: '#666',\n            fontSize: '100%',\n            padding: '10px',\n          }}\n        >\n          {statusText}\n        </h2>\n      )}\n    </header>\n  </>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { RouteObject, useRoutes } from 'react-router-dom';\nimport type { StaticRoute } from '../routes';\n\nexport interface StaticRouteLoaderProps {\n  staticRoutes: StaticRoute[];\n}\n\nexport const StaticRouteLoader = ({ staticRoutes }: StaticRouteLoaderProps) => {\n  const staticRouteElement = useRoutes(staticRoutes as RouteObject[]);\n  return <>{staticRouteElement}</>;\n};\n","import React, { useEffect, useCallback, cloneElement } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { connect } from 'react-redux';\nimport { useLocation, matchRoutes, RouteObject } from 'react-router-dom';\n\nimport { createSelector } from 'reselect';\n\nimport NotFound from './NotFound';\nimport { Status } from './Status';\n\nimport {\n  selectCurrentPath,\n  selectCurrentProject,\n  selectIsNotFound,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryContentTypeId,\n  selectRouteErrorMessage,\n  selectRouteIsError,\n  selectRouteLoading,\n  selectRouteStatusCode,\n} from '../redux/selectors';\nimport { setNavigationPath } from '../redux/actions';\n\nimport {\n  selectUserGroups,\n  selectUserIsAuthenticated,\n} from '~/user/redux/selectors';\nimport { matchUserGroup } from '~/user/util/matchGroups';\nimport { toJS } from '~/util/ToJs';\nimport { CookieHelper } from '~/user/util/CookieHelper.class';\n\nimport { mergeStaticRoutes } from '~/util/mergeStaticRoutes';\nimport { Entry } from 'contensis-delivery-api/lib/models';\nimport {\n  AppRootProps,\n  RouteLoaderProps,\n  StaticRoute,\n  MatchedRoute,\n} from '../routes';\nimport { StaticRouteLoader } from './StaticRouteLoader';\nimport { Redirect } from './Redirect';\n\nconst replaceDoubleSlashRecursive = (path: string) => {\n  const nextPath = path.replace(/\\/\\//, '/');\n\n  if (nextPath.match(/\\/\\//)) {\n    return replaceDoubleSlashRecursive(nextPath);\n  }\n\n  return nextPath;\n};\n\nconst getTrimmedPath = path => {\n  if (path !== '/') {\n    const nextPath = replaceDoubleSlashRecursive(path);\n    const lastChar = nextPath[nextPath.length - 1];\n    if (lastChar === '/') {\n      return nextPath.substring(0, nextPath.length - 1);\n    }\n  }\n  return path;\n};\n\nconst processStaticRoutes = (\n  staticRoutes: StaticRoute[],\n  componentProps: Partial<IReduxProps>\n) => {\n  const { projectId, contentTypeId, entry, mappedEntry, isLoggedIn } =\n    componentProps;\n  return staticRoutes.map(x => {\n    const route = { ...x };\n    if (route.component) {\n      route.element = (\n        <route.component\n          projectId={projectId}\n          contentTypeId={contentTypeId ? contentTypeId : undefined}\n          entry={entry}\n          mappedEntry={mappedEntry}\n          isLoggedIn={isLoggedIn}\n        />\n      );\n      delete route.component;\n    }\n    if (route.element) {\n      route.element = cloneElement(route.element as React.ReactElement<any>, {\n        projectId,\n        contentTypeId,\n        entry,\n        mappedEntry,\n        isLoggedIn,\n      });\n    }\n    if (route.children) {\n      route.children = processStaticRoutes(route.children, componentProps);\n    }\n    return route;\n  });\n};\n\ninterface IReduxProps {\n  contentTypeId: string | null;\n  entry: Entry | null;\n  isError: boolean;\n  isNotFound: boolean;\n  isLoading: boolean;\n  isLoggedIn: boolean;\n  mappedEntry: any;\n  projectId: string;\n  setNavigationPath: typeof setNavigationPath;\n  statePath: string;\n  statusCode: any;\n  statusText: string;\n  userGroups: any;\n}\n\nconst RouteLoader = ({\n  contentTypeId,\n  entry,\n  isError,\n  isLoading,\n  isLoggedIn,\n  isNotFound,\n  loadingComponent,\n  mappedEntry,\n  notFoundComponent,\n  projectId,\n  routes,\n  setNavigationPath,\n  statePath,\n  statusCode,\n  statusText,\n  userGroups,\n  withEvents,\n  trailingSlashRedirectCode = 302,\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\n  const location = useLocation();\n  const cookies = new CookieHelper(...useCookies());\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\n  const trimmedPath = getTrimmedPath(location.pathname);\n\n  // Convert any react-router-v5 style routes to react-router-v6 style routes.\n  const staticRoutes = processStaticRoutes(routes.StaticRoutes, {\n    projectId,\n    contentTypeId,\n    entry,\n    mappedEntry,\n    isLoggedIn,\n  });\n\n  // Match any Static Routes a developer has defined\n  const matchedStaticRoute = matchRoutes(\n    staticRoutes as RouteObject[],\n    location\n  );\n  const isStaticRoute = matchedStaticRoute && matchedStaticRoute.length > 0;\n\n  // Combine custom params for all static routes, with the furthest config taking precedence.\n  if (isStaticRoute) {\n    mergeStaticRoutes(matchedStaticRoute);\n  }\n\n  const staticRoute: MatchedRoute<string, StaticRoute> | undefined =\n    isStaticRoute ? matchedStaticRoute.pop() || undefined : undefined;\n\n  const routeRequiresLogin = staticRoute\n    ? staticRoute.route.requireLogin\n    : undefined;\n\n  const setPath = useCallback(() => {\n    // Use serverPath to control the path we send to siteview node api to resolve a route\n    let serverPath = '';\n    if (staticRoute && staticRoute.pathname === staticRoute.pathnameBase) {\n      const { route, pathname, params } = staticRoute;\n\n      if (route.path?.includes('*')) {\n        // Send the whole url to api if we have matched route containing wildcard\n        serverPath = pathname;\n      } else if (typeof route.fetchNodeLevel === 'number') {\n        // Send all url parts to a specified level to api\n        serverPath = pathname\n          .split('/')\n          .splice(0, route.fetchNodeLevel + 1)\n          .join('/');\n      } else if (\n        typeof route.fetchNode === 'object' &&\n        route.fetchNode?.params\n      ) {\n        const fetchNodeParams: string[] = route.fetchNode.params;\n        const routeParams = params;\n\n        const regexExp = new RegExp(\n          Object.keys(routeParams)\n            .map(p => `:${p}`)\n            .join('|'),\n          'g'\n        );\n\n        serverPath = pathname\n          .replace(/\\?/g, '')\n          .replace(regexExp, matched => {\n            const param = matched.replace(':', '');\n            if (fetchNodeParams.includes(param))\n              return routeParams[param] || '';\n            else return '';\n          })\n          .replace(/\\/$/, '');\n      } else {\n        // Send all non-parameterised url parts to api\n        serverPath = (route.fullPath as string)\n          ?.split('/')\n          .filter(p => !p.startsWith(':'))\n          .join('/');\n      }\n    }\n\n    setNavigationPath(\n      serverPath || trimmedPath,\n      location,\n      staticRoute,\n      withEvents,\n      statePath,\n      routes,\n      cookies\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    setNavigationPath,\n    // staticRoute,\n    withEvents,\n    location,\n    routes,\n    // statePath,\n    trimmedPath,\n  ]);\n\n  if (typeof window == 'undefined') setPath();\n\n  useEffect(() => {\n    setPath();\n  }, [location, setPath]);\n\n  // Need to redirect when url endswith a /\n  if (location.pathname.length > trimmedPath.length) {\n    return (\n      <Redirect\n        code={trailingSlashRedirectCode || 302}\n        to={`${trimmedPath}${location.search}${location.hash}`}\n      />\n    );\n  }\n\n  // Render any Static Routes a developer has defined\n  if (isStaticRoute && !(!isLoggedIn && routeRequiresLogin)) {\n    if (matchUserGroup(userGroups, routeRequiresLogin))\n      return <StaticRouteLoader staticRoutes={staticRoutes} />;\n  }\n\n  // Render a supplied Loading component if the route\n  // is not a static route and is in a loading state\n  if (isLoading && !isNotFound && loadingComponent) {\n    const LoadingComponent = loadingComponent;\n    return <LoadingComponent />;\n  }\n\n  // Match any defined Content Type Mappings\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\n    const MatchedComponent = routes.ContentTypeMappings.find(\n      item => item.contentTypeID === contentTypeId\n    );\n\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\n        return (\n          <MatchedComponent.component\n            projectId={projectId}\n            contentTypeId={contentTypeId}\n            entry={entry}\n            mappedEntry={mappedEntry}\n            isLoggedIn={isLoggedIn}\n          />\n        );\n    }\n  }\n\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\n  if (isNotFound || isError) {\n    console.info(\n      `RouteLoader rendering NotFound component: statusCode ${statusCode}, isNotFound ${isNotFound}, isError ${isError}`\n    );\n\n    return (\n      <Status code={statusCode}>\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\n      </Status>\n    );\n  }\n\n  return null;\n};\nconst mapStateToPropsMemoized = createSelector(\n  selectRouteEntryContentTypeId,\n  selectRouteEntry,\n  selectRouteIsError,\n  selectIsNotFound,\n  selectRouteLoading,\n  selectUserIsAuthenticated,\n  selectMappedEntry,\n  selectCurrentProject,\n  selectCurrentPath,\n  selectRouteStatusCode,\n  selectRouteErrorMessage,\n  selectUserGroups,\n  (\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups\n  ) => ({\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups,\n  })\n);\n\nconst mapDispatchToProps = {\n  setNavigationPath,\n};\n\nexport default connect(\n  mapStateToPropsMemoized,\n  mapDispatchToProps\n)(toJS(RouteLoader as any)) as unknown as (\n  props: AppRootProps & RouteLoaderProps\n) => JSX.Element;\n"],"names":["HttpContext","createContext","useHttpContext","useContext","mergeStaticRoutes","matchedStaticRoute","finalRoute","i","route","entries","staticRouteCopy","length","fullPath","path","children","index","component","element","endsWith","Redirect","code","to","httpContext","statusCode","url","React","Navigate","Status","NotFound","statusText","background","color","fontSize","padding","StaticRouteLoader","staticRoutes","staticRouteElement","useRoutes","replaceDoubleSlashRecursive","nextPath","replace","match","getTrimmedPath","lastChar","substring","processStaticRoutes","componentProps","projectId","contentTypeId","entry","mappedEntry","isLoggedIn","map","x","undefined","cloneElement","RouteLoader","isError","isLoading","isNotFound","loadingComponent","notFoundComponent","routes","setNavigationPath","statePath","userGroups","withEvents","trailingSlashRedirectCode","location","useLocation","cookies","CookieHelper","useCookies","trimmedPath","pathname","StaticRoutes","matchRoutes","isStaticRoute","staticRoute","pop","routeRequiresLogin","requireLogin","setPath","useCallback","serverPath","pathnameBase","params","includes","fetchNodeLevel","split","splice","join","fetchNode","fetchNodeParams","routeParams","regexExp","RegExp","Object","keys","p","matched","param","filter","startsWith","window","useEffect","search","hash","matchUserGroup","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","NotFoundComponent","console","info","mapStateToPropsMemoized","createSelector","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","connect","toJS"],"mappings":"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"}