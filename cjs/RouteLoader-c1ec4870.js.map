{"version":3,"file":"RouteLoader-c1ec4870.js","sources":["../src/routing/components/NotFound.tsx","../src/routing/components/Status.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst NotFound = ({\r\n  statusCode,\r\n  statusText,\r\n}: {\r\n  statusCode: number;\r\n  statusText: string;\r\n}) => (\r\n  <>\r\n    <header>\r\n      <h1>{statusCode || '404'} Page Not Found</h1>\r\n      {statusText && (\r\n        <h2\r\n          style={{\r\n            background: '#eee',\r\n            color: '#666',\r\n            fontSize: '100%',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          {statusText}\r\n        </h2>\r\n      )}\r\n    </header>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { PropsWithChildren } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport const Status = ({\r\n  code,\r\n  children,\r\n}: PropsWithChildren<{ code: number }>) => {\r\n  return (\r\n    <Route\r\n      render={({ staticContext }) => {\r\n        if (staticContext) staticContext.statusCode = code;\r\n        return children;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect, useCallback } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { hot } from 'react-hot-loader';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { renderRoutes, matchRoutes, RouteConfig } from 'react-router-config';\r\nimport { createSelector } from 'reselect';\r\n\r\nimport NotFound from './NotFound';\r\nimport { Status } from './Status';\r\n\r\nimport {\r\n  selectCurrentPath,\r\n  selectCurrentProject,\r\n  selectIsNotFound,\r\n  selectMappedEntry,\r\n  selectRouteEntry,\r\n  selectRouteEntryContentTypeId,\r\n  selectRouteErrorMessage,\r\n  selectRouteIsError,\r\n  selectRouteLoading,\r\n  selectRouteStatusCode,\r\n} from '../redux/selectors';\r\nimport { setNavigationPath } from '../redux/actions';\r\n\r\nimport {\r\n  selectUserGroups,\r\n  selectUserIsAuthenticated,\r\n} from '~/user/redux/selectors';\r\nimport { matchUserGroup } from '~/user/util/matchGroups';\r\nimport { toJS } from '~/util/ToJs';\r\nimport { CookieHelper } from '~/user/util/CookieHelper.class';\r\n\r\nimport { Entry } from 'contensis-delivery-api/lib/models';\r\nimport { AppRootProps, RouteComponentProps, RouteLoaderProps } from '../routes';\r\n\r\nconst replaceDoubleSlashRecursive = (path: string) => {\r\n  const nextPath = path.replace(/\\/\\//, '/');\r\n\r\n  if (nextPath.match(/\\/\\//)) {\r\n    return replaceDoubleSlashRecursive(nextPath);\r\n  }\r\n\r\n  return nextPath;\r\n};\r\n\r\nconst getTrimmedPath = path => {\r\n  if (path !== '/') {\r\n    const nextPath = replaceDoubleSlashRecursive(path);\r\n    const lastChar = nextPath[nextPath.length - 1];\r\n    if (lastChar === '/') {\r\n      return nextPath.substring(0, nextPath.length - 1);\r\n    }\r\n  }\r\n  return path;\r\n};\r\n\r\ninterface IReduxProps {\r\n  contentTypeId: string | null;\r\n  entry: Entry | null;\r\n  isError: boolean;\r\n  isNotFound: boolean;\r\n  isLoading: boolean;\r\n  isLoggedIn: boolean;\r\n  mappedEntry: any;\r\n  projectId: string;\r\n  setNavigationPath: typeof setNavigationPath;\r\n  statePath: string;\r\n  statusCode: any;\r\n  statusText: string;\r\n  userGroups: any;\r\n}\r\n\r\nconst RouteLoader = ({\r\n  contentTypeId,\r\n  entry,\r\n  isError,\r\n  isLoading,\r\n  isLoggedIn,\r\n  isNotFound,\r\n  loadingComponent,\r\n  mappedEntry,\r\n  notFoundComponent,\r\n  projectId,\r\n  routes,\r\n  setNavigationPath,\r\n  statePath,\r\n  statusCode,\r\n  statusText,\r\n  userGroups,\r\n  withEvents,\r\n  trailingSlashRedirectCode = 302,\r\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\r\n  const location = useLocation();\r\n  const cookies = new CookieHelper(...useCookies());\r\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\r\n  const trimmedPath = getTrimmedPath(location.pathname);\r\n\r\n  // Match any Static Routes a developer has defined\r\n  const matchedStaticRoute = () =>\r\n    matchRoutes(routes.StaticRoutes as RouteConfig[], location.pathname);\r\n  const isStaticRoute = () => matchedStaticRoute().length > 0;\r\n\r\n  const staticRoute = isStaticRoute() ? matchedStaticRoute()[0] : undefined;\r\n  const routeRequiresLogin = staticRoute && staticRoute.route.requireLogin;\r\n\r\n  const setPath = useCallback(() => {\r\n    // Use serverPath to control the path we send to siteview node api to resolve a route\r\n    let serverPath = '';\r\n    if (staticRoute && staticRoute.match && staticRoute.match.isExact) {\r\n      const { match, route } = staticRoute;\r\n\r\n      if (route.path?.includes('*')) {\r\n        // Send the whole url to api if we have matched route containing wildcard\r\n        serverPath = match.url;\r\n      } else if (typeof route.fetchNodeLevel === 'number') {\r\n        // Send all url parts to a specified level to api\r\n        serverPath = match.url\r\n          .split('/')\r\n          .splice(0, route.fetchNodeLevel + 1)\r\n          .join('/');\r\n      } else if (route.fetchNode?.params) {\r\n        const fetchNodeParams: string[] = route.fetchNode.params;\r\n        const routeParams: { [key: string]: string } = match.params;\r\n\r\n        const regexExp = new RegExp(\r\n          Object.keys(routeParams)\r\n            .map(p => `:${p}`)\r\n            .join('|'),\r\n          'g'\r\n        );\r\n\r\n        serverPath = match.path\r\n          .replace(/\\?/g, '')\r\n          .replace(regexExp, matched => {\r\n            const param = matched.replace(':', '');\r\n            if (fetchNodeParams.includes(param)) return routeParams[param];\r\n            else return '';\r\n          })\r\n          .replace(/\\/$/, '');\r\n      } else {\r\n        // Send all non-parameterised url parts to api\r\n        serverPath = (route.path as string)\r\n          ?.split('/')\r\n          .filter(p => !p.startsWith(':'))\r\n          .join('/');\r\n      }\r\n    }\r\n\r\n    setNavigationPath(\r\n      serverPath || trimmedPath,\r\n      location,\r\n      staticRoute,\r\n      withEvents,\r\n      statePath,\r\n      routes,\r\n      cookies\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [\r\n    setNavigationPath,\r\n    // staticRoute,\r\n    withEvents,\r\n    location,\r\n    routes,\r\n    // statePath,\r\n    trimmedPath,\r\n  ]);\r\n\r\n  if (typeof window == 'undefined') setPath();\r\n\r\n  useEffect(() => {\r\n    setPath();\r\n  }, [location, setPath]);\r\n\r\n  // Need to redirect when url endswith a /\r\n  if (location.pathname.length > trimmedPath.length) {\r\n    return (\r\n      <Status code={trailingSlashRedirectCode}>\r\n        <Redirect to={`${trimmedPath}${location.search}${location.hash}`} />\r\n      </Status>\r\n    );\r\n  }\r\n\r\n  // Render any Static Routes a developer has defined\r\n  if (isStaticRoute() && !(!isLoggedIn && routeRequiresLogin)) {\r\n    if (matchUserGroup(userGroups, routeRequiresLogin))\r\n      return renderRoutes(\r\n        routes.StaticRoutes as RouteConfig[],\r\n        {\r\n          projectId,\r\n          contentTypeId,\r\n          entry,\r\n          mappedEntry,\r\n          isLoggedIn,\r\n        } as RouteComponentProps\r\n      );\r\n  }\r\n\r\n  // Render a supplied Loading component if the route\r\n  // is not a static route and is in a loading state\r\n  if (isLoading && !isNotFound && loadingComponent) {\r\n    const LoadingComponent = loadingComponent;\r\n    return <LoadingComponent />;\r\n  }\r\n\r\n  // Match any defined Content Type Mappings\r\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\r\n    const MatchedComponent = routes.ContentTypeMappings.find(\r\n      item => item.contentTypeID === contentTypeId\r\n    );\r\n\r\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\r\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\r\n        return (\r\n          <MatchedComponent.component\r\n            projectId={projectId}\r\n            contentTypeId={contentTypeId}\r\n            entry={entry}\r\n            mappedEntry={mappedEntry}\r\n            isLoggedIn={isLoggedIn}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\r\n  if (isNotFound || isError) {\r\n    console.info(\r\n      `RouteLoader rendering NotFound component: statusCode ${statusCode}, isNotFound ${isNotFound}, isError ${isError}`\r\n    );\r\n\r\n    return (\r\n      <Status code={statusCode}>\r\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\r\n      </Status>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nconst mapStateToPropsMemoized = createSelector(\r\n  selectRouteEntryContentTypeId,\r\n  selectRouteEntry,\r\n  selectRouteIsError,\r\n  selectIsNotFound,\r\n  selectRouteLoading,\r\n  selectUserIsAuthenticated,\r\n  selectMappedEntry,\r\n  selectCurrentProject,\r\n  selectCurrentPath,\r\n  selectRouteStatusCode,\r\n  selectRouteErrorMessage,\r\n  selectUserGroups,\r\n  (\r\n    contentTypeId,\r\n    entry,\r\n    isError,\r\n    isNotFound,\r\n    isLoading,\r\n    isLoggedIn,\r\n    mappedEntry,\r\n    projectId,\r\n    statePath,\r\n    statusCode,\r\n    statusText,\r\n    userGroups\r\n  ) => ({\r\n    contentTypeId,\r\n    entry,\r\n    isError,\r\n    isNotFound,\r\n    isLoading,\r\n    isLoggedIn,\r\n    mappedEntry,\r\n    projectId,\r\n    statePath,\r\n    statusCode,\r\n    statusText,\r\n    userGroups,\r\n  })\r\n);\r\n\r\nconst mapDispatchToProps = {\r\n  setNavigationPath,\r\n};\r\n\r\nexport default hot(module)(\r\n  connect(mapStateToPropsMemoized, mapDispatchToProps)(toJS(RouteLoader as any))\r\n) as unknown as (props: AppRootProps & RouteLoaderProps) => JSX.Element;\r\n"],"names":["NotFound","statusCode","statusText","React","createElement","Fragment","style","background","color","fontSize","padding","Status","code","children","Route","render","staticContext","replaceDoubleSlashRecursive","path","nextPath","replace","match","getTrimmedPath","lastChar","length","substring","RouteLoader","contentTypeId","entry","isError","isLoading","isLoggedIn","isNotFound","loadingComponent","mappedEntry","notFoundComponent","projectId","routes","setNavigationPath","statePath","userGroups","withEvents","trailingSlashRedirectCode","location","useLocation","cookies","CookieHelper","useCookies","trimmedPath","pathname","matchedStaticRoute","matchRoutes","StaticRoutes","isStaticRoute","staticRoute","undefined","routeRequiresLogin","route","requireLogin","setPath","useCallback","serverPath","isExact","_route$path","_route$fetchNode","includes","url","fetchNodeLevel","split","splice","join","fetchNode","params","fetchNodeParams","routeParams","regexExp","RegExp","Object","keys","map","p","matched","param","_route$path2","filter","startsWith","window","useEffect","Redirect","to","search","hash","matchUserGroup","renderRoutes","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","component","NotFoundComponent","console","info","mapStateToPropsMemoized","createSelector","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","hot","module","connect","toJS"],"mappings":"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"}