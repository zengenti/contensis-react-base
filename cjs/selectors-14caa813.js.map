{"version":3,"file":"selectors-14caa813.js","sources":["../src/redux/util.ts","../src/routing/redux/types.ts","../src/routing/redux/actions.ts","../src/util/navigation.js","../src/routing/redux/selectors.ts"],"sourcesContent":["import { jpath } from '~/util/json-mapper';\n\nexport const action = (type: string, payload: any = {}) => ({\n  type,\n  ...payload,\n});\n\nexport const getJS = <S extends Record<string, unknown>, T extends keyof S>(\n  state: S,\n  stateKey: T\n) => {\n  if (\n    'get' in state &&\n    typeof state.get === 'function' &&\n    'toJS' in state &&\n    typeof state.toJS === 'function'\n  ) {\n    return state.get(stateKey) as S[T];\n  }\n  return state[stateKey];\n};\n\nexport const getImmutableOrJS = <\n  S extends Record<string, unknown>,\n  T extends keyof S | any\n>(\n  state: S,\n  stateKey: T | T[],\n  fallbackValue?: any,\n  returnType: 'immutable' | 'js' = globalThis.STATE_TYPE\n) => {\n  // Find a fromJS function from global that is dynamically loaded in createStore\n  // or replace with a stub function for non-immutable gets\n  const fromJS =\n    returnType === 'immutable'\n      ? globalThis.immutable?.fromJSOrdered || globalThis.immutable?.fromJS\n      : v => v;\n\n  if (\n    state &&\n    'get' in state &&\n    typeof state.get === 'function' &&\n    'getIn' in state &&\n    typeof state.getIn === 'function' &&\n    'toJS' in state &&\n    typeof state.toJS === 'function'\n  ) {\n    if (Array.isArray(stateKey))\n      return fromJS(state.getIn(stateKey, fallbackValue));\n    return fromJS(state.get(stateKey, fallbackValue)) as S[T | any];\n  }\n\n  if (Array.isArray(stateKey) && state && typeof state === 'object') {\n    const result = jpath(stateKey.join('.'), state);\n    if (typeof result === 'undefined') return fallbackValue;\n    return result;\n  }\n\n  const result =\n    state && typeof state === 'object' ? state[stateKey as string] : undefined;\n  if (typeof result === 'undefined') return fallbackValue;\n  return result;\n};\n","const ROUTING_PREFIX = '@ROUTING/';\nexport const GET_ENTRY = `${ROUTING_PREFIX}_GET_ENTRY`;\nexport const SET_ENTRY = `${ROUTING_PREFIX}_SET_ENTRY`;\nexport const SET_NODE = `${ROUTING_PREFIX}_SET_NODE`;\nexport const SET_ANCESTORS = `${ROUTING_PREFIX}_SET_ANCESTORS`;\nexport const SET_SIBLINGS = `${ROUTING_PREFIX}_SET_SIBLINGS`;\nexport const SET_ENTRY_ID = `${ROUTING_PREFIX}_SET_ENTRY_ID`;\nexport const SET_SURROGATE_KEYS = `${ROUTING_PREFIX}_SET_SURROGATE_KEYS`;\n\nexport const SET_NAVIGATION_PATH = `${ROUTING_PREFIX}_SET_NAVIGATION_PATH`;\n\nexport const SET_TARGET_PROJECT = `${ROUTING_PREFIX}_SET_TARGET_PROJECT`;\n\nexport const SET_ROUTE = `${ROUTING_PREFIX}_SET_ROUTE`;\n\nexport const UPDATE_LOADING_STATE = `${ROUTING_PREFIX}_UPDATE_LOADING_STATE`;\n","import { useLocation } from 'react-router-dom';\nimport { action } from '~/redux/util';\nimport {\n  SET_ENTRY,\n  SET_NAVIGATION_PATH,\n  SET_TARGET_PROJECT,\n  SET_ROUTE,\n  SET_SURROGATE_KEYS,\n} from './types';\n\nimport { Entry } from 'contensis-delivery-api/lib/models';\nimport { AppRoutes, MatchedRoute, StaticRoute, WithEvents } from '../routes';\nimport { CookieHelper } from '~/user/util/CookieHelper.class';\n\nexport const setNavigationPath = (\n  path: string,\n  location: ReturnType<typeof useLocation>,\n  staticRoute: MatchedRoute<string, StaticRoute> | undefined,\n  withEvents: WithEvents,\n  statePath: string,\n  routes: AppRoutes,\n  cookies: CookieHelper\n) =>\n  action(SET_NAVIGATION_PATH, {\n    path,\n    location,\n    staticRoute,\n    withEvents,\n    statePath,\n    routes,\n    cookies,\n  });\n\nexport const setCurrentProject = (\n  project: string,\n  allowedGroups: any,\n  hostname: string\n) => action(SET_TARGET_PROJECT, { project, allowedGroups, hostname });\n\nexport const setRoute = (path: string, state?: any) =>\n  action(SET_ROUTE, { path, state });\n\nexport const setRouteEntry = (entry: Entry) => action(SET_ENTRY, { entry });\n\nexport const setSurrogateKeys = (keys: string, url: string) =>\n  action(SET_SURROGATE_KEYS, { keys, url });\n","import queryString from 'query-string';\n\nexport function queryParams(search) {\n  return queryString.parse(\n    typeof window != 'undefined' ? window.location.search : search\n  );\n}\nexport const routeParams = staticRoute =>\n  staticRoute && staticRoute.match ? staticRoute.match.params : {};\n\nexport const buildUrl = (route, params) => {\n  const qs = queryString.stringify(params);\n  const path = qs ? `${route}?${qs}` : route;\n  return path;\n};\n\nexport const clientHostname = () =>\n  `${window.location.protocol}//${window.location.hostname}:${window.location.port}`;\n","import { Entry } from 'contensis-delivery-api/lib/models';\nimport { StateType } from '~/config';\nimport { AppState } from '~/redux/appstate';\nimport { getImmutableOrJS as getIn } from '~/redux/util';\nimport { queryParams } from '~/util/navigation';\n\nexport const selectRouteEntry = (state: AppState, returnType?: StateType) =>\n  getIn(state, ['routing', 'entry'], {} as Entry, returnType);\n\nexport const selectMappedEntry = (state: AppState, returnType?: StateType) =>\n  getIn(state, ['routing', 'mappedEntry'], null, returnType);\n\nexport const selectSurrogateKeys = (state: AppState) => {\n  const keys = getIn(state, ['routing', 'surrogateKeys'], [], 'js');\n  return keys;\n};\nexport const selectCurrentHostname = (state: AppState) =>\n  getIn(state, ['routing', 'currentHostname']);\n\nexport const selectCurrentTreeID = (state: AppState) =>\n  getIn(state, ['routing', 'currentHostname']);\n\nexport const selectRouteEntryEntryId = (state: AppState) =>\n  getIn(state, ['routing', 'entry', 'sys', 'id'], null);\n\nexport const selectRouteEntryContentTypeId = (state: AppState) => {\n  const entry = selectRouteEntry(state);\n  return getIn(entry, ['sys', 'contentTypeId'], null);\n};\n\nexport const selectRouteEntryLanguage = (state: AppState) => {\n  const entry = selectRouteEntry(state);\n  return getIn(entry, ['sys', 'language'], null);\n};\n\nexport const selectRouteEntrySlug = (state: AppState) => {\n  const entry = selectRouteEntry(state);\n  return getIn(entry, ['sys', 'slug'], null);\n};\n\nexport const selectRouteEntryID = (state: AppState) =>\n  getIn(state, ['routing', 'entryID']);\n\nexport const selectCanonicalPath = (state: AppState) => {\n  return getIn(state, ['routing', 'canonicalPath']);\n};\n\nexport const selectCurrentPath = (state: AppState) =>\n  getIn(state, ['routing', 'currentPath']);\n\nexport const selectCurrentLocation = (state: AppState) =>\n  getIn(state, ['routing', 'location']);\nexport const selectCurrentSearch = (state: AppState) =>\n  getIn(state, ['routing', 'location', 'search']);\nexport const selectCurrentHash = (state: AppState) =>\n  getIn(state, ['routing', 'location', 'hash']);\nexport const selectQueryStringAsObject = (state: AppState) =>\n  queryParams(selectCurrentSearch(state));\nexport const selectCurrentProject = (state: AppState) =>\n  getIn(state, ['routing', 'currentProject']);\nexport const selectIsNotFound = (state: AppState) =>\n  getIn(state, ['routing', 'notFound']);\nexport const selectCurrentAncestors = (state: AppState) =>\n  getIn(state, ['routing', 'currentNodeAncestors'], []);\nexport const selectCurrentSiblings = (state: AppState) =>\n  getIn(state, ['routing', 'currentNodeSiblings'], []);\nexport const selectCurrentNode = (state: AppState, returnType?: StateType) =>\n  getIn(state, ['routing', 'currentNode'], null, returnType);\nexport const selectCurrentChildren = state =>\n  getIn(state, ['routing', 'currentNode', 'children'], []);\n\nexport const selectBreadcrumb = (state: AppState) => {\n  return [...selectCurrentAncestors(state), selectCurrentNode(state)];\n};\nexport const selectRouteErrorMessage = (state: AppState) => {\n  const error = getIn(state, ['routing', 'error']);\n  return getIn(error, ['data', 'message'], getIn(error, 'statusText'));\n};\nexport const selectRouteIsError = (state: AppState) =>\n  getIn(state, ['routing', 'isError']);\nexport const selectRouteLoading = (state: AppState) =>\n  getIn(state, ['routing', 'isLoading']);\nexport const selectRouteStatusCode = (state: AppState) =>\n  getIn(state, ['routing', 'statusCode']);\nexport const selectStaticRoute = (state: AppState) =>\n  getIn(state, ['routing', 'staticRoute']);\n"],"names":["action","type","payload","getJS","state","stateKey","get","toJS","getImmutableOrJS","fallbackValue","returnType","globalThis","STATE_TYPE","fromJS","immutable","fromJSOrdered","v","getIn","Array","isArray","result","jpath","join","undefined","ROUTING_PREFIX","GET_ENTRY","SET_ENTRY","SET_NODE","SET_ANCESTORS","SET_SIBLINGS","SET_ENTRY_ID","SET_SURROGATE_KEYS","SET_NAVIGATION_PATH","SET_TARGET_PROJECT","SET_ROUTE","UPDATE_LOADING_STATE","setNavigationPath","path","location","staticRoute","withEvents","statePath","routes","cookies","setCurrentProject","project","allowedGroups","hostname","setRoute","setRouteEntry","entry","setSurrogateKeys","keys","url","queryParams","search","queryString","parse","window","selectRouteEntry","selectMappedEntry","selectSurrogateKeys","selectCurrentHostname","selectCurrentTreeID","selectRouteEntryEntryId","selectRouteEntryContentTypeId","selectRouteEntryLanguage","selectRouteEntrySlug","selectRouteEntryID","selectCanonicalPath","selectCurrentPath","selectCurrentLocation","selectCurrentSearch","selectCurrentHash","selectQueryStringAsObject","selectCurrentProject","selectIsNotFound","selectCurrentAncestors","selectCurrentSiblings","selectCurrentNode","selectCurrentChildren","selectBreadcrumb","selectRouteErrorMessage","error","selectRouteIsError","selectRouteLoading","selectRouteStatusCode","selectStaticRoute"],"mappings":"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"}