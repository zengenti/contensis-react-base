{"version":3,"file":"version-6d864ecd.js","sources":["../src/redux/selectors/navigation.js","../src/redux/store/injectors.js","../src/redux/actions/version.js"],"sourcesContent":["import { getImmutableOrJS as getIn } from '~/redux/util';\r\n\r\nexport const hasNavigationTree = state =>\r\n  getIn(state, ['navigation', 'isReady']);\r\n\r\nexport const selectNavigationRoot = state =>\r\n  getIn(state, ['navigation', 'root']);\r\n\r\nexport const selectNavigationChildren = state =>\r\n  getIn(state, ['navigation', 'root', 'children']);\r\n\r\nexport const selectNavigationDepends = () => [];\r\n","import { all } from 'redux-saga/effects';\r\nimport { reduxStore as DefaultStore } from './store';\r\n\r\nexport const convertSagaArray = sagas => {\r\n  if (Array.isArray(sagas))\r\n    return function* rootSaga() {\r\n      yield all(sagas);\r\n    };\r\n  return sagas;\r\n};\r\n\r\nexport const injectReducer = ({ key, reducer }, store = DefaultStore) => {\r\n  if (\r\n    Reflect.has(store.injectedReducers, key) &&\r\n    store.injectedReducers[key] === reducer\r\n  )\r\n    return;\r\n  store.injectedReducers[key] = reducer;\r\n\r\n  store.replaceReducer(store.createReducer(store.injectedReducers));\r\n};\r\n\r\nexport const injectSaga = ({ key, saga }, store = DefaultStore) => {\r\n  const rootSaga = convertSagaArray(saga);\r\n  let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\r\n\r\n    if (hasSaga && oldDescriptor.saga !== rootSaga) {\r\n      oldDescriptor.task.cancel();\r\n      hasSaga = false;\r\n    }\r\n  }\r\n  console.info('injectSaga, key: ', key, 'hasSaga: ', hasSaga);\r\n\r\n  if (!hasSaga) {\r\n    store.injectedSagas[key] = {\r\n      key,\r\n      saga: rootSaga,\r\n      task: store.runSaga(rootSaga),\r\n    };\r\n  }\r\n};\r\n\r\nexport const injectRedux = ({ key, reducer, saga }, store = DefaultStore) => {\r\n  console.info('injectRedux, key: ', key);\r\n  if (reducer) injectReducer({ key, reducer }, store);\r\n  if (saga) injectSaga({ key, saga }, store);\r\n};\r\n\r\nexport const useInjectRedux = injectRedux;\r\n","import { action } from '../util';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '../types/version';\r\n\r\nexport const setVersion = (commitRef, buildNo) =>\r\n  action(SET_VERSION, { commitRef, buildNo });\r\n\r\nexport const setVersionStatus = status =>\r\n  action(SET_VERSION_STATUS, { status });\r\n"],"names":["hasNavigationTree","state","getIn","selectNavigationRoot","selectNavigationChildren","selectNavigationDepends","convertSagaArray","sagas","Array","isArray","rootSaga","all","injectReducer","key","reducer","store","DefaultStore","Reflect","has","injectedReducers","replaceReducer","createReducer","injectSaga","saga","hasSaga","injectedSagas","process","env","NODE_ENV","oldDescriptor","task","cancel","console","info","runSaga","injectRedux","useInjectRedux","setVersion","commitRef","buildNo","action","SET_VERSION","setVersionStatus","status","SET_VERSION_STATUS"],"mappings":"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"}