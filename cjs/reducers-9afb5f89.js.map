{"version":3,"file":"reducers-9afb5f89.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\r\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n\r\nexport const REQUEST_USER_PASSWORD_RESET = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET`;\r\nexport const RESET_USER_PASSWORD = `${ACTION_PREFIX}RESET_USER_PASSWORD`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SENDING = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SENDING`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SUCCESS = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SUCCESS`;\r\nexport const REQUEST_USER_PASSWORD_RESET_ERROR = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_ERROR`;\r\nexport const RESET_USER_PASSWORD_SENDING = `${ACTION_PREFIX}RESET_USER_PASSWORD_SENDING`;\r\nexport const RESET_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}RESET_USER_PASSWORD_SUCCESS`;\r\nexport const RESET_USER_PASSWORD_ERROR = `${ACTION_PREFIX}RESET_USER_PASSWORD_ERROR`;\r\n\r\nexport const CHANGE_USER_PASSWORD = `${ACTION_PREFIX}CHANGE_USER_PASSWORD`;\r\nexport const CHANGE_USER_PASSWORD_SENDING = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SENDING`;\r\nexport const CHANGE_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SUCCESS`;\r\nexport const CHANGE_USER_PASSWORD_ERROR = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport { AppState } from '~/redux/appstate';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REQUEST_USER_PASSWORD_RESET_SENDING,\r\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\r\n  REQUEST_USER_PASSWORD_RESET_ERROR,\r\n  RESET_USER_PASSWORD_SENDING,\r\n  RESET_USER_PASSWORD_SUCCESS,\r\n  RESET_USER_PASSWORD_ERROR,\r\n  CHANGE_USER_PASSWORD_SENDING,\r\n  CHANGE_USER_PASSWORD_SUCCESS,\r\n  CHANGE_USER_PASSWORD_ERROR,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = {\r\n  clientCredentials: null,\r\n  errorMessage: null,\r\n  isAuthenticated: false,\r\n  isAuthenticationError: false,\r\n  isError: false,\r\n  isLoading: false,\r\n};\r\n\r\nconst defaultPasswordResetRequestValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultResetPasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultChangePasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultRegistrationValues = {\r\n  isLoading: false,\r\n  success: false,\r\n  error: null,\r\n};\r\n\r\nexport const initialUserState = {\r\n  authenticationState: defaultAuthenticationState,\r\n  passwordResetRequest: defaultPasswordResetRequestValues,\r\n  resetPassword: defaultResetPasswordValues,\r\n  changePassword: defaultChangePasswordValues,\r\n  groups: [],\r\n};\r\n\r\nexport default produce((state: Draft<AppState['user']>, action) => {\r\n  switch (action.type) {\r\n    case LOGOUT_USER: {\r\n      return initialUserState;\r\n    }\r\n    case LOGIN_USER:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState;\r\n      }\r\n\r\n      const {\r\n        authenticationState: {\r\n          clientCredentials = null,\r\n          errorMessage = null,\r\n          isAuthenticated,\r\n          isAuthenticationError = false,\r\n          isError = false,\r\n          isLoading = action.type === LOGIN_USER,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name =\r\n          `${user.firstName}${user.lastName ? ` ${user.lastName}` : ''}` ||\r\n          null;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      state = {\r\n        ...initialUserState,\r\n        ...(user || state),\r\n        authenticationState: {\r\n          clientCredentials,\r\n          errorMessage,\r\n          isAuthenticated:\r\n            isAuthenticated || state?.authenticationState?.isAuthenticated,\r\n          isAuthenticationError,\r\n          isError,\r\n          isLoading,\r\n        },\r\n      };\r\n      return state;\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.isLoading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.isLoading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.isLoading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      state.registration = (user ||\r\n        state.registration ||\r\n        defaultRegistrationValues) as typeof defaultRegistrationValues;\r\n\r\n      // Set registration flags so the UI can track the status\r\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\r\n      state.registration.error = error || false;\r\n      state.registration.isLoading = action.type === REGISTER_USER;\r\n      return;\r\n    }\r\n    case REQUEST_USER_PASSWORD_RESET_SENDING:\r\n      if (state.passwordResetRequest) {\r\n        state.passwordResetRequest = { ...defaultPasswordResetRequestValues };\r\n        state.passwordResetRequest.isSending = true;\r\n      }\r\n      return;\r\n    case REQUEST_USER_PASSWORD_RESET_SUCCESS:\r\n      if (state.passwordResetRequest) {\r\n        state.passwordResetRequest.isSending = false;\r\n        state.passwordResetRequest.sent = true;\r\n      }\r\n      return;\r\n    case REQUEST_USER_PASSWORD_RESET_ERROR:\r\n      if (state.passwordResetRequest) {\r\n        state.passwordResetRequest.isSending = false;\r\n        state.passwordResetRequest.error = action.error;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_SENDING:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = true;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_SUCCESS:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = false;\r\n        state.resetPassword.sent = true;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_ERROR:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = false;\r\n        state.resetPassword.error = action.error;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_SENDING:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = true;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_SUCCESS:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = false;\r\n        state.changePassword.sent = true;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_ERROR:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = false;\r\n        state.changePassword.error = action.error;\r\n      }\r\n      return;\r\n    default:\r\n      return;\r\n  }\r\n}, initialUserState);\r\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","REQUEST_USER_PASSWORD_RESET","RESET_USER_PASSWORD","REQUEST_USER_PASSWORD_RESET_SENDING","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_SENDING","CHANGE_USER_PASSWORD_SUCCESS","CHANGE_USER_PASSWORD_ERROR","defaultAuthenticationState","clientCredentials","errorMessage","isAuthenticated","isAuthenticationError","isError","isLoading","defaultPasswordResetRequestValues","isSending","sent","error","defaultResetPasswordValues","defaultChangePasswordValues","defaultRegistrationValues","success","initialUserState","authenticationState","passwordResetRequest","resetPassword","changePassword","groups","produce","state","action","type","_state","_state$authentication","user","name","firstName","lastName","isZengentiStaff","email","includes","registration"],"mappings":"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"}