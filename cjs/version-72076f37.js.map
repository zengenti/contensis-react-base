{"version":3,"file":"version-72076f37.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/util/merge.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/navigation.js","../src/redux/store/injectors.js","../src/redux/actions/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\r\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\r\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\r\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\r\n\r\nconst initialState = {\r\n  root: null,\r\n  isError: false,\r\n  isReady: false,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      state.root = action.nodes;\r\n      state.isReady = true;\r\n      return;\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      state.isError = true;\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","import merge from 'deepmerge';\r\n\r\nexport const combineMerge = (target: any, source: any, options: any) => {\r\n  const destination = target.slice();\r\n\r\n  source.forEach((item: any, index: any) => {\r\n    if (typeof destination[index] === 'undefined') {\r\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\r\n    } else if (options.isMergeableObject(item)) {\r\n      destination[index] = merge(target[index], item, options);\r\n    } else if (target.indexOf(item) === -1) {\r\n      destination.push(item);\r\n    }\r\n  });\r\n  return destination;\r\n};\r\n","import { Draft, produce } from 'immer';\r\nimport merge from 'deepmerge';\r\n\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  SET_SURROGATE_KEYS,\r\n  UPDATE_LOADING_STATE,\r\n} from './types';\r\nimport { combineMerge } from '~/util/merge';\r\n\r\nconst initialState = {\r\n  currentHostname: null,\r\n  currentPath: '/',\r\n  currentNode: {},\r\n  currentNodeAncestors: [],\r\n  currentProject: 'unknown',\r\n  entryID: null,\r\n  entry: null,\r\n  error: undefined,\r\n  isError: false,\r\n  isLoading: false,\r\n  location: {},\r\n  mappedEntry: null,\r\n  notFound: false,\r\n  staticRoute: null,\r\n  statusCode: 200,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_ANCESTORS: {\r\n      state.currentNodeAncestors = action.ancestors;\r\n      return;\r\n    }\r\n    case SET_ENTRY: {\r\n      const {\r\n        entry,\r\n        error,\r\n        mappedEntry,\r\n        node = {},\r\n        isError = false,\r\n        isLoading = false,\r\n        notFound = false,\r\n        statusCode,\r\n      } = action;\r\n\r\n      let defaultStatus = 200;\r\n      if (notFound === true && isError === false) defaultStatus = 404;\r\n      else if (isError === true) defaultStatus = statusCode || 500;\r\n\r\n      if (!entry) {\r\n        state.entryID = null;\r\n        state.entry = null;\r\n        state.error = error;\r\n        state.mappedEntry = null;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n      } else {\r\n        state.entryID = action.id;\r\n        state.entry = entry;\r\n        state.error = error;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n\r\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\r\n          state.mappedEntry = mappedEntry;\r\n          state.entry = { sys: entry.sys };\r\n        }\r\n      }\r\n\r\n      if (!node) {\r\n        state.currentNode = null;\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        state.currentNode = node;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { entry, ...nodeWithoutEntry } = node; // We have the entry stored elsewhere, so lets not keep it twice.\r\n        state.currentNode = nodeWithoutEntry;\r\n      }\r\n      return;\r\n    }\r\n    case UPDATE_LOADING_STATE: {\r\n      state.isLoading = action.isLoading;\r\n      return;\r\n    }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = {} as any;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on initial load as we allready should have it in redux\r\n        const entryUri = state?.entry?.sys?.uri;\r\n        if (entryUri !== action.path) {\r\n          state.currentPath = action.path;\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n\r\n          state.isLoading = typeof window !== 'undefined';\r\n        } else {\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    case SET_ROUTE: {\r\n      state.nextPath = action.path;\r\n      return;\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n      }\r\n\r\n      state.currentNodeSiblings = action.siblings;\r\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\r\n      return;\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      // console.info(`SET_SURROGATE_KEYS: '${action.url}' keys: ${action.keys}`);\r\n      state.surrogateKeys = merge(\r\n        state.surrogateKeys,\r\n        (action.keys || '').split(' '),\r\n        { arrayMerge: combineMerge }\r\n      );\r\n      return;\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      state.currentProject = action.project;\r\n      state.allowedGroups = action.allowedGroups;\r\n      state.currentHostname = action.hostname;\r\n      return;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n","const VERSION_PREFIX = '@VERSION/';\r\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\r\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\r\n\r\nconst initialState = {\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: 'published',\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      state.contensisVersionStatus = action.status;\r\n      return;\r\n    }\r\n    case SET_VERSION: {\r\n      state.commitRef = action.commitRef;\r\n      state.buildNo = action.buildNo;\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","/**\r\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== 'CALL_HISTORY_METHOD') {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Action,\r\n  Store,\r\n  StoreEnhancer,\r\n} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\nimport { createInjectorsEnhancer } from 'redux-injectors';\r\n\r\n// Core reducers\r\nimport NavigationReducer from '../reducers/navigation';\r\nimport RoutingReducer from '~/routing/redux/reducers';\r\nimport UserReducer from '~/user/redux/reducers';\r\nimport VersionReducer from '../reducers/version';\r\nimport routerMiddleware from './routerMiddleware';\r\nimport { AppState } from '../appstate';\r\nimport { History, MemoryHistory } from 'history';\r\nimport { StateType } from '~/config';\r\n\r\nexport let reduxStore;\r\n\r\n/* eslint-disable no-underscore-dangle */\r\ndeclare let window: Window &\r\n  typeof globalThis & {\r\n    __REDUX_DEVTOOLS_EXTENSION__: any;\r\n  };\r\n\r\nexport default async (\r\n  featureReducers: any,\r\n  initialState: AppState,\r\n  history: History | MemoryHistory,\r\n  stateType: StateType\r\n) => {\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  // Reassign the combiner and fromJS functions when\r\n  // stateType is 'immutable' with dynamic imports\r\n  let combiner = combineReducers;\r\n  let fromJS: any = (obj: any) => obj;\r\n  globalThis.STATE_TYPE = stateType;\r\n\r\n  if (stateType === 'immutable') {\r\n    globalThis.immutable = await import(\r\n      /* webpackChunkName: \"immutable\" */ 'immutable'\r\n    );\r\n\r\n    fromJS = (\r\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\r\n    ).default;\r\n\r\n    combiner = (\r\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\r\n    ).combineReducers;\r\n  }\r\n\r\n  const createReducer = (injectedReducers = {}) => {\r\n    const rootReducer = combiner<AppState>({\r\n      ...injectedReducers,\r\n      // other non-injected reducers go here\r\n      ...reducers,\r\n    });\r\n\r\n    return rootReducer;\r\n  };\r\n\r\n  const store = (initialState: AppState) => {\r\n    const runSaga = sagaMiddleware.run;\r\n\r\n    const middleware: StoreEnhancer<\r\n      {\r\n        dispatch: unknown;\r\n      },\r\n      unknown\r\n    > = compose(\r\n      applyMiddleware(\r\n        thunkMiddleware,\r\n        sagaMiddleware,\r\n        routerMiddleware(history)\r\n      ),\r\n      createInjectorsEnhancer({\r\n        createReducer,\r\n        runSaga,\r\n      }),\r\n      reduxDevToolsMiddleware\r\n    );\r\n\r\n    const store: Store<AppState, Action<any>> & {\r\n      runSaga?: typeof runSaga;\r\n      close?: () => void;\r\n    } = createStore<AppState, Action<any>, unknown, unknown>(\r\n      createReducer(),\r\n      initialState,\r\n      middleware\r\n    );\r\n\r\n    store.runSaga = runSaga;\r\n    store.close = () => store.dispatch(END);\r\n\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(fromJS(initialState));\r\n  return reduxStore;\r\n};\r\n","import { getImmutableOrJS as getIn } from '~/redux/util';\r\n\r\nexport const hasNavigationTree = state =>\r\n  getIn(state, ['navigation', 'isReady']);\r\n\r\nexport const selectNavigationRoot = state =>\r\n  getIn(state, ['navigation', 'root']);\r\n\r\nexport const selectNavigationChildren = state =>\r\n  getIn(state, ['navigation', 'root', 'children']);\r\n\r\nexport const selectNavigationDepends = () => [];\r\n","import { all } from 'redux-saga/effects';\r\nimport { reduxStore as DefaultStore } from './store';\r\n\r\nexport const convertSagaArray = sagas => {\r\n  if (Array.isArray(sagas))\r\n    return function* rootSaga() {\r\n      yield all(sagas);\r\n    };\r\n  return sagas;\r\n};\r\n\r\nexport const injectReducer = ({ key, reducer }, store = DefaultStore) => {\r\n  if (\r\n    Reflect.has(store.injectedReducers, key) &&\r\n    store.injectedReducers[key] === reducer\r\n  )\r\n    return;\r\n  store.injectedReducers[key] = reducer;\r\n\r\n  store.replaceReducer(store.createReducer(store.injectedReducers));\r\n};\r\n\r\nexport const injectSaga = ({ key, saga }, store = DefaultStore) => {\r\n  const rootSaga = convertSagaArray(saga);\r\n  let hasSaga = Reflect.has(store.injectedSagas, key);\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const oldDescriptor = store.injectedSagas[key]; // enable hot reloading of daemon and once-till-unmount sagas\r\n\r\n    if (hasSaga && oldDescriptor.saga !== rootSaga) {\r\n      oldDescriptor.task.cancel();\r\n      hasSaga = false;\r\n    }\r\n  }\r\n  console.info('injectSaga, key: ', key, 'hasSaga: ', hasSaga);\r\n\r\n  if (!hasSaga) {\r\n    store.injectedSagas[key] = {\r\n      key,\r\n      saga: rootSaga,\r\n      task: store.runSaga(rootSaga),\r\n    };\r\n  }\r\n};\r\n\r\nexport const injectRedux = ({ key, reducer, saga }, store = DefaultStore) => {\r\n  console.info('injectRedux, key: ', key);\r\n  if (reducer) injectReducer({ key, reducer }, store);\r\n  if (saga) injectSaga({ key, saga }, store);\r\n};\r\n\r\nexport const useInjectRedux = injectRedux;\r\n","import { action } from '../util';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '../types/version';\r\n\r\nexport const setVersion = (commitRef, buildNo) =>\r\n  action(SET_VERSION, { commitRef, buildNo });\r\n\r\nexport const setVersionStatus = status =>\r\n  action(SET_VERSION_STATUS, { status });\r\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","isError","isReady","produce","state","action","type","nodes","combineMerge","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","merge","indexOf","push","currentHostname","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","error","undefined","isLoading","location","mappedEntry","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","Object","keys","length","sys","nodeWithoutEntry","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","entryUri","uri","route","component","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblings","parentId","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","surrogateKeys","split","arrayMerge","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","globalThis","STATE_TYPE","immutable","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","hasNavigationTree","getIn","selectNavigationRoot","selectNavigationChildren","selectNavigationDepends","convertSagaArray","sagas","Array","isArray","rootSaga","all","injectReducer","key","reducer","DefaultStore","Reflect","has","replaceReducer","injectSaga","saga","hasSaga","injectedSagas","process","env","NODE_ENV","oldDescriptor","task","cancel","console","info","injectRedux","useInjectRedux","setVersion","setVersionStatus"],"mappings":"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"}