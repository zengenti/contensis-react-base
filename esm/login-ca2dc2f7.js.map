{"version":3,"file":"login-ca2dc2f7.js","sources":["../src/routing/util/find-contenttype-mapping.ts","../src/user/transformations/mapClientCredentials.js","../src/user/util/ContensisManagementApi.js","../src/user/util/CookieHelper.class.js","../src/user/util/OidcUserManager.js","../src/user/util/LoginHelper.class.js","../src/user/redux/sagas/login.js"],"sourcesContent":["import { ContentTypeMapping } from '../routes';\n\nexport const findContentTypeMapping = (\n  ContentTypeMappings: ContentTypeMapping[],\n  contentTypeId: string\n) => ContentTypeMappings.find(ct => ct.contentTypeID === contentTypeId);\n","import { mapJson } from '~/util/json-mapper';\n\nconst clientCredentials = {\n  bearerToken: 'bearerToken',\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\n    bearerTokenExpiryDate.toISOString(),\n  refreshToken: 'refreshToken',\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\n    refreshTokenExpiryDate.toISOString(),\n  contensisClassicToken: 'contensisClassicToken',\n};\nexport default obj => mapJson(obj, clientCredentials);\n","// import { Client } from 'contensis-management-api';\n\nexport const getManagementApiClient = async ({\n  bearerToken,\n  bearerTokenExpiryDate,\n  refreshToken,\n  refreshTokenExpiryDate,\n  contensisClassicToken,\n  username,\n  password,\n}) => {\n  const rootUrl = SERVERS.api || SERVERS.cms; /* global SERVERS */\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\n\n  let config = {};\n  if (refreshToken) {\n    config = {\n      clientType: 'contensis_classic_refresh_token',\n      clientDetails: {\n        refreshToken,\n      },\n    };\n  } else {\n    config = {\n      clientType: 'contensis_classic',\n      clientDetails: {\n        username,\n        password,\n      },\n    };\n  }\n  const { Client } = await import('contensis-management-api');\n\n  const client = Client.create({\n    ...config,\n    projectId,\n    rootUrl,\n  });\n\n  if (bearerToken) client.bearerToken = bearerToken;\n  if (bearerTokenExpiryDate)\n    client.bearerTokenExpiryDate = bearerTokenExpiryDate;\n  if (refreshToken) client.refreshToken = refreshToken;\n  if (refreshTokenExpiryDate)\n    client.refreshTokenExpiryDate = refreshTokenExpiryDate;\n  if (contensisClassicToken)\n    client.contensisClassicToken = contensisClassicToken;\n\n  return client;\n};\n","import Cookies from 'js-cookie';\n\nconst COOKIE_VALID_DAYS = 1; // 0 = Session cookie\n\n// Override the default js-cookie conversion / encoding\n// methods so the written values work with Contensis sites\nconst _cookie = Cookies.withConverter({\n  read: value => decodeURIComponent(value),\n  write: value => encodeURIComponent(value),\n});\n\nexport class CookieHelper {\n  static GetCookie(name) {\n    let cookie = _cookie.get(name);\n    if (typeof cookie == 'undefined') {\n      return null;\n    }\n    return cookie;\n  }\n\n  static SetCookie(name, value, maxAgeDays = COOKIE_VALID_DAYS) {\n    maxAgeDays === 0\n      ? _cookie.set(name, value)\n      : _cookie.set(name, value, { expires: maxAgeDays });\n  }\n\n  static DeleteCookie(name) {\n    _cookie.remove(name);\n  }\n}\n","const context = typeof window != 'undefined' ? window : global;\nconst requireOidc =\n  process.env.NODE_ENV === 'development'\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n    : context.WSFED_LOGIN === 'true';\n\nconst servers = SERVERS; /* global SERVERS */\n\nexport const userManagerConfig =\n  typeof window !== 'undefined'\n    ? {\n        authority: `${servers.cms}/authenticate/`,\n        client_id: 'WebsiteAdfsClient',\n        redirect_uri: window.location.toString(),\n        post_logout_redirect_uri: window.location.toString(),\n        response_type: 'id_token',\n        scope: 'openid',\n        filterProtocolClaims: false,\n      }\n    : {};\n\nexport const createUserManager = async config => {\n  if (typeof window !== 'undefined' && requireOidc) {\n    try {\n      const { UserManager } = await import(\n        /* webpackChunkName: \"oidcclient\" */ 'oidc-client'\n      );\n      return new UserManager(config);\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.log('Exception in createUserManager: ', e);\n    }\n  } else return {};\n};\n\n//const userManager = createUserManager(userManagerConfig);\n\n// export default userManager;\n","/* eslint-disable require-atomic-updates */\nimport { getManagementApiClient } from './ContensisManagementApi';\nimport { to } from 'await-to-js';\n\nimport { CookieHelper } from './CookieHelper.class';\n\nimport mapClientCredentials from '../transformations/mapClientCredentials';\nimport { createUserManager, userManagerConfig } from './OidcUserManager';\n\nexport const LOGIN_COOKIE = 'ContensisCMSUserName';\nexport const REFRESH_TOKEN_COOKIE = 'RefreshToken';\n\nconst context = typeof window != 'undefined' ? window : global;\n\nexport class LoginHelper {\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\n  static WSFED_LOGIN =\n    process.env.NODE_ENV === 'development'\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n      : context.WSFED_LOGIN === 'true';\n  static LOGIN_ROUTE = '/account/login';\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\n\n  static SetLoginCookies({ contensisClassicToken, refreshToken }) {\n    console.info(\n      'SetLoginCookies:',\n      LOGIN_COOKIE,\n      contensisClassicToken,\n      REFRESH_TOKEN_COOKIE,\n      refreshToken\n    );\n    if (contensisClassicToken)\n      CookieHelper.SetCookie(LOGIN_COOKIE, contensisClassicToken);\n    if (refreshToken)\n      CookieHelper.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\n  }\n\n  static GetCachedCredentials() {\n    return {\n      bearerToken: null,\n      bearerTokenExpiryDate: null,\n      refreshToken: CookieHelper.GetCookie(REFRESH_TOKEN_COOKIE),\n      refreshTokenExpiryDate: null,\n      contensisClassicToken: CookieHelper.GetCookie(LOGIN_COOKIE),\n    };\n  }\n\n  static ClearCachedCredentials() {\n    CookieHelper.DeleteCookie(LOGIN_COOKIE);\n    CookieHelper.DeleteCookie(REFRESH_TOKEN_COOKIE);\n\n    if (LoginHelper.WSFED_LOGIN && typeof window !== 'undefined') {\n      // remove any oidc keys left over in localStorage\n      const { localStorage } = window;\n      const keys = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (typeof key === 'string' && key.startsWith('oidc.'))\n          keys.push(localStorage.key(i));\n      }\n      keys.forEach(key => localStorage.removeItem(key));\n    }\n  }\n\n  static async LoginUser({ username, password, clientCredentials }) {\n    let credentials = clientCredentials;\n    let authenticationState = {\n      clientCredentials: null,\n      isAuthenticated: false,\n      isAuthenticationError: false,\n      isError: false,\n    };\n    let transientClient;\n    let user;\n\n    if (username && password) {\n      // Get a management client with username and password\n      transientClient = await getManagementApiClient({\n        username,\n        password,\n      });\n\n      // Ensure the client has requested a bearer token\n      const [loginError, clientBearerToken] = await to(\n        transientClient.ensureBearerToken()\n      );\n\n      // Problem getting token with username and password\n      if (loginError) {\n        authenticationState = {\n          clientCredentials: null,\n          errorMessage: loginError.message || null,\n          isAuthenticated: false,\n          isAuthenticationError: loginError.name.includes(\n            'ContensisAuthenticationError'\n          ),\n          isError: true,\n        };\n        LoginHelper.ClearCachedCredentials();\n      }\n\n      // Got a token using username and password\n      if (clientBearerToken) {\n        // Set credentials so we can continue to GetUserDetails\n        credentials = mapClientCredentials(transientClient);\n        LoginHelper.SetLoginCookies(credentials);\n        authenticationState = {\n          clientCredentials: credentials,\n          isAuthenticated: true,\n          isAuthenticationError: false,\n          isError: false,\n        };\n      }\n    }\n\n    // If we have credentials supplied by a successful username and password login\n    // or clientCredentials supplied in the options argument we can continue to\n    // fetch the user's details\n    if (credentials) {\n      const client =\n        transientClient || (await getManagementApiClient(credentials));\n      const [error, userDetails] = await LoginHelper.GetUserDetails(client);\n\n      if (error) {\n        authenticationState = {\n          clientCredentials: null,\n          errorMessage: error.message,\n          isAuthenticated: false,\n          isAuthenticationError: false,\n          isError: true,\n        };\n        LoginHelper.ClearCachedCredentials();\n      } else {\n        // Ensure we get latest refreshToken and contensisClassicToken from the latest client\n        const latestCredentials = mapClientCredentials(client);\n        LoginHelper.SetLoginCookies(latestCredentials);\n\n        user = userDetails;\n        authenticationState = {\n          clientCredentials: latestCredentials,\n          isAuthenticated: true,\n          isAuthenticationError: false,\n          isError: false,\n        };\n      }\n    }\n\n    return { authenticationState, user };\n  }\n\n  static GetUserDetails = async client => {\n    let userError,\n      groupsError,\n      user = {},\n      groupsResult;\n\n    [userError, user] = await to(client.security.users.getCurrent());\n    if (user && user.id) {\n      [groupsError, groupsResult] = await to(\n        client.security.users.getUserGroups({\n          userId: user.id,\n          includeInherited: true,\n        })\n      );\n      // Set groups attribute in user object to be the items\n      // array from the getUserGroups result\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\n\n      //If groups call fails then log the error but allow the user to login still\n      // eslint-disable-next-line no-console\n      if (groupsError) console.log(groupsError);\n    }\n    return [userError, user];\n  };\n\n  static LogoutUser(redirectPath) {\n    LoginHelper.ClearCachedCredentials();\n    if (LoginHelper.WSFED_LOGIN) {\n      LoginHelper.WsFedLogout(redirectPath);\n    } else {\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\n      else LoginHelper.ClientRedirectToSignInPage();\n    }\n  }\n\n  static ClientRedirectToHome(location) {\n    if (typeof window != 'undefined') {\n      let url = '/';\n      if (location) {\n        const { search, hash } = location;\n        url = search ? `${url}${search}` : url;\n        url = hash ? `${url}${hash}` : url;\n      }\n      window.location.href = url;\n    }\n  }\n\n  static async ClientRedirectToSignInPage(redirectPath) {\n    if (LoginHelper.WSFED_LOGIN) {\n      await LoginHelper.WsFedLogout();\n      await LoginHelper.WsFedLogin();\n    } else {\n      // Standard Contensis Login\n      let url = LoginHelper.LOGIN_ROUTE;\n      if (typeof redirectPath === 'string')\n        url = `${url}?redirect_uri=${redirectPath}`;\n      if (\n        typeof location !== 'undefined' &&\n        redirectPath !== LoginHelper.LOGIN_ROUTE\n      )\n        location.replace(url);\n    }\n  }\n\n  static ClientRedirectToAccessDeniedPage(originalPath) {\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\n    if (originalPath === url) return;\n\n    if (typeof originalPath === 'string')\n      url = `${url}?original_uri=${originalPath}`;\n    if (typeof location !== 'undefined') location.href = url;\n  }\n\n  static ClientRedirectToPath(redirectPath) {\n    if (typeof redirectPath === 'string') {\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\n    } else LoginHelper.ClientRedirectToHome();\n  }\n\n  static async WsFedLogin(redirectUri) {\n    const userManager = await createUserManager(userManagerConfig);\n    userManager.signinRedirect({\n      scope: 'openid',\n      response_type: 'id_token',\n      redirect_uri: redirectUri || window.location.toString(),\n    });\n  }\n\n  static RemoveSecurityTokenQuery() {\n    const params = new URLSearchParams(window.location.search);\n    if (params.has('securitytoken') || params.has('securityToken')) {\n      params.delete('securitytoken');\n      params.delete('securityToken');\n      window.location = `${window.location.pathname}${\n        params.toString() ? `?${params}` : ''\n      }`;\n    }\n  }\n\n  static async WsFedLogout(redirectPath) {\n    await fetch(\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\n      {\n        credentials: 'include',\n      }\n    );\n    if (redirectPath) {\n      window.location = redirectPath;\n    } else {\n      // Explicitly check and remove any stale\n      // security token that may be in the query string\n      LoginHelper.RemoveSecurityTokenQuery();\n    }\n  }\n\n  static async GetCredentialsForSecurityToken(securityToken) {\n    const [error, response] = await to(\n      fetch(`${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          securityToken: encodeURIComponent(securityToken),\n        }),\n      })\n    );\n    if (error) return [{ message: 'Failed to fetch credentials' }];\n    if (response.ok) {\n      const [parseError, body] = await to(response.json());\n      if (parseError) return [parseError];\n\n      const { LogonResult, ApplicationData = [] } = body;\n      if (LogonResult !== 0) {\n        return [\n          { message: 'Security token is invalid', data: ApplicationData },\n        ];\n      }\n      if (ApplicationData.length > 0) {\n        let refreshToken;\n        ApplicationData.forEach(item => {\n          if (item.Key === 'ContensisSecurityRefreshToken')\n            refreshToken = item.Value;\n        });\n        if (!refreshToken) {\n          return [\n            {\n              message:\n                'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\n            },\n          ];\n        }\n        return [undefined, refreshToken];\n      } else {\n        return [\n          {\n            message:\n              'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\n          },\n        ];\n      }\n    } else {\n      return [\n        {\n          message: `Fetch credentials error: ${response.status} ${response.statusText}`,\n        },\n      ];\n    }\n  }\n\n  static isZengentiStaff(email) {\n    const emailRefs = ['@zengenti', '@contensis'];\n\n    return emailRefs.some(emailRef => {\n      if (email.includes(emailRef)) {\n        return true;\n      }\n    });\n  }\n}\n","import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport {\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  VALIDATE_USER,\n} from '../types';\nimport {\n  selectUserIsAuthenticated,\n  selectClientCredentials,\n  selectUserGroups,\n} from '../selectors';\n\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { findContentTypeMapping } from '~/routing/util/find-contenttype-mapping';\n\nimport mapClientCredentials from '~/user/transformations/mapClientCredentials';\n\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { LoginHelper } from '~/user/util/LoginHelper.class';\nimport { matchUserGroup } from '~/user/util/matchGroups';\nimport { queryParams } from '~/util/navigation';\n\nexport const loginSagas = [\n  takeEvery(LOGIN_USER, loginUserSaga),\n  takeEvery(LOGOUT_USER, logoutUserSaga),\n  takeEvery(VALIDATE_USER, validateUserSaga),\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\n];\n\nexport function* handleRequiresLoginSaga(action) {\n  const {\n    entry,\n    requireLogin,\n    routes: { ContentTypeMappings },\n    staticRoute,\n  } = action;\n  let userLoggedIn = yield select(selectUserIsAuthenticated);\n\n  // Check for a securityToken in querystring\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\n\n  // Check if any of the defined routes have \"requireLogin\" attribute\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\n  const { requireLogin: authContentType } =\n    (entry &&\n      findContentTypeMapping(ContentTypeMappings, entry?.sys?.contentTypeId)) ||\n    {};\n\n  // If requireLogin, authRoute or authContentType has been specified as an\n  // array of groups we can merge all the arrays and match on any group supplied\n  const routeRequiresGroups = [\n    ...((Array.isArray(authContentType) && authContentType) || []),\n    ...((Array.isArray(authRoute) && authRoute) || []),\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\n  ];\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\n\n  if (!userLoggedIn) {\n    // If cookies or securityToken are found on any route change\n    // always validate and login the user\n    if (routeRequiresLogin) {\n      // If routeRequiresLogin do a blocking call that returns userLoggedIn\n      userLoggedIn = yield call(validateUserSaga, { securityToken });\n    }\n    // otherwise do a non blocking put to handle validation in the background\n    else yield put({ type: VALIDATE_USER, securityToken });\n  }\n\n  if (routeRequiresLogin) {\n    // If a security token is in the querystring and we are not already\n    // logged in something is wrong and we won't bother going on another redirect loop\n    if (!userLoggedIn && !securityToken) {\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\n    } else if (routeRequiresGroups.length > 0) {\n      const userGroups = yield select(selectUserGroups, 'js');\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\n\n      if (!groupMatch)\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\n    }\n  }\n}\n\nfunction* validateUserSaga({ securityToken }) {\n  // Check for refreshToken in cookies\n  let clientCredentials = LoginHelper.GetCachedCredentials();\n\n  if (securityToken || clientCredentials.refreshToken) {\n    // We only attempt to validate the user if one of the stored\n    // tokens are found, in this case we set loading state manually\n    // so we don't need to set and unset loading if there are no stored\n    yield put({\n      type: SET_AUTHENTICATION_STATE,\n      authenticationState: {\n        isLoading: true,\n      },\n    });\n    // If we have just a security token we will call a CMS endpoint\n    // and provide us with a RefreshToken cookie we can use during login\n    const [error, refreshToken] =\n      yield LoginHelper.GetCredentialsForSecurityToken(securityToken);\n    if (refreshToken) {\n      // Set cookies and reload values\n      LoginHelper.SetLoginCookies({\n        contensisClassicToken: securityToken,\n        refreshToken,\n      });\n      clientCredentials = LoginHelper.GetCachedCredentials();\n    }\n\n    // Log the user in if a refreshToken is found\n    if (clientCredentials.refreshToken)\n      yield call(loginUserSaga, { clientCredentials });\n    else if (error)\n      yield put({\n        type: SET_AUTHENTICATION_STATE,\n        authenticationState: {\n          isError: true,\n          errorMessage:\n            error?.message ||\n            (error && 'toString' in error && error.toString()),\n        },\n      });\n  }\n\n  // Tell any callers have we successfully logged in?\n  return yield select(selectUserIsAuthenticated);\n}\n\nfunction* loginUserSaga(action = {}) {\n  const { username, password, clientCredentials } = action;\n\n  // If a WSFED_LOGIN site has dispatched the loginUser action\n  // just redirect them to the Identity Provider sign in\n  if (action.type === LOGIN_USER && LoginHelper.WSFED_LOGIN)\n    LoginHelper.ClientRedirectToSignInPage();\n\n  const { authenticationState, user } = yield LoginHelper.LoginUser({\n    username,\n    password,\n    clientCredentials,\n  });\n\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    authenticationState,\n    user,\n  });\n}\nconst removeHostnamePart = path => {\n  // eslint-disable-next-line no-console\n  console.log(path);\n  const relativePath = '/' + path.split('/').splice(3).join('/');\n  // eslint-disable-next-line no-console\n  console.log(relativePath);\n  return relativePath;\n};\n\nfunction* redirectAfterSuccessfulLoginSaga() {\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\n  const { redirect_uri: redirectPath, ReturnURL: assetRedirectPath } =\n    queryParams(yield select(selectCurrentSearch));\n\n  if (isLoggedIn && assetRedirectPath && typeof window != 'undefined') {\n    const path = removeHostnamePart(assetRedirectPath);\n    // This has to be a hard href to get the app to\n    // leave React and hit the server for the IIS hosted assets\n    window.location.href = path;\n    // yield put(setRoute(path)); // does not work in this scenario\n  } else if (isLoggedIn && redirectPath) {\n    yield put(setRoute(redirectPath));\n  }\n}\n\nfunction* logoutUserSaga({ redirectPath }) {\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    user: null,\n  });\n  yield LoginHelper.LogoutUser(redirectPath);\n}\n\nexport function* refreshSecurityToken() {\n  const clientCredentials = yield select(selectClientCredentials, 'js');\n  if (Object.keys(clientCredentials).length > 0) {\n    const client = yield getManagementApiClient(clientCredentials);\n    yield client.authenticate();\n\n    yield put({\n      type: SET_AUTHENTICATION_STATE,\n      authenticationState: {\n        clientCredentials: mapClientCredentials(client),\n      },\n    });\n  }\n}\n"],"names":["findContentTypeMapping","ContentTypeMappings","contentTypeId","find","ct","contentTypeID","clientCredentials","bearerToken","bearerTokenExpiryDate","toISOString","refreshToken","refreshTokenExpiryDate","contensisClassicToken","obj","mapJson","getManagementApiClient","username","password","rootUrl","SERVERS","api","cms","projectId","PROJECTS","id","config","clientType","clientDetails","Client","client","create","COOKIE_VALID_DAYS","_cookie","Cookies","withConverter","read","value","decodeURIComponent","write","encodeURIComponent","CookieHelper","GetCookie","name","cookie","get","SetCookie","maxAgeDays","set","expires","DeleteCookie","remove","context","window","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","UserManager","e","console","log","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","LoginHelper","SetLoginCookies","info","GetCachedCredentials","ClearCachedCredentials","localStorage","keys","i","length","key","startsWith","push","forEach","removeItem","LoginUser","credentials","authenticationState","isAuthenticated","isAuthenticationError","isError","transientClient","user","loginError","clientBearerToken","to","ensureBearerToken","errorMessage","message","includes","mapClientCredentials","error","userDetails","GetUserDetails","latestCredentials","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","href","WsFedLogin","LOGIN_ROUTE","replace","ClientRedirectToAccessDeniedPage","originalPath","ACCESS_DENIED_ROUTE","redirectUri","userManager","signinRedirect","RemoveSecurityTokenQuery","params","URLSearchParams","has","delete","pathname","fetch","CMS_URL","GetCredentialsForSecurityToken","securityToken","response","method","headers","Accept","body","JSON","stringify","ok","parseError","json","LogonResult","ApplicationData","data","item","Key","Value","undefined","status","statusText","isZengentiStaff","email","emailRefs","some","emailRef","userError","groupsError","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","items","groups","loginSagas","takeEvery","LOGIN_USER","loginUserSaga","LOGOUT_USER","logoutUserSaga","VALIDATE_USER","validateUserSaga","SET_AUTHENTICATION_STATE","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","action","entry","requireLogin","routes","staticRoute","userLoggedIn","select","selectUserIsAuthenticated","currentQs","queryParams","selectCurrentSearch","securitytoken","authRoute","route","authContentType","sys","routeRequiresGroups","Array","isArray","routeRequiresLogin","call","put","type","userGroups","selectUserGroups","groupMatch","matchUserGroup","isLoading","removeHostnamePart","path","relativePath","split","splice","join","isLoggedIn","ReturnURL","assetRedirectPath","setRoute","refreshSecurityToken","selectClientCredentials","Object","authenticate"],"mappings":"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"}