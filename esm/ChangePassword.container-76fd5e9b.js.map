{"version":3,"file":"ChangePassword.container-76fd5e9b.js","sources":["../src/routing/util/find-contenttype-mapping.ts","../src/user/transformations/mapClientCredentials.js","../src/user/util/ContensisManagementApi.js","../src/user/util/OidcUserManager.ts","../src/user/util/LoginHelper.class.js","../src/user/redux/sagas/login.js","../src/user/redux/actions.js","../src/user/hooks/useLogin.js","../src/user/containers/Login.container.js","../src/user/hooks/useRegistration.js","../src/user/containers/Registration.container.js","../src/user/hooks/useForgotPassword.js","../src/user/containers/ForgotPassword.container.js","../src/user/hooks/useChangePassword.js","../src/user/containers/ChangePassword.container.js"],"sourcesContent":["import { ContentTypeMapping } from '../routes';\n\nexport const findContentTypeMapping = (\n  ContentTypeMappings: ContentTypeMapping[],\n  contentTypeId: string\n) => ContentTypeMappings.find(ct => ct.contentTypeID === contentTypeId);\n","import { mapJson } from '~/util/json-mapper';\n\nconst clientCredentials = {\n  bearerToken: 'bearerToken',\n  bearerTokenExpiryDate: ({ bearerTokenExpiryDate }) =>\n    bearerTokenExpiryDate.toISOString(),\n  refreshToken: 'refreshToken',\n  refreshTokenExpiryDate: ({ refreshTokenExpiryDate }) =>\n    refreshTokenExpiryDate.toISOString(),\n  contensisClassicToken: 'contensisClassicToken',\n};\nexport default obj => mapJson(obj, clientCredentials);\n","// import { Client } from 'contensis-management-api';\n\nexport const getManagementApiClient = async ({\n  bearerToken,\n  bearerTokenExpiryDate,\n  refreshToken,\n  refreshTokenExpiryDate,\n  contensisClassicToken,\n  username,\n  password,\n}) => {\n  const rootUrl = SERVERS.api || SERVERS.cms; /* global SERVERS */\n  const projectId = PROJECTS[0].id; /* global PROJECTS */\n\n  let config = {};\n  if (refreshToken) {\n    config = {\n      clientType: 'contensis_classic_refresh_token',\n      clientDetails: {\n        refreshToken,\n      },\n    };\n  } else {\n    config = {\n      clientType: 'contensis_classic',\n      clientDetails: {\n        username,\n        password,\n      },\n    };\n  }\n\n  let { Client } = await import('contensis-management-api');\n\n  if (typeof window === 'undefined') {\n    const { UniversalClient } = await import('contensis-management-api');\n    Client = UniversalClient;\n  }\n\n  const client = Client.create({\n    ...config,\n    projectId,\n    rootUrl,\n  });\n\n  if (bearerToken) client.bearerToken = bearerToken;\n  if (bearerTokenExpiryDate)\n    client.bearerTokenExpiryDate = bearerTokenExpiryDate;\n  if (refreshToken) client.refreshToken = refreshToken;\n  if (refreshTokenExpiryDate)\n    client.refreshTokenExpiryDate = refreshTokenExpiryDate;\n  if (contensisClassicToken)\n    client.contensisClassicToken = contensisClassicToken;\n\n  return client;\n};\n","import { UserManagerSettings } from 'oidc-client';\n\nconst context = (\n  typeof window != 'undefined' ? window : global\n) as typeof globalThis & {\n  WSFED_LOGIN: string;\n};\n\nconst requireOidc =\n  process.env.NODE_ENV === 'development'\n    ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n    : context.WSFED_LOGIN === 'true';\n\nconst servers = SERVERS; /* global SERVERS */\n\nexport const userManagerConfig =\n  typeof window !== 'undefined'\n    ? {\n        authority: `${servers.cms}/authenticate/`,\n        client_id: 'WebsiteAdfsClient',\n        redirect_uri: window.location.toString(),\n        post_logout_redirect_uri: window.location.toString(),\n        response_type: 'id_token',\n        scope: 'openid',\n        filterProtocolClaims: false,\n      }\n    : {};\n\nexport const createUserManager = async (config: UserManagerSettings) => {\n  if (typeof window !== 'undefined' && requireOidc) {\n    try {\n      const { UserManager } = await import(\n        /* webpackChunkName: \"oidcclient\" */ 'oidc-client'\n      );\n      return new UserManager(config);\n    } catch (e) {\n      console.error('Exception in createUserManager: ', e);\n    }\n  } else return {};\n};\n","/* eslint-disable require-atomic-updates */\nimport { to } from 'await-to-js';\n\nimport { getManagementApiClient } from './ContensisManagementApi';\n\nimport mapClientCredentials from '../transformations/mapClientCredentials';\nimport { createUserManager, userManagerConfig } from './OidcUserManager';\nimport { LOGIN_COOKIE, REFRESH_TOKEN_COOKIE } from './CookieConstants';\n\nconst context = typeof window != 'undefined' ? window : global;\n\nexport class LoginHelper {\n  static CMS_URL = SERVERS.cms /* global SERVERS */;\n  static WSFED_LOGIN =\n    process.env.NODE_ENV === 'development'\n      ? WSFED_LOGIN === 'true' /* global WSFED_LOGIN */\n      : context.WSFED_LOGIN === 'true';\n  static LOGIN_ROUTE = '/account/login';\n  static ACCESS_DENIED_ROUTE = '/account/access-denied';\n\n  cookies;\n  constructor(cookies) {\n    this.cookies = cookies;\n  }\n\n  SetLoginCookies({ contensisClassicToken, refreshToken }) {\n    console.info(\n      'SetLoginCookies:',\n      LOGIN_COOKIE,\n      contensisClassicToken,\n      REFRESH_TOKEN_COOKIE,\n      refreshToken\n    );\n\n    if (contensisClassicToken)\n      this.cookies.SetCookie(LOGIN_COOKIE, contensisClassicToken);\n\n    if (refreshToken)\n      this.cookies.SetCookie(REFRESH_TOKEN_COOKIE, refreshToken);\n  }\n\n  GetCachedCredentials() {\n    return {\n      bearerToken: null,\n      bearerTokenExpiryDate: null,\n      refreshToken: this.cookies.GetCookie(REFRESH_TOKEN_COOKIE),\n      refreshTokenExpiryDate: null,\n      contensisClassicToken: this.cookies.GetCookie(LOGIN_COOKIE),\n    };\n  }\n\n  ClearCachedCredentials() {\n    this.cookies.DeleteCookie(LOGIN_COOKIE);\n    this.cookies.DeleteCookie(REFRESH_TOKEN_COOKIE);\n\n    if (LoginHelper.WSFED_LOGIN && typeof window !== 'undefined') {\n      // remove any oidc keys left over in localStorage\n      const { localStorage } = window;\n      const keys = [];\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        if (typeof key === 'string' && key.startsWith('oidc.'))\n          keys.push(localStorage.key(i));\n      }\n      keys.forEach(key => localStorage.removeItem(key));\n    }\n  }\n\n  async LoginUser({ username, password, clientCredentials }) {\n    let credentials = clientCredentials;\n    let authenticationState = {\n      clientCredentials: null,\n      isAuthenticated: false,\n      isAuthenticationError: false,\n      isError: false,\n    };\n    let transientClient;\n    let user;\n\n    if (username && password) {\n      // Get a management client with username and password\n      transientClient = await getManagementApiClient({\n        username,\n        password,\n      });\n\n      // Ensure the client has requested a bearer token\n      const [loginError, clientBearerToken] = await to(\n        transientClient.ensureBearerToken()\n      );\n\n      // Problem getting token with username and password\n      if (loginError) {\n        authenticationState = {\n          clientCredentials: null,\n          errorMessage: loginError.message || null,\n          isAuthenticated: false,\n          isAuthenticationError: loginError.name.includes(\n            'ContensisAuthenticationError'\n          ),\n          isError: true,\n        };\n        this.ClearCachedCredentials();\n      }\n\n      // Got a token using username and password\n      if (clientBearerToken) {\n        // Set credentials so we can continue to GetUserDetails\n        credentials = mapClientCredentials(transientClient);\n        this.SetLoginCookies(credentials);\n        authenticationState = {\n          clientCredentials: credentials,\n          isAuthenticated: true,\n          isAuthenticationError: false,\n          isError: false,\n        };\n      }\n    }\n\n    // If we have credentials supplied by a successful username and password login\n    // or clientCredentials supplied in the options argument we can continue to\n    // fetch the user's details\n    if (credentials) {\n      const client =\n        transientClient || (await getManagementApiClient(credentials));\n      const [error, userDetails] = await LoginHelper.GetUserDetails(client);\n\n      if (error) {\n        authenticationState = {\n          clientCredentials: null,\n          errorMessage: error.message,\n          isAuthenticated: false,\n          isAuthenticationError: false,\n          isError: true,\n        };\n        this.ClearCachedCredentials();\n      } else {\n        // Ensure we get latest refreshToken and contensisClassicToken from the latest client\n        const latestCredentials = mapClientCredentials(client);\n        this.SetLoginCookies(latestCredentials);\n\n        user = userDetails;\n        authenticationState = {\n          clientCredentials: latestCredentials,\n          isAuthenticated: true,\n          isAuthenticationError: false,\n          isError: false,\n        };\n      }\n    }\n\n    return { authenticationState, user };\n  }\n\n  LogoutUser(redirectPath) {\n    this.ClearCachedCredentials();\n    if (LoginHelper.WSFED_LOGIN) {\n      LoginHelper.WsFedLogout(redirectPath);\n    } else {\n      if (redirectPath) LoginHelper.ClientRedirectToPath(redirectPath);\n      else LoginHelper.ClientRedirectToSignInPage();\n    }\n  }\n\n  static withCookies = cookieHelper => new LoginHelper(cookieHelper);\n\n  static GetUserDetails = async client => {\n    let userError,\n      groupsError,\n      user = {},\n      groupsResult;\n\n    [userError, user] = await to(client.security.users.getCurrent());\n    if (user && user.id) {\n      [groupsError, groupsResult] = await to(\n        client.security.users.getUserGroups({\n          userId: user.id,\n          includeInherited: true,\n          pageOptions: { pageSize: 100 },\n        })\n      );\n      // Set groups attribute in user object to be the items\n      // array from the getUserGroups result\n      if (groupsResult && groupsResult.items) user.groups = groupsResult.items;\n\n      //If groups call fails then log the error but allow the user to login still\n      // eslint-disable-next-line no-console\n      if (groupsError) console.log(groupsError);\n    }\n    return [userError, user];\n  };\n\n  static ClientRedirectToHome(location) {\n    if (typeof window != 'undefined') {\n      let url = '/';\n      if (location) {\n        const { search, hash } = location;\n        url = search ? `${url}${search}` : url;\n        url = hash ? `${url}${hash}` : url;\n      }\n      window.location.href = url;\n    }\n  }\n\n  static async ClientRedirectToSignInPage(redirectPath) {\n    if (typeof location === 'undefined') return;\n    if (LoginHelper.WSFED_LOGIN) {\n      await LoginHelper.WsFedLogout();\n      await LoginHelper.WsFedLogin();\n    } else {\n      // Standard Contensis Login\n      let url = LoginHelper.LOGIN_ROUTE;\n      if (typeof redirectPath === 'string')\n        url = `${url}?redirect_uri=${redirectPath}`;\n      if (\n        typeof location !== 'undefined' &&\n        redirectPath !== LoginHelper.LOGIN_ROUTE\n      )\n        location.replace(url);\n    }\n  }\n\n  static GetAccessDeniedRoute(originalPath) {\n    let url = LoginHelper.ACCESS_DENIED_ROUTE;\n    if (originalPath !== url && typeof originalPath === 'string')\n      url = `${url}?original_uri=${originalPath}`;\n    return url;\n  }\n\n  static ClientRedirectToAccessDeniedPage(originalPath) {\n    if (typeof location !== 'undefined')\n      location.href = LoginHelper.GetAccessDeniedRoute(originalPath);\n  }\n\n  static ClientRedirectToPath(redirectPath) {\n    if (typeof redirectPath === 'string') {\n      if (typeof location !== 'undefined') window.location.href = redirectPath;\n    } else LoginHelper.ClientRedirectToHome();\n  }\n\n  static async WsFedLogin(redirectUri) {\n    const userManager = await createUserManager(userManagerConfig);\n    userManager.signinRedirect({\n      scope: 'openid',\n      response_type: 'id_token',\n      redirect_uri: redirectUri || window.location.toString(),\n    });\n  }\n\n  static RemoveSecurityTokenQuery() {\n    const params = new URLSearchParams(window.location.search);\n    if (params.has('securitytoken') || params.has('securityToken')) {\n      params.delete('securitytoken');\n      params.delete('securityToken');\n      window.location = `${window.location.pathname}${\n        params.toString() ? `?${params}` : ''\n      }`;\n    }\n  }\n\n  static async WsFedLogout(redirectPath) {\n    await fetch(\n      `${LoginHelper.CMS_URL}/authenticate/logout?jsonResponseRequired=true`,\n      {\n        credentials: 'include',\n      }\n    );\n    if (redirectPath) {\n      window.location = redirectPath;\n    } else {\n      // Explicitly check and remove any stale\n      // security token that may be in the query string\n      LoginHelper.RemoveSecurityTokenQuery();\n    }\n  }\n\n  static async GetCredentialsForSecurityToken(securityToken) {\n    const [error, response] = await to(\n      fetch(`${LoginHelper.CMS_URL}/REST/Contensis/Security/IsAuthenticated`, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          securityToken: encodeURIComponent(securityToken),\n        }),\n      })\n    );\n    if (error) return [{ message: 'Failed to fetch credentials' }];\n    if (response.ok) {\n      const [parseError, body] = await to(response.json());\n      if (parseError) return [parseError];\n\n      const { LogonResult, ApplicationData = [] } = body;\n      if (LogonResult !== 0) {\n        console.info(`Security token is invalid - LogonResult: ${LogonResult}`);\n        return [\n          { message: 'Security token is invalid', data: ApplicationData },\n        ];\n      }\n      if (ApplicationData.length > 0) {\n        let refreshToken;\n        ApplicationData.forEach(item => {\n          if (item.Key === 'ContensisSecurityRefreshToken')\n            refreshToken = item.Value;\n        });\n        if (!refreshToken) {\n          return [\n            {\n              message:\n                'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\n            },\n          ];\n        }\n        return [undefined, refreshToken];\n      } else {\n        return [\n          {\n            message:\n              'Fetch credentials: Unable to find ContensisSecurityRefreshToken',\n          },\n        ];\n      }\n    } else {\n      return [\n        {\n          message: `Fetch credentials error: ${response.status} ${response.statusText}`,\n        },\n      ];\n    }\n  }\n\n  // static isZengentiStaff(email) {\n  //   const emailRefs = ['@zengenti', '@contensis'];\n\n  //   return emailRefs.some(emailRef => {\n  //     if (email.includes(emailRef)) {\n  //       return true;\n  //     }\n  //   });\n  // }\n}\n","import { takeEvery, select, put, call } from 'redux-saga/effects';\nimport {\n  SET_AUTHENTICATION_STATE,\n  LOGIN_USER,\n  LOGOUT_USER,\n  VALIDATE_USER,\n} from '../types';\nimport {\n  selectUserIsAuthenticated,\n  selectClientCredentials,\n  selectUserGroups,\n} from '../selectors';\n\nimport { setRoute } from '~/routing/redux/actions';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\nimport { findContentTypeMapping } from '~/routing/util/find-contenttype-mapping';\n\nimport mapClientCredentials from '~/user/transformations/mapClientCredentials';\n\nimport { getManagementApiClient } from '~/user/util/ContensisManagementApi';\nimport { LoginHelper } from '~/user/util/LoginHelper.class';\nimport { matchUserGroup } from '~/user/util/matchGroups';\nimport { queryParams } from '~/util/navigation';\n\nexport const loginSagas = [\n  takeEvery(LOGIN_USER, loginUserSaga),\n  takeEvery(LOGOUT_USER, logoutUserSaga),\n  takeEvery(VALIDATE_USER, validateUserSaga),\n  takeEvery(SET_AUTHENTICATION_STATE, redirectAfterSuccessfulLoginSaga),\n];\n\nexport function* handleRequiresLoginSaga(action) {\n  const {\n    cookies,\n    entry,\n    path,\n    requireLogin,\n    routes: { ContentTypeMappings },\n    staticRoute,\n  } = action;\n  let userLoggedIn = yield select(selectUserIsAuthenticated);\n\n  // Check for a securityToken in querystring\n  const currentQs = queryParams(yield select(selectCurrentSearch));\n  const securityToken = currentQs.securityToken || currentQs.securitytoken;\n\n  // Check if any of the defined routes have \"requireLogin\" attribute\n  const { requireLogin: authRoute } = (staticRoute && staticRoute.route) || {};\n  const { requireLogin: authContentType } =\n    (entry &&\n      findContentTypeMapping(ContentTypeMappings, entry?.sys?.contentTypeId)) ||\n    {};\n\n  // If requireLogin, authRoute or authContentType has been specified as an\n  // array of groups we can merge all the arrays and match on any group supplied\n  const routeRequiresGroups = [\n    ...((Array.isArray(authContentType) && authContentType) || []),\n    ...((Array.isArray(authRoute) && authRoute) || []),\n    ...((Array.isArray(requireLogin) && requireLogin) || []),\n  ];\n  const routeRequiresLogin = !!authContentType || !!authRoute || !!requireLogin;\n\n  if (!userLoggedIn) {\n    // If cookies or securityToken are found on any route change\n    // always validate and login the user\n    if (routeRequiresLogin) {\n      console.info(`Route requires login: ${path}`);\n      // If routeRequiresLogin do a blocking call that returns userLoggedIn\n      userLoggedIn = yield call(validateUserSaga, {\n        cookies,\n        securityToken,\n      });\n      console.info(`User logged in: ${userLoggedIn}`);\n    }\n    // otherwise do a non blocking put to handle validation in the background\n    else yield put({ type: VALIDATE_USER, cookies, securityToken });\n  }\n\n  if (routeRequiresLogin) {\n    // If a security token is in the querystring and we are not already\n    // logged in something is wrong and we won't bother going on another redirect loop\n    if (!userLoggedIn && !securityToken) {\n      LoginHelper.ClientRedirectToSignInPage(action.location.pathname);\n    } else if (routeRequiresGroups.length > 0) {\n      const userGroups = yield select(selectUserGroups, 'js');\n      const groupMatch = matchUserGroup(userGroups, routeRequiresGroups);\n\n      if (!groupMatch)\n        LoginHelper.ClientRedirectToAccessDeniedPage(action.location.pathname);\n    }\n  }\n\n  return userLoggedIn;\n}\n\nfunction* validateUserSaga({ cookies, securityToken }) {\n  const login = LoginHelper.withCookies(cookies);\n  // Check for refreshToken in cookies\n  let clientCredentials = login.GetCachedCredentials();\n\n  if (\n    securityToken ||\n    clientCredentials.securityToken ||\n    clientCredentials.refreshToken\n  ) {\n    // We only attempt to validate the user if one of the stored\n    // tokens are found, in this case we set loading state manually\n    // so we don't need to set and unset loading if there are no stored\n    yield put({\n      type: SET_AUTHENTICATION_STATE,\n      authenticationState: {\n        isLoading: true,\n      },\n    });\n    // If we have just a security token we will call a CMS endpoint\n    // and provide us with a RefreshToken cookie we can use during login\n    if (\n      securityToken ||\n      (clientCredentials.securityToken && !clientCredentials.refreshToken)\n    ) {\n      const [error, refreshToken] =\n        yield LoginHelper.GetCredentialsForSecurityToken(\n          securityToken || clientCredentials.securityToken\n        );\n      if (refreshToken) {\n        // Set cookies and reload values\n        login.SetLoginCookies({\n          contensisClassicToken: securityToken,\n          refreshToken,\n        });\n        clientCredentials = login.GetCachedCredentials();\n      }\n      if (error) {\n        login.ClearCachedCredentials();\n        yield put({\n          type: SET_AUTHENTICATION_STATE,\n          authenticationState: {\n            isError: true,\n            errorMessage:\n              error?.message ||\n              (error && 'toString' in error && error.toString()),\n          },\n        });\n      }\n    }\n\n    // Log the user in if a refreshToken is found\n    if (clientCredentials.refreshToken) {\n      console.info(\n        `Login user with refreshToken ${clientCredentials.refreshToken}`\n      );\n      yield call(loginUserSaga, {\n        clientCredentials,\n        cookies: login.cookies,\n      });\n    }\n  }\n\n  // Tell any callers have we successfully logged in?\n  return yield select(selectUserIsAuthenticated);\n}\n\nfunction* loginUserSaga(action = {}) {\n  const { username, password, clientCredentials, cookies } = action;\n  const login = LoginHelper.withCookies(cookies);\n\n  // If a WSFED_LOGIN site has dispatched the loginUser action\n  // just redirect them to the Identity Provider sign in\n  if (action.type === LOGIN_USER && LoginHelper.WSFED_LOGIN)\n    LoginHelper.ClientRedirectToSignInPage();\n\n  const { authenticationState, user } = yield login.LoginUser({\n    username,\n    password,\n    clientCredentials,\n  });\n\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    authenticationState,\n    user,\n  });\n}\n\nconst removeHostnamePart = path => {\n  // eslint-disable-next-line no-console\n  console.log(path);\n  const relativePath = '/' + path.split('/').splice(3).join('/');\n  // eslint-disable-next-line no-console\n  console.log(relativePath);\n  return relativePath;\n};\n\nfunction* redirectAfterSuccessfulLoginSaga() {\n  const isLoggedIn = yield select(selectUserIsAuthenticated);\n  const { redirect_uri: redirectPath, ReturnURL: assetRedirectPath } =\n    queryParams(yield select(selectCurrentSearch));\n\n  if (isLoggedIn && assetRedirectPath && typeof window != 'undefined') {\n    const path = removeHostnamePart(assetRedirectPath);\n    // This has to be a hard href to get the app to\n    // leave React and hit the server for the IIS hosted assets\n    window.location.href = path;\n    // yield put(setRoute(path)); // does not work in this scenario\n  } else if (isLoggedIn && redirectPath) {\n    yield put(setRoute(redirectPath));\n  }\n}\n\nfunction* logoutUserSaga({ redirectPath, cookies }) {\n  yield put({\n    type: SET_AUTHENTICATION_STATE,\n    user: null,\n  });\n  yield LoginHelper.withCookies(cookies).LogoutUser(redirectPath);\n}\n\nexport function* refreshSecurityToken() {\n  const clientCredentials = yield select(selectClientCredentials, 'js');\n  if (Object.keys(clientCredentials).length > 0) {\n    const client = yield getManagementApiClient(clientCredentials);\n    yield client.authenticate();\n\n    yield put({\n      type: SET_AUTHENTICATION_STATE,\n      authenticationState: {\n        clientCredentials: mapClientCredentials(client),\n      },\n    });\n  }\n}\n","import { action } from '~/redux/util';\nimport {\n  CHANGE_USER_PASSWORD,\n  LOGIN_USER,\n  LOGOUT_USER,\n  REGISTER_USER,\n  REQUEST_USER_PASSWORD_RESET,\n  RESET_USER_PASSWORD,\n} from './types';\n\nexport const loginUser = (username, password, cookies) =>\n  action(LOGIN_USER, { username, password, cookies });\n\nexport const logoutUser = (redirectPath, cookies) =>\n  action(LOGOUT_USER, { redirectPath, cookies });\n\nexport const registerUser = (user, mappers) =>\n  action(REGISTER_USER, {\n    user,\n    mappers,\n  });\n\nexport const requestPasswordReset = userEmailObject =>\n  action(REQUEST_USER_PASSWORD_RESET, { userEmailObject });\n\nexport const resetPassword = resetPasswordObject =>\n  action(RESET_USER_PASSWORD, { resetPasswordObject });\n\nexport const changePassword = (userId, currentPassword, newPassword) =>\n  action(CHANGE_USER_PASSWORD, { userId, currentPassword, newPassword });\n","import { useCookies } from 'react-cookie';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser, logoutUser } from '../redux/actions';\nimport {\n  selectUser,\n  selectUserIsAuthenticationError,\n  selectUserIsError,\n  selectUserErrorMessage,\n  selectUserIsAuthenticated,\n  selectUserIsLoading,\n} from '../redux/selectors';\nimport { CookieHelper } from '../util/CookieHelper.class';\n\nconst useLogin = () => {\n  const cookies = new CookieHelper(...useCookies());\n\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    loginUser: (username, password) =>\n      dispatch(loginUser(username, password, cookies)),\n    logoutUser: redirectPath => dispatch(logoutUser(redirectPath, cookies)),\n    errorMessage: select(selectUserErrorMessage),\n    isAuthenticated: select(selectUserIsAuthenticated),\n    isAuthenticationError: select(selectUserIsAuthenticationError),\n    isError: select(selectUserIsError),\n    isLoading: select(selectUserIsLoading),\n    user: select(selectUser),\n    // DEPRECATED: authenticationError is deprecated use isAuthenticationError instead\n    authenticationError: select(selectUserIsAuthenticationError),\n    // DEPRECATED: authenticationErrorMessage is deprecated use errorMessage instead\n    authenticationErrorMessage: select(selectUserErrorMessage),\n    // DEPRECATED: error is deprecated use isError instead\n    error: select(selectUserIsError),\n  };\n};\n\nexport default useLogin;\n","import useLogin from '../hooks/useLogin';\nimport { toJS } from '~/util/ToJs';\n\nconst LoginContainer = ({ children, ...props }) => {\n  const userProps = useLogin(props);\n  return children(userProps);\n};\n\nLoginContainer.propTypes = {};\n\nexport default toJS(LoginContainer);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../redux/actions';\nimport {\n  selectUserRegistration,\n  selectUserRegistrationError,\n  selectUserRegistrationIsLoading,\n  selectUserRegistrationIsSuccess,\n} from '../redux/selectors';\n\nconst useRegistration = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    registerUser: (user, mappers) => dispatch(registerUser(user, mappers)),\n    error: select(selectUserRegistrationError),\n    isLoading: select(selectUserRegistrationIsLoading),\n    isSuccess: select(selectUserRegistrationIsSuccess),\n    user: select(selectUserRegistration),\n  };\n};\n\nexport default useRegistration;\n","import useRegistration from '../hooks/useRegistration';\nimport { toJS } from '~/util/ToJs';\n\nconst RegistrationContainer = ({ children, ...props }) => {\n  const userProps = useRegistration(props);\n  return children(userProps);\n};\n\nRegistrationContainer.propTypes = {};\n\nexport default toJS(RegistrationContainer);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { requestPasswordReset, resetPassword } from '../redux/actions';\nimport {\n  selectPasswordResetRequestError,\n  selectPasswordResetRequestSending,\n  selectPasswordResetRequestSent,\n  selectResetPasswordSending,\n  selectResetPasswordSent,\n  selectResetPasswordError,\n} from '../redux/selectors';\nimport { selectCurrentSearch } from '~/routing/redux/selectors';\n\nconst useForgotPassword = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    isLoading: select(selectPasswordResetRequestSending),\n    isSuccess: select(selectPasswordResetRequestSent),\n    error: select(selectPasswordResetRequestError),\n    requestPasswordReset: userEmailObject =>\n      dispatch(requestPasswordReset(userEmailObject)),\n\n    setNewPassword: {\n      queryString: select(selectCurrentSearch),\n      isLoading: select(selectResetPasswordSending),\n      isSuccess: select(selectResetPasswordSent),\n      error: select(selectResetPasswordError),\n      submit: resetPasswordObject =>\n        dispatch(resetPassword(resetPasswordObject)),\n    },\n  };\n};\n\nexport default useForgotPassword;\n","import useForgotPassword from '../hooks/useForgotPassword';\nimport { toJS } from '~/util/ToJs';\n\nconst ForgotPasswordContainer = ({ children, ...props }) => {\n  const userProps = useForgotPassword(props);\n  return children(userProps);\n};\n\nForgotPasswordContainer.propTypes = {};\n\nexport default toJS(ForgotPasswordContainer);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { changePassword } from '../redux/actions';\nimport {\n  selectChangePasswordSending,\n  selectChangePasswordSent,\n  selectChangePasswordError,\n  selectUserIsAuthenticated,\n  selectUserGuid,\n} from '../redux/selectors';\n\nconst useChangePassword = () => {\n  const dispatch = useDispatch();\n  const select = useSelector;\n\n  return {\n    isLoading: select(selectChangePasswordSending),\n    isSuccess: select(selectChangePasswordSent),\n    userId: select(selectUserGuid),\n    isLoggedIn: select(selectUserIsAuthenticated),\n    error: select(selectChangePasswordError),\n    changePassword: (userId, currentPassword, newPassword) =>\n      dispatch(changePassword(userId, currentPassword, newPassword)),\n  };\n};\n\nexport default useChangePassword;\n","import useChangePassword from '../hooks/useChangePassword';\nimport { toJS } from '~/util/ToJs';\n\nconst ChangePasswordContainer = ({ children, ...props }) => {\n  const userProps = useChangePassword(props);\n  return children(userProps);\n};\n\nChangePasswordContainer.propTypes = {};\n\nexport default toJS(ChangePasswordContainer);\n"],"names":["findContentTypeMapping","ContentTypeMappings","contentTypeId","find","ct","contentTypeID","clientCredentials","bearerToken","bearerTokenExpiryDate","toISOString","refreshToken","refreshTokenExpiryDate","contensisClassicToken","obj","mapJson","getManagementApiClient","username","password","rootUrl","SERVERS","api","cms","projectId","PROJECTS","id","config","clientType","clientDetails","Client","window","UniversalClient","client","create","context","global","requireOidc","process","env","NODE_ENV","WSFED_LOGIN","servers","userManagerConfig","authority","client_id","redirect_uri","location","toString","post_logout_redirect_uri","response_type","scope","filterProtocolClaims","createUserManager","UserManager","e","console","error","LoginHelper","constructor","cookies","SetLoginCookies","info","LOGIN_COOKIE","REFRESH_TOKEN_COOKIE","SetCookie","GetCachedCredentials","GetCookie","ClearCachedCredentials","DeleteCookie","localStorage","keys","i","length","key","startsWith","push","forEach","removeItem","LoginUser","credentials","authenticationState","isAuthenticated","isAuthenticationError","isError","transientClient","user","loginError","clientBearerToken","to","ensureBearerToken","errorMessage","message","name","includes","mapClientCredentials","userDetails","GetUserDetails","latestCredentials","LogoutUser","redirectPath","WsFedLogout","ClientRedirectToPath","ClientRedirectToSignInPage","ClientRedirectToHome","url","search","hash","href","WsFedLogin","LOGIN_ROUTE","replace","GetAccessDeniedRoute","originalPath","ACCESS_DENIED_ROUTE","ClientRedirectToAccessDeniedPage","redirectUri","userManager","signinRedirect","RemoveSecurityTokenQuery","params","URLSearchParams","has","delete","pathname","fetch","CMS_URL","GetCredentialsForSecurityToken","securityToken","response","method","headers","Accept","body","JSON","stringify","encodeURIComponent","ok","parseError","json","LogonResult","ApplicationData","data","item","Key","Value","undefined","status","statusText","withCookies","cookieHelper","userError","groupsError","groupsResult","security","users","getCurrent","getUserGroups","userId","includeInherited","pageOptions","pageSize","items","groups","log","loginSagas","takeEvery","LOGIN_USER","loginUserSaga","LOGOUT_USER","logoutUserSaga","VALIDATE_USER","validateUserSaga","SET_AUTHENTICATION_STATE","redirectAfterSuccessfulLoginSaga","handleRequiresLoginSaga","action","entry","path","requireLogin","routes","staticRoute","userLoggedIn","select","selectUserIsAuthenticated","currentQs","queryParams","selectCurrentSearch","securitytoken","authRoute","route","authContentType","sys","routeRequiresGroups","Array","isArray","routeRequiresLogin","call","put","type","userGroups","selectUserGroups","groupMatch","matchUserGroup","login","isLoading","removeHostnamePart","relativePath","split","splice","join","isLoggedIn","ReturnURL","assetRedirectPath","setRoute","refreshSecurityToken","selectClientCredentials","Object","authenticate","loginUser","logoutUser","registerUser","mappers","REGISTER_USER","requestPasswordReset","userEmailObject","REQUEST_USER_PASSWORD_RESET","resetPassword","resetPasswordObject","RESET_USER_PASSWORD","changePassword","currentPassword","newPassword","CHANGE_USER_PASSWORD","useLogin","CookieHelper","useCookies","dispatch","useDispatch","useSelector","selectUserErrorMessage","selectUserIsAuthenticationError","selectUserIsError","selectUserIsLoading","selectUser","authenticationError","authenticationErrorMessage","LoginContainer","children","props","userProps","propTypes","toJS","useRegistration","selectUserRegistrationError","selectUserRegistrationIsLoading","isSuccess","selectUserRegistrationIsSuccess","selectUserRegistration","RegistrationContainer","useForgotPassword","selectPasswordResetRequestSending","selectPasswordResetRequestSent","selectPasswordResetRequestError","setNewPassword","queryString","selectResetPasswordSending","selectResetPasswordSent","selectResetPasswordError","submit","ForgotPasswordContainer","useChangePassword","selectChangePasswordSending","selectChangePasswordSent","selectUserGuid","selectChangePasswordError","ChangePasswordContainer"],"mappings":"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"}