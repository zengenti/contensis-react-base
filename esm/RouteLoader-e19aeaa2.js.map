{"version":3,"file":"RouteLoader-e19aeaa2.js","sources":["../src/routing/httpContext.ts","../src/util/mergeStaticRoutes.ts","../src/routing/components/Redirect.tsx","../src/routing/components/Status.tsx","../src/routing/components/NotFound.tsx","../src/routing/components/StaticRouteLoader.tsx","../src/routing/components/RouteLoader.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport type HttpContextValues = {\n  statusCode?: number;\n  url?: string;\n};\n\nexport const HttpContext = createContext<HttpContextValues>({});\nexport const useHttpContext = () => {\n  return useContext(HttpContext);\n};\n","import { StaticRoute } from '../';\n\nexport const mergeStaticRoutes = matchedStaticRoute => {\n  let finalRoute: StaticRoute = {};\n  for (const [i, route] of matchedStaticRoute.entries()) {\n    const staticRouteCopy = { ...route.route };\n    if (i === matchedStaticRoute.length - 1) {\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path ? route.route.path : ''\n        }`,\n      };\n      matchedStaticRoute[i].route = finalRoute;\n    } else {\n      delete staticRouteCopy.children;\n      delete staticRouteCopy.index;\n      delete staticRouteCopy.path;\n      delete staticRouteCopy.component;\n      delete staticRouteCopy.element;\n      finalRoute = {\n        ...finalRoute,\n        ...staticRouteCopy,\n        fullPath: `${finalRoute.fullPath || ''}${\n          route.route.path\n            ? route.route.path.endsWith('/')\n              ? route.route.path\n              : route.route.path + '/'\n            : ''\n        }`,\n      };\n    }\n  }\n};\n","import React, { PropsWithChildren } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useHttpContext } from '../httpContext';\n\nexport const Redirect = ({\n  code,\n  to,\n}: PropsWithChildren<{ code: 301 | 302; to: string }>) => {\n  const httpContext = useHttpContext();\n  if (httpContext) {\n    httpContext.statusCode = code;\n    httpContext.url = to;\n  }\n  return <Navigate to={to} />;\n};\n","import React, { PropsWithChildren } from 'react';\nimport { useHttpContext } from '../httpContext';\n\nexport const Status = ({\n  code,\n  children,\n}: PropsWithChildren<{ code: number }>) => {\n  const httpContext = useHttpContext();\n  if (httpContext) {\n    httpContext.statusCode = code;\n  }\n  return <>{children}</>;\n};\n","import React from 'react';\r\n\r\nconst NotFound = ({\r\n  statusCode,\r\n  statusText,\r\n}: {\r\n  statusCode: number;\r\n  statusText: string;\r\n}) => (\r\n  <>\r\n    <header>\r\n      <h1>{statusCode || '404'} Page Not Found</h1>\r\n      {statusText && (\r\n        <h2\r\n          style={{\r\n            background: '#eee',\r\n            color: '#666',\r\n            fontSize: '100%',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          {statusText}\r\n        </h2>\r\n      )}\r\n    </header>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\nimport { RouteObject, useRoutes } from 'react-router-dom';\nimport type { StaticRoute } from '../routes';\n\nexport interface StaticRouteLoaderProps {\n  staticRoutes: StaticRoute[];\n}\n\nexport const StaticRouteLoader = ({ staticRoutes }: StaticRouteLoaderProps) => {\n  const staticRouteElement = useRoutes(staticRoutes as RouteObject[]);\n  return <>{staticRouteElement}</>;\n};\n","import React, { useEffect, useCallback, cloneElement } from 'react';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\nimport { useLocation, matchRoutes, RouteObject } from 'react-router-dom';\n\nimport { createSelector } from 'reselect';\n\nimport NotFound from './NotFound';\nimport { Status } from './Status';\n\nimport {\n  selectCurrentPath,\n  selectCurrentProject,\n  selectIsNotFound,\n  selectMappedEntry,\n  selectRouteEntry,\n  selectRouteEntryContentTypeId,\n  selectRouteErrorMessage,\n  selectRouteIsError,\n  selectRouteLoading,\n  selectRouteStatusCode,\n} from '../redux/selectors';\nimport { setNavigationPath } from '../redux/actions';\n\nimport {\n  selectUserGroups,\n  selectUserIsAuthenticated,\n} from '~/user/redux/selectors';\nimport { matchUserGroup } from '~/user/util/matchGroups';\n\nimport { toJS } from '~/util/ToJs';\nimport { mergeStaticRoutes } from '~/util/mergeStaticRoutes';\nimport { Entry } from 'contensis-delivery-api/lib/models';\nimport {\n  AppRootProps,\n  RouteLoaderProps,\n  StaticRoute,\n  MatchedRoute,\n} from '../routes';\nimport { StaticRouteLoader } from './StaticRouteLoader';\nimport { Redirect } from './Redirect';\n\nconst replaceDoubleSlashRecursive = (path: string) => {\n  const nextPath = path.replace(/\\/\\//, '/');\n\n  if (nextPath.match(/\\/\\//)) {\n    return replaceDoubleSlashRecursive(nextPath);\n  }\n\n  return nextPath;\n};\n\nconst getTrimmedPath = path => {\n  if (path !== '/') {\n    const nextPath = replaceDoubleSlashRecursive(path);\n    const lastChar = nextPath[nextPath.length - 1];\n    if (lastChar === '/') {\n      return nextPath.substring(0, nextPath.length - 1);\n    }\n  }\n  return path;\n};\n\nconst processStaticRoutes = (\n  staticRoutes: StaticRoute[],\n  componentProps: Partial<IReduxProps>\n) => {\n  const { projectId, contentTypeId, entry, mappedEntry, isLoggedIn } =\n    componentProps;\n  return staticRoutes.map(x => {\n    const route = { ...x };\n    if (route.component) {\n      route.element = (\n        <route.component\n          projectId={projectId}\n          contentTypeId={contentTypeId ? contentTypeId : undefined}\n          entry={entry}\n          mappedEntry={mappedEntry}\n          isLoggedIn={isLoggedIn}\n        />\n      );\n      delete route.component;\n    }\n    if (route.element) {\n      route.element = cloneElement(route.element as React.ReactElement<any>, {\n        projectId,\n        contentTypeId,\n        entry,\n        mappedEntry,\n        isLoggedIn,\n      });\n    }\n    if (route.children) {\n      route.children = processStaticRoutes(route.children, componentProps);\n    }\n    return route;\n  });\n};\n\ninterface IReduxProps {\n  contentTypeId: string | null;\n  entry: Entry | null;\n  isError: boolean;\n  isNotFound: boolean;\n  isLoading: boolean;\n  isLoggedIn: boolean;\n  mappedEntry: any;\n  projectId: string;\n  setNavigationPath: typeof setNavigationPath;\n  statePath: string;\n  statusCode: any;\n  statusText: string;\n  userGroups: any;\n}\n\nconst RouteLoader = ({\n  contentTypeId,\n  entry,\n  isError,\n  isLoading,\n  isLoggedIn,\n  isNotFound,\n  loadingComponent,\n  mappedEntry,\n  notFoundComponent,\n  projectId,\n  routes,\n  setNavigationPath,\n  statePath,\n  statusCode,\n  statusText,\n  userGroups,\n  withEvents,\n  trailingSlashRedirectCode,\n}: AppRootProps & RouteLoaderProps & IReduxProps) => {\n  const location = useLocation();\n  // Always ensure paths are trimmed of trailing slashes so urls are always unique\n  const trimmedPath = getTrimmedPath(location.pathname);\n\n  // Convert any react-router-v5 style routes to react-router-v6 style routes.\n  const staticRoutes = processStaticRoutes(routes.StaticRoutes, {\n    projectId,\n    contentTypeId,\n    entry,\n    mappedEntry,\n    isLoggedIn,\n  });\n\n  // Match any Static Routes a developer has defined\n  const matchedStaticRoute = matchRoutes(\n    staticRoutes as RouteObject[],\n    location\n  );\n  const isStaticRoute = matchedStaticRoute && matchedStaticRoute.length > 0;\n\n  // Combine custom params for all static routes, with the furthest config taking precedence.\n  if (isStaticRoute) {\n    mergeStaticRoutes(matchedStaticRoute);\n  }\n\n  const staticRoute: MatchedRoute<string, StaticRoute> | null = isStaticRoute\n    ? matchedStaticRoute.pop() || null\n    : null;\n\n  const routeRequiresLogin = staticRoute\n    ? staticRoute.route.requireLogin\n    : undefined;\n\n  const setPath = useCallback(() => {\n    // Use serverPath to control the path we send to siteview node api to resolve a route\n    let serverPath = '';\n    if (staticRoute && staticRoute.pathname === staticRoute.pathnameBase) {\n      const { route, pathname } = staticRoute;\n\n      if (route.path?.includes('*')) {\n        // Send the whole url to api if we have matched route containing wildcard\n        serverPath = pathname;\n      } else if (typeof route.fetchNodeLevel === 'number') {\n        // Send all url parts to a specified level to api\n        serverPath = pathname\n          .split('/')\n          .splice(0, route.fetchNodeLevel + 1)\n          .join('/');\n      } else {\n        // Send all non-parameterised url parts to api\n        serverPath = (route.fullPath as string)\n          ?.split('/')\n          .filter(p => !p.startsWith(':'))\n          .join('/');\n      }\n    }\n\n    setNavigationPath(\n      serverPath || trimmedPath,\n      location,\n      staticRoute,\n      withEvents,\n      statePath,\n      routes\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    setNavigationPath,\n    // staticRoute,\n    withEvents,\n    location,\n    routes,\n    // statePath,\n    trimmedPath,\n  ]);\n\n  if (typeof window == 'undefined') setPath();\n\n  useEffect(() => {\n    setPath();\n  }, [location, setPath]);\n\n  // Need to redirect when url endswith a /\n  if (location.pathname.length > trimmedPath.length) {\n    return (\n      <Redirect\n        code={trailingSlashRedirectCode || 302}\n        to={`${trimmedPath}${location.search}${location.hash}`}\n      />\n    );\n  }\n\n  // Render any Static Routes a developer has defined\n  if (isStaticRoute && !(!isLoggedIn && routeRequiresLogin)) {\n    if (matchUserGroup(userGroups, routeRequiresLogin))\n      return <StaticRouteLoader staticRoutes={staticRoutes} />;\n  }\n\n  // Render a supplied Loading component if the route\n  // is not a static route and is in a loading state\n  if (isLoading && !isNotFound && loadingComponent) {\n    const LoadingComponent = loadingComponent;\n    return <LoadingComponent />;\n  }\n\n  // Match any defined Content Type Mappings\n  if (contentTypeId && !(!isLoggedIn && routeRequiresLogin)) {\n    const MatchedComponent = routes.ContentTypeMappings.find(\n      item => item.contentTypeID === contentTypeId\n    );\n\n    if (MatchedComponent && !(MatchedComponent.requireLogin && !isLoggedIn)) {\n      if (matchUserGroup(userGroups, MatchedComponent.requireLogin))\n        return (\n          <MatchedComponent.component\n            projectId={projectId}\n            contentTypeId={contentTypeId}\n            entry={entry}\n            mappedEntry={mappedEntry}\n            isLoggedIn={isLoggedIn}\n          />\n        );\n    }\n  }\n\n  const NotFoundComponent = notFoundComponent ? notFoundComponent : NotFound;\n  if (isNotFound || isError) {\n    return (\n      <Status code={statusCode}>\n        <NotFoundComponent statusCode={statusCode} statusText={statusText} />\n      </Status>\n    );\n  }\n\n  return null;\n};\nconst mapStateToPropsMemoized = createSelector(\n  selectRouteEntryContentTypeId,\n  selectRouteEntry,\n  selectRouteIsError,\n  selectIsNotFound,\n  selectRouteLoading,\n  selectUserIsAuthenticated,\n  selectMappedEntry,\n  selectCurrentProject,\n  selectCurrentPath,\n  selectRouteStatusCode,\n  selectRouteErrorMessage,\n  selectUserGroups,\n  (\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups\n  ) => ({\n    contentTypeId,\n    entry,\n    isError,\n    isNotFound,\n    isLoading,\n    isLoggedIn,\n    mappedEntry,\n    projectId,\n    statePath,\n    statusCode,\n    statusText,\n    userGroups,\n  })\n);\n\nconst mapDispatchToProps = {\n  setNavigationPath,\n};\n\nexport default hot(module)(\n  connect(mapStateToPropsMemoized, mapDispatchToProps)(toJS(RouteLoader))\n) as unknown as (props: AppRootProps & RouteLoaderProps) => JSX.Element;\n"],"names":["HttpContext","createContext","useHttpContext","useContext","mergeStaticRoutes","matchedStaticRoute","finalRoute","i","route","entries","staticRouteCopy","length","fullPath","path","children","index","component","element","endsWith","Redirect","code","to","httpContext","statusCode","url","Status","NotFound","statusText","background","color","fontSize","padding","StaticRouteLoader","staticRoutes","staticRouteElement","useRoutes","replaceDoubleSlashRecursive","nextPath","replace","match","getTrimmedPath","lastChar","substring","processStaticRoutes","componentProps","projectId","contentTypeId","entry","mappedEntry","isLoggedIn","map","x","undefined","cloneElement","RouteLoader","isError","isLoading","isNotFound","loadingComponent","notFoundComponent","routes","setNavigationPath","statePath","userGroups","withEvents","trailingSlashRedirectCode","location","useLocation","trimmedPath","pathname","StaticRoutes","matchRoutes","isStaticRoute","staticRoute","pop","routeRequiresLogin","requireLogin","setPath","useCallback","serverPath","pathnameBase","includes","fetchNodeLevel","split","splice","join","filter","p","startsWith","window","useEffect","search","hash","matchUserGroup","LoadingComponent","MatchedComponent","ContentTypeMappings","find","item","contentTypeID","NotFoundComponent","mapStateToPropsMemoized","createSelector","selectRouteEntryContentTypeId","selectRouteEntry","selectRouteIsError","selectIsNotFound","selectRouteLoading","selectUserIsAuthenticated","selectMappedEntry","selectCurrentProject","selectCurrentPath","selectRouteStatusCode","selectRouteErrorMessage","selectUserGroups","mapDispatchToProps","hot","module","connect","toJS"],"mappings":"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"}