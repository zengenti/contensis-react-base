{"version":3,"file":"version-5ef7b2f0.js","sources":["../src/redux/types/navigation.js","../src/redux/reducers/navigation.ts","../src/util/merge.ts","../src/routing/redux/reducers.ts","../src/redux/types/version.js","../src/redux/reducers/version.ts","../src/redux/store/routerMiddleware.js","../src/redux/store/store.ts","../src/redux/selectors/version.js"],"sourcesContent":["const ACTION_PREFIX = '@NAVIGATION/';\r\nexport const GET_NODE_TREE = `${ACTION_PREFIX}_GET_NODE_TREE`;\r\nexport const SET_NODE_TREE = `${ACTION_PREFIX}_SET_NODE_TREE`;\r\nexport const GET_NODE_TREE_ERROR = `${ACTION_PREFIX}_GET_NODE_TREE_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_NODE_TREE, GET_NODE_TREE_ERROR } from '~/redux/types/navigation';\r\n\r\nconst initialState = {\r\n  root: null,\r\n  error: {\r\n    isError: false,\r\n    message: null,\r\n  },\r\n  isReady: false,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_NODE_TREE: {\r\n      state.root = action.nodes;\r\n      state.isReady = true;\r\n      return;\r\n    }\r\n    case GET_NODE_TREE_ERROR: {\r\n      state.error.isError = true;\r\n      state.error.message = action.error || 'Unknown error occurred';\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","import merge from 'deepmerge';\r\n\r\nexport const combineMerge = (target: any, source: any, options: any) => {\r\n  const destination = target.slice();\r\n\r\n  source.forEach((item: any, index: any) => {\r\n    if (typeof destination[index] === 'undefined') {\r\n      destination[index] = options.cloneUnlessOtherwiseSpecified(item, options);\r\n    } else if (options.isMergeableObject(item)) {\r\n      destination[index] = merge(target[index], item, options);\r\n    } else if (target.indexOf(item) === -1) {\r\n      destination.push(item);\r\n    }\r\n  });\r\n  return destination;\r\n};\r\n","import { Draft, produce } from 'immer';\r\nimport merge from 'deepmerge';\r\n\r\nimport {\r\n  SET_ENTRY,\r\n  SET_NAVIGATION_PATH,\r\n  SET_ANCESTORS,\r\n  SET_TARGET_PROJECT,\r\n  SET_ROUTE,\r\n  SET_SIBLINGS,\r\n  SET_SURROGATE_KEYS,\r\n  UPDATE_LOADING_STATE,\r\n} from './types';\r\nimport { combineMerge } from '~/util/merge';\r\n\r\nconst initialState = {\r\n  canonicalPath: null,\r\n  currentHostname: null,\r\n  currentPath: '/',\r\n  currentNode: {},\r\n  currentNodeAncestors: [],\r\n  currentProject: 'unknown',\r\n  entryID: null,\r\n  entry: null,\r\n  error: undefined,\r\n  isError: false,\r\n  isLoading: false,\r\n  location: {},\r\n  mappedEntry: null,\r\n  notFound: false,\r\n  staticRoute: null,\r\n  statusCode: 200,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_ANCESTORS: {\r\n      state.currentNodeAncestors = action.ancestors;\r\n      return;\r\n    }\r\n    case SET_ENTRY: {\r\n      const {\r\n        entry,\r\n        error,\r\n        mappedEntry,\r\n        node = {},\r\n        isError = false,\r\n        isLoading = false,\r\n        notFound = false,\r\n        statusCode,\r\n        currentPath,\r\n      } = action;\r\n\r\n      let defaultStatus = 200;\r\n      if (notFound === true && isError === false) defaultStatus = 404;\r\n      else if (isError === true) defaultStatus = statusCode || 500;\r\n\r\n      if (!entry) {\r\n        state.entryID = null;\r\n        state.entry = null;\r\n        state.error = error;\r\n        state.mappedEntry = null;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n        state.canonicalPath = currentPath;\r\n      } else {\r\n        state.entryID = action.id;\r\n        state.entry = entry;\r\n        state.error = error;\r\n        state.isError = isError;\r\n        state.isLoading = isLoading;\r\n        state.notFound = notFound;\r\n        state.statusCode = statusCode || defaultStatus;\r\n        state.canonicalPath = entry.sys.uri || currentPath;\r\n\r\n        if (mappedEntry && Object.keys(mappedEntry).length > 0) {\r\n          state.mappedEntry = mappedEntry;\r\n          state.entry = { sys: entry.sys };\r\n        }\r\n      }\r\n\r\n      if (!node) {\r\n        state.currentNode = null;\r\n      } else {\r\n        // On Set Node, we reset all dependants.\r\n        state.currentNode = node;\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { entry, ...nodeWithoutEntry } = node; // We have the entry stored elsewhere, so lets not keep it twice.\r\n        state.currentNode = nodeWithoutEntry;\r\n      }\r\n\r\n      return;\r\n    }\r\n    case UPDATE_LOADING_STATE: {\r\n      state.isLoading = action.isLoading;\r\n      return;\r\n    }\r\n    case SET_NAVIGATION_PATH: {\r\n      let staticRoute = {} as any;\r\n      if (action.staticRoute) {\r\n        staticRoute = { ...action.staticRoute };\r\n      }\r\n      if (action.path) {\r\n        // Don't run a path update on initial load as we allready should have it in redux\r\n        const entryUri = state?.entry?.sys?.uri;\r\n        if (entryUri !== action.path) {\r\n          state.currentPath = action.path;\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n          state.isLoading = typeof window !== 'undefined';\r\n        } else {\r\n          state.location = action.location;\r\n          state.staticRoute = {\r\n            ...staticRoute,\r\n            route: { ...staticRoute.route, component: null },\r\n          };\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    case SET_ROUTE: {\r\n      state.nextPath = action.path;\r\n      return;\r\n    }\r\n    case SET_SIBLINGS: {\r\n      // Can be null in some cases like the homepage.\r\n      let currentNodeSiblingParent = null;\r\n      if (action.siblings && action.siblings.length > 0) {\r\n        currentNodeSiblingParent = action.siblings[0].parentId;\r\n      }\r\n\r\n      state.currentNodeSiblings = action.siblings;\r\n      state.currentNodeSiblingsParent = currentNodeSiblingParent;\r\n      return;\r\n    }\r\n    case SET_SURROGATE_KEYS: {\r\n      // console.info(`SET_SURROGATE_KEYS: '${action.url}' keys: ${action.keys}`);\r\n      state.surrogateKeys = merge(\r\n        state.surrogateKeys,\r\n        (action.keys || '').split(' '),\r\n        { arrayMerge: combineMerge }\r\n      );\r\n      return;\r\n    }\r\n    case SET_TARGET_PROJECT: {\r\n      state.currentProject = action.project;\r\n      state.allowedGroups = action.allowedGroups;\r\n      state.currentHostname = action.hostname;\r\n      return;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n","const VERSION_PREFIX = '@VERSION/';\r\nexport const SET_VERSION = `${VERSION_PREFIX}SET_VERSION`;\r\nexport const SET_VERSION_STATUS = `${VERSION_PREFIX}SET_VERSION_STATUS`;\r\n","import { Draft, produce } from 'immer';\r\nimport { SET_VERSION, SET_VERSION_STATUS } from '~/redux/types/version';\r\n\r\nconst initialState = {\r\n  commitRef: null,\r\n  buildNo: null,\r\n  contensisVersionStatus: null as 'latest' | 'published' | null,\r\n};\r\n\r\nexport default produce((state: Draft<any>, action) => {\r\n  switch (action.type) {\r\n    case SET_VERSION_STATUS: {\r\n      state.contensisVersionStatus = action.status;\r\n      return;\r\n    }\r\n    case SET_VERSION: {\r\n      state.commitRef = action.commitRef;\r\n      state.buildNo = action.buildNo;\r\n      return;\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}, initialState);\r\n","/**\r\n * This middleware captures 'CALL_HISTORY_METHOD' actions to redirect to the\r\n * provided history object. This will prevent these actions from reaching your\r\n * reducer or any middleware that comes after this one.\r\n */\r\n/* eslint-disable no-unused-vars */\r\nconst routerMiddleware = history => store => next => action => {\r\n  if (action.type !== 'CALL_HISTORY_METHOD') {\r\n    return next(action);\r\n  }\r\n\r\n  const {\r\n    payload: { method, args },\r\n  } = action;\r\n  history[method](...args);\r\n};\r\n\r\nexport default routerMiddleware;\r\n","import {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore,\r\n  Action,\r\n  Store,\r\n  StoreEnhancer,\r\n} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport createSagaMiddleware, { END } from 'redux-saga';\r\nimport { createInjectorsEnhancer } from 'redux-injectors';\r\n\r\n// Core reducers\r\nimport NavigationReducer from '../reducers/navigation';\r\nimport RoutingReducer from '~/routing/redux/reducers';\r\nimport UserReducer from '~/user/redux/reducers';\r\nimport VersionReducer from '../reducers/version';\r\nimport routerMiddleware from './routerMiddleware';\r\nimport { AppState } from '../appstate';\r\nimport { History, MemoryHistory } from 'history';\r\nimport { StateType } from '~/config';\r\n\r\nexport let reduxStore;\r\n\r\n/* eslint-disable no-underscore-dangle */\r\ndeclare let window: Window &\r\n  typeof globalThis & {\r\n    __REDUX_DEVTOOLS_EXTENSION__: any;\r\n  };\r\n\r\nexport default async (\r\n  featureReducers: any,\r\n  initialState: AppState,\r\n  history: History | MemoryHistory,\r\n  stateType: StateType\r\n) => {\r\n  let reduxDevToolsMiddleware = f => f;\r\n\r\n  if (typeof window != 'undefined') {\r\n    reduxDevToolsMiddleware = window.__REDUX_DEVTOOLS_EXTENSION__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      : f => f;\r\n  }\r\n\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const reducers = {\r\n    navigation: NavigationReducer,\r\n    routing: RoutingReducer,\r\n    user: UserReducer,\r\n    version: VersionReducer,\r\n    ...featureReducers,\r\n  };\r\n\r\n  // Reassign the combiner and fromJS functions when\r\n  // stateType is 'immutable' with dynamic imports\r\n  let combiner = combineReducers;\r\n  let fromJS: any = (obj: any) => obj;\r\n  globalThis.STATE_TYPE = stateType;\r\n\r\n  if (stateType === 'immutable') {\r\n    globalThis.immutable = await import(\r\n      /* webpackChunkName: \"immutable\" */ 'immutable'\r\n    );\r\n\r\n    fromJS = (\r\n      await import(/* webpackChunkName: \"from-js\" */ '~/util/fromJSLeaveImmer')\r\n    ).default;\r\n\r\n    combiner = (\r\n      await import(/* webpackChunkName: \"redux-immutable\" */ 'redux-immutable')\r\n    ).combineReducers;\r\n  }\r\n\r\n  const createReducer = (injectedReducers = {}) => {\r\n    const rootReducer = combiner<AppState>({\r\n      ...injectedReducers,\r\n      // other non-injected reducers go here\r\n      ...reducers,\r\n    });\r\n\r\n    return rootReducer;\r\n  };\r\n\r\n  const store = (initialState: AppState) => {\r\n    const runSaga = sagaMiddleware.run;\r\n\r\n    const middleware: StoreEnhancer<\r\n      {\r\n        dispatch: unknown;\r\n      },\r\n      unknown\r\n    > = compose(\r\n      applyMiddleware(\r\n        thunkMiddleware,\r\n        sagaMiddleware,\r\n        routerMiddleware(history)\r\n      ),\r\n      createInjectorsEnhancer({\r\n        createReducer,\r\n        runSaga,\r\n      }),\r\n      reduxDevToolsMiddleware\r\n    );\r\n\r\n    const store: Store<AppState, Action<any>> & {\r\n      runSaga?: typeof runSaga;\r\n      close?: () => void;\r\n    } = createStore<AppState, Action<any>, unknown, unknown>(\r\n      createReducer(),\r\n      initialState,\r\n      middleware\r\n    );\r\n\r\n    store.runSaga = runSaga;\r\n    store.close = () => store.dispatch(END);\r\n\r\n    return store;\r\n  };\r\n\r\n  reduxStore = store(fromJS(initialState));\r\n  return reduxStore;\r\n};\r\n","import { getImmutableOrJS as getIn } from '~/redux/util';\r\n\r\nexport const selectCommitRef = state => getIn(state, ['version', 'commitRef']);\r\n\r\nexport const selectBuildNumber = state => getIn(state, ['version', 'buildNo']);\r\n\r\nexport const selectVersionStatus = state =>\r\n  getIn(state, ['version', 'contensisVersionStatus']);\r\n"],"names":["ACTION_PREFIX","GET_NODE_TREE","SET_NODE_TREE","GET_NODE_TREE_ERROR","initialState","root","error","isError","message","isReady","produce","state","action","type","nodes","combineMerge","target","source","options","destination","slice","forEach","item","index","cloneUnlessOtherwiseSpecified","isMergeableObject","merge","indexOf","push","canonicalPath","currentHostname","currentPath","currentNode","currentNodeAncestors","currentProject","entryID","entry","undefined","isLoading","location","mappedEntry","notFound","staticRoute","statusCode","SET_ANCESTORS","ancestors","SET_ENTRY","node","defaultStatus","id","sys","uri","Object","keys","length","nodeWithoutEntry","UPDATE_LOADING_STATE","SET_NAVIGATION_PATH","path","_state$entry","_state$entry$sys","entryUri","route","component","window","SET_ROUTE","nextPath","SET_SIBLINGS","currentNodeSiblingParent","siblings","parentId","currentNodeSiblings","currentNodeSiblingsParent","SET_SURROGATE_KEYS","surrogateKeys","split","arrayMerge","SET_TARGET_PROJECT","project","allowedGroups","hostname","VERSION_PREFIX","SET_VERSION","SET_VERSION_STATUS","commitRef","buildNo","contensisVersionStatus","status","routerMiddleware","history","store","next","payload","method","args","reduxStore","featureReducers","stateType","reduxDevToolsMiddleware","f","__REDUX_DEVTOOLS_EXTENSION__","sagaMiddleware","createSagaMiddleware","reducers","navigation","NavigationReducer","routing","RoutingReducer","user","UserReducer","version","VersionReducer","combiner","combineReducers","fromJS","obj","globalThis","STATE_TYPE","immutable","default","createReducer","injectedReducers","rootReducer","runSaga","run","middleware","compose","applyMiddleware","thunkMiddleware","createInjectorsEnhancer","createStore","close","dispatch","END","selectCommitRef","getIn","selectBuildNumber","selectVersionStatus"],"mappings":"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"}