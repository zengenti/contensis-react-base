{"version":3,"file":"util.js","sources":["../src/util/json-mapper.ts","../src/util/stringifyStrings.js","../src/app/pages/VersionInfo/transformations/state-to-versioninfoprops.mapper.ts","../src/app/pages/VersionInfo/components/VersionInfo.styled.tsx","../src/app/pages/VersionInfo/components/VersionInfo.tsx"],"sourcesContent":["import { Entry } from 'contensis-delivery-api/lib/models';\r\nimport mapJson, { jpath } from 'jsonpath-mapper';\r\nimport MappingTemplate, {\r\n  PureJsFunction,\r\n} from 'jsonpath-mapper/dist/models/Template';\r\nimport { AppState } from '~/redux/appstate';\r\nimport { EntryMapper, RouteNode } from '~/routing/routes';\r\n\r\nexport { default as mapJson, jpath } from 'jsonpath-mapper';\r\n\r\ntype Mappers<S> = { [contentTypeId: string]: MappingTemplate<S> };\r\n\r\n/**\r\n *\r\n * @param {object} json The source object we wish to transform\r\n * @param {object} template The mapping template we wish to apply to the source\r\n * object to generate the intended target object\r\n */\r\nexport const useMapper = <T, S>(json: S, template: MappingTemplate<S>) => {\r\n  return template ? (mapJson((json || {}) as S, template) as T) : json;\r\n};\r\n\r\nconst chooseMapperByFieldValue = <S, T extends Mappers<S>>(\r\n  entry: S,\r\n  mappers: T,\r\n  field = 'sys.contentTypeId'\r\n) => {\r\n  const fieldValue = jpath(field, entry || {}) as string;\r\n  return (mappers[fieldValue] || mappers.default || {}) as T[keyof T];\r\n};\r\n\r\n/**\r\n * useEntriesMapper hook to take a list of entries from Delivery API along\r\n * with mappers for each contentTypeId and return an array of mapped objects\r\n * @param {any} entry The source entry we wish to transform\r\n * @param {object} mappers Object with keys containing mapper templates,\r\n * the key name matching sys.contentTypeId\r\n * @param {string} field Only include if we need to match content based on\r\n * a field other than sys.contentTypeId in the source data\r\n * @returns {object} Object transformed using a matched content type or\r\n * a default mapper template, returns an empty object if no mapper template\r\n * couild be applied.\r\n */\r\nexport const useEntriesMapper = <S, T extends Mappers<S>>(\r\n  entry: S,\r\n  mappers: T,\r\n  field = 'sys.contentTypeId'\r\n) => {\r\n  const mapper = chooseMapperByFieldValue(entry, mappers, field);\r\n  return useMapper(entry, mapper);\r\n};\r\n\r\n/**\r\n * Deprecated: due to misleading name, use the hook useEntriesMapper instead\r\n */\r\nexport const useEntryMapper = useEntriesMapper;\r\n\r\n/**\r\n * mapEntries mapping function to take a list of entries from Delivery API along\r\n * with mappers for each contentTypeId and return an array of mapped objects\r\n * @param {any} entry The source entry we wish to transform\r\n * @param {object} mappers Object with keys containing mapper templates,\r\n * the key name matching sys.contentTypeId\r\n * @param {string} field Only include if we need to match content based on\r\n * a field other than sys.contentTypeId in the source data\r\n * @returns {object} Object transformed using a matched content type or\r\n * a default mapper template, returns an empty object if no mapper template\r\n * couild be applied.\r\n */\r\nexport const mapEntries = <\r\n  S,\r\n  Mappers extends { [contentTypeId: string]: MappingTemplate<S> }\r\n>(\r\n  entries: S[],\r\n  mappers: Mappers,\r\n  field = 'sys.contentTypeId'\r\n) =>\r\n  entries.map(entry => {\r\n    const mapper = chooseMapperByFieldValue(entry, mappers, field);\r\n    return mapper ? mapJson((entry || {}) as S, mapper) : entry;\r\n  });\r\n\r\n/**\r\n * mapComposer mapping function to take a composer field from Delivery API along\r\n * with mappers for each Composer Item \"type\" and return an array of mapped components\r\n * @param {array} composer Composer field array of Composer Items\r\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\r\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\r\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\r\n * where the mapping originated and for what component the mapped object is representing\r\n */\r\nexport const mapComposer = <\r\n  S extends { type: string; value: any },\r\n  T extends Mappers<S>\r\n>(\r\n  composer: S[],\r\n  mappers: T\r\n) =>\r\n  Array.isArray(composer)\r\n    ? composer.map((composerItem, index) => {\r\n        const itemValue = composerItem.value;\r\n        const mapper = mappers[composerItem.type] || mappers.default;\r\n        if (mapper) {\r\n          // Add some fields into the composer item mapper and return object\r\n          const addedFields = {\r\n            _type: composerItem.type,\r\n            _index: index,\r\n          };\r\n\r\n          // Add fields and $root item into the composer item source object\r\n          // for use inside each item mapping, for arrays we inject the added fields\r\n          // into the first array item. This is useful if we require any of\r\n          // composerItem.type, composerItem index/position and composer $root\r\n          // in scope to influence any composer item's mapping logic\r\n          const sourceObject =\r\n            itemValue && Array.isArray(itemValue)\r\n              ? itemValue.map((iv, idx) =>\r\n                  idx !== 0\r\n                    ? iv\r\n                    : typeof iv === 'object'\r\n                    ? { ...addedFields, ...iv, $root: composer }\r\n                    : iv\r\n                )\r\n              : typeof itemValue === 'object'\r\n              ? { ...addedFields, ...itemValue, $root: composer }\r\n              : itemValue || {};\r\n\r\n          // Apply the composer item mapping\r\n          const mappedFields = mapJson(sourceObject, mapper) as any;\r\n\r\n          // Add the extra fields in with the return object\r\n          return mappedFields && typeof mappedFields === 'object'\r\n            ? { ...mappedFields, ...addedFields }\r\n            : mappedFields;\r\n        } else return {};\r\n      })\r\n    : composer || [];\r\n\r\n/**\r\n * useComposerMapper hook to take a composer field from Delivery API along\r\n * with mappers for each Composer Item \"type\" and return an array of mapped components\r\n * @param {array} composer Composer field array of Composer Items\r\n * @param {object} mappers A keyed object with each key matching the Composer Item \"type\"\r\n * @returns {array} Array of mapped objects transformed using a matched Composer Item \"type\" mapping\r\n * or null. Injects a \"_type\" property into each transformed object in the array to indicate\r\n * where the mapping originated and for what component the mapped object is representing\r\n */\r\nexport const useComposerMapper = <\r\n  S extends { type: string; value: any },\r\n  T extends Mappers<S>\r\n>(\r\n  composer: S[] = [],\r\n  mappers: T\r\n) => mapComposer(composer, mappers);\r\n\r\n/**\r\n * entryMapper will return a function to satisfy an entryMapper when defining app route\r\n * this is essentially a shorthand function to prevent boilerplate repetition inside your routes file\r\n * you do not need to use this function should you wish to map your entry via raw JS functions\r\n * @param mapping the jsonpath-mapper mapping template to apply when the route is resolved\r\n * @returns {mappedEntry}\r\n */\r\nexport const entryMapper =\r\n  (\r\n    mapping:\r\n      | MappingTemplate<RouteNode & Entry & { state?: AppState }>\r\n      | PureJsFunction<RouteNode & Entry & { state?: AppState }>\r\n  ): EntryMapper =>\r\n  (node, state) =>\r\n    mapJson({ ...node, ...(node.entry || ({} as Entry)), state }, mapping);\r\n\r\nexport default mapJson;\r\n","const stringifyStrings = obj => {\r\n  const returnObj = Array.isArray(obj) ? [] : {};\r\n  Object.entries(obj).forEach(([key, value]) => {\r\n    switch (typeof value) {\r\n      case 'string':\r\n        returnObj[key] = JSON.stringify(value);\r\n        break;\r\n      case 'object':\r\n        returnObj[key] = stringifyStrings(value);\r\n        break;\r\n      default:\r\n        returnObj[key] = value;\r\n        break;\r\n    }\r\n  });\r\n  return returnObj;\r\n};\r\n\r\nmodule.exports = stringifyStrings;\r\n","import { default as mapJson } from '~/util/json-mapper';\r\nimport { selectCurrentProject } from '~/routing/redux/selectors';\r\nimport {\r\n  selectBuildNumber,\r\n  selectCommitRef,\r\n  selectVersionStatus,\r\n} from '~/redux/selectors/version';\r\nimport { IVersionInfoProps } from '../components/VersionInfo';\r\n\r\nconst context = (\r\n  typeof window != 'undefined' ? window : global\r\n) as typeof globalThis & {\r\n  DISABLE_SSR_REDUX: any;\r\n  PACKAGE_JSON: any;\r\n  PROJECTS: any;\r\n  PROXY_DELIVERY_API: any;\r\n  PUBLIC_URI: any;\r\n  REVERSE_PROXY_PATHS: string[];\r\n  SERVERS: any;\r\n};\r\n\r\nconst isDev = process.env.NODE_ENV === 'development';\r\n\r\nconst pj = () =>\r\n  isDev\r\n    ? PACKAGE_JSON /* global PACKAGE_JSON */\r\n    : context.PACKAGE_JSON || { name: 'packagejson not found', repository: '' };\r\n\r\nconst versionInfoProps = {\r\n  packageDetail: () => {\r\n    const pkg = pj();\r\n    return { name: pkg.name, version: pkg.version, repository: pkg.repository };\r\n  },\r\n  uris: {\r\n    gitRepo: () => pj().repository,\r\n    commit: state => {\r\n      const commitRef = selectCommitRef(state);\r\n      return `${pj().repository}/commit/${commitRef ? commitRef : ''}`;\r\n    },\r\n    pipeline: state => {\r\n      const buildNumber = selectBuildNumber(state);\r\n      return `${pj().repository}/${\r\n        pj().repository.includes('github.com') ? 'actions/runs' : 'pipelines'\r\n      }/${buildNumber ? buildNumber : ''}`;\r\n    },\r\n  },\r\n  zenPackageVersions: () => [\r\n    ...(Object.entries(pj().devDependencies || {}).filter(\r\n      ([pkg]) => pkg.includes('zengenti') || pkg.includes('contensis')\r\n    ) || []),\r\n    ...(Object.entries(pj().dependencies || {}).filter(\r\n      ([pkg]) => pkg.includes('zengenti') || pkg.includes('contensis')\r\n    ) || []),\r\n  ],\r\n  deliveryApi: () =>\r\n    JSON.parse(\r\n      JSON.stringify(DELIVERY_API_CONFIG /* global DELIVERY_API_CONFIG */)\r\n    ),\r\n  devEnv: () =>\r\n    typeof DEV_ENV !== 'undefined' /* global DEV_ENV */ ? DEV_ENV : null,\r\n  disableSsrRedux: () =>\r\n    isDev\r\n      ? DISABLE_SSR_REDUX /* global DISABLE_SSR_REDUX*/\r\n      : context.DISABLE_SSR_REDUX || false,\r\n  nodeEnv: () => process.env.NODE_ENV || 'production',\r\n  packagejson: () => pj() || {},\r\n  projects: () => (isDev ? PROJECTS /* global PROJECTS */ : context.PROJECTS),\r\n  proxyDeliveryApi: () =>\r\n    isDev\r\n      ? PROXY_DELIVERY_API /* global PROXY_DELIVERY_API */\r\n      : context.PROXY_DELIVERY_API || false,\r\n  publicUri: () =>\r\n    isDev ? PUBLIC_URI /* global PUBLIC_URI */ : context.PUBLIC_URI || null,\r\n  project: state => selectCurrentProject(state),\r\n  reverseProxyPaths: () =>\r\n    isDev\r\n      ? REVERSE_PROXY_PATHS /* global REVERSE_PROXY_PATHS */\r\n      : context.REVERSE_PROXY_PATHS || {},\r\n  servers: () => (isDev ? SERVERS /* global SERVERS */ : context.SERVERS),\r\n  version: {\r\n    buildNumber: state => selectBuildNumber(state),\r\n    commitRef: state => selectCommitRef(state),\r\n    contensisVersionStatus: state => selectVersionStatus(state),\r\n  },\r\n};\r\n\r\nconst mapStateToVersionInfo = state => {\r\n  const mappedProps = mapJson(state, versionInfoProps);\r\n  return mappedProps as IVersionInfoProps;\r\n};\r\n\r\nexport default mapStateToVersionInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const VersionInfoStyledTable = styled.table`\r\n  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;\r\n  font-size: 1.6rem;\r\n  line-height: 1.5rem;\r\n  border-bottom: 4px solid #8892bf;\r\n  border-collapse: separate;\r\n  margin: 0 auto;\r\n  width: 80%;\r\n  th {\r\n    text-align: left;\r\n    background-color: #c4c9df;\r\n    border-bottom: #8892bf 2px solid;\r\n    border-bottom-color: #8892bf;\r\n    border-top: 20px solid #fff;\r\n  }\r\n  td {\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  td,\r\n  th {\r\n    padding: 0.5rem 0.75rem;\r\n    vertical-align: top;\r\n  }\r\n  .left {\r\n    width: 25%;\r\n  }\r\n  tr th {\r\n    border-right: hidden;\r\n    border-spacing: 0 15px;\r\n  }\r\n  .green {\r\n    background-color: #9c9;\r\n    border-bottom: 1px solid #696;\r\n  }\r\n  .red {\r\n    background-color: #c99;\r\n    border-bottom: 1px solid #966;\r\n  }\r\n  .small {\r\n    font-size: 100%;\r\n    line-height: 2.4rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport mapStateToVersionInfo from '../transformations/state-to-versioninfoprops.mapper';\r\n\r\nimport { VersionInfoStyledTable } from './VersionInfo.styled';\r\n\r\nexport interface IVersionInfoProps {\r\n  deliveryApi: {\r\n    rootUrl: string;\r\n    accessToken: string;\r\n    projectId: string;\r\n    livePublishingRootUrl: string;\r\n  };\r\n  devEnv: any;\r\n  disableSsrRedux: boolean;\r\n  nodeEnv: string;\r\n  packageDetail: any;\r\n  project: string;\r\n  projects;\r\n  proxyDeliveryApi;\r\n  publicUri: string;\r\n  reverseProxyPaths: string[];\r\n  servers: {\r\n    alias: string;\r\n    api: string;\r\n    cms: string;\r\n    web: string;\r\n    iis: string;\r\n    previewIis: string;\r\n    previewWeb: string;\r\n  };\r\n  uris: {\r\n    gitRepo: string;\r\n    commit: string;\r\n    pipeline: string;\r\n  };\r\n  version: {\r\n    buildNumber: string;\r\n    commitRef: string;\r\n    contensisVersionStatus: string;\r\n  };\r\n  zenPackageVersions: string[];\r\n}\r\n\r\nconst VersionInfo = ({\r\n  deliveryApi,\r\n  devEnv,\r\n  disableSsrRedux,\r\n  nodeEnv,\r\n  packageDetail,\r\n  project,\r\n  projects,\r\n  proxyDeliveryApi,\r\n  publicUri,\r\n  reverseProxyPaths,\r\n  servers,\r\n  uris,\r\n  version,\r\n  zenPackageVersions,\r\n}: IVersionInfoProps) => {\r\n  return (\r\n    <VersionInfoStyledTable>\r\n      <thead>\r\n        <tr>\r\n          <td colSpan={2}>\r\n            <h1>\r\n              <a href=\"/\">Version Information</a>\r\n            </h1>\r\n          </td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th colSpan={2}>Package detail</th>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"left\">Name</td>\r\n          <td>{packageDetail.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"left\">Version</td>\r\n          <td>{packageDetail.version}</td>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={2}>Version info (state)</th>\r\n        </tr>\r\n        <tr>\r\n          <td>Git repo url: </td>\r\n          <td>\r\n            <a\r\n              href={packageDetail.repository}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {packageDetail.repository}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Pipeline: </td>\r\n          <td>\r\n            <a href={uris.pipeline} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {version.buildNumber}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Commit: </td>\r\n          <td>\r\n            <a href={uris.commit} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {version.commitRef}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n        {/* <tr>\r\n            <td>Last release ref: </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of commits since last release: </td>\r\n            <td></td>\r\n          </tr> */}\r\n        <tr>\r\n          <td>Project</td>\r\n          <td className={project === 'unknown' ? 'red' : ''}>{project}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Contensis version status: </td>\r\n          <td\r\n            className={\r\n              version.contensisVersionStatus === 'published' ? 'green' : 'red'\r\n            }\r\n          >\r\n            {version.contensisVersionStatus}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th colSpan={2}>Build configuration</th>\r\n        </tr>\r\n        <tr>\r\n          <td>Environment</td>\r\n          <td>{servers.alias}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Public uri</td>\r\n          <td>{publicUri}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Zengenti packages</td>\r\n          <td>\r\n            {zenPackageVersions.map(([pkg, ver], idx) => (\r\n              <div key={idx}>\r\n                {pkg}: {ver}\r\n              </div>\r\n            ))}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Servers</td>\r\n          <td className=\"small\">\r\n            <div>web: {servers.web}</div>\r\n            <div>preview: {servers.previewWeb}</div>\r\n            <div>api: {servers.api}</div>\r\n            <div>cms: {servers.cms}</div>\r\n            <div>iis: {servers.iis}</div>\r\n            <div>iis preview: {servers.previewIis}</div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Reverse proxy paths</td>\r\n          <td>\r\n            {Object.entries(reverseProxyPaths).map(([, path], key) => (\r\n              <span key={key}>[ {path} ] </span>\r\n            ))}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Projects</td>\r\n          <td>\r\n            {Object.entries(\r\n              projects as {\r\n                id: string;\r\n                publicUri: string;\r\n              }[]\r\n            ).map(([, project], key) => (\r\n              <div key={key}>\r\n                [ {project.id}: {project.publicUri} ]\r\n              </div>\r\n            ))}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Delivery API</td>\r\n          <td className=\"small\">\r\n            <ul style={{ margin: 0, padding: 0 }}>\r\n              {Object.entries(deliveryApi).map(\r\n                ([key, value]: [string, any], idx) => {\r\n                  if (typeof value === 'object') return null;\r\n                  return (\r\n                    <li key={idx} style={{ listStyleType: 'none' }}>\r\n                      {key}: <span>{value}</span>\r\n                    </li>\r\n                  );\r\n                }\r\n              )}\r\n            </ul>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Proxy Delivery API requests</td>\r\n          <td className={proxyDeliveryApi ? 'green' : 'red'}>\r\n            {proxyDeliveryApi.toString()}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>Disable SSR inline-redux</td>\r\n          <td>{disableSsrRedux.toString()}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>NODE_ENV</td>\r\n          <td className={nodeEnv === 'production' ? 'green' : 'red'}>\r\n            {nodeEnv.toString()}\r\n          </td>\r\n        </tr>\r\n        {devEnv && (\r\n          <tr>\r\n            <td>process.env</td>\r\n            <td>\r\n              {Object.entries(devEnv).map(([k, v], key) => (\r\n                <div key={key}>\r\n                  [ {k}: {v} ]\r\n                </div>\r\n              ))}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </VersionInfoStyledTable>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToVersionInfo)(VersionInfo);\r\n"],"names":["useMapper","json","template","mapJson","chooseMapperByFieldValue","entry","mappers","field","fieldValue","jpath","default","useEntriesMapper","mapper","useEntryMapper","mapEntries","entries","map","mapComposer","composer","Array","isArray","composerItem","index","itemValue","value","type","addedFields","_type","_index","sourceObject","iv","idx","$root","mappedFields","useComposerMapper","entryMapper","mapping","node","state","stringifyStrings","obj","returnObj","Object","forEach","key","JSON","stringify","module","context","window","global","isDev","process","env","NODE_ENV","pj","PACKAGE_JSON","name","repository","versionInfoProps","packageDetail","pkg","version","uris","gitRepo","commit","commitRef","selectCommitRef","pipeline","buildNumber","selectBuildNumber","includes","zenPackageVersions","devDependencies","filter","dependencies","deliveryApi","parse","DELIVERY_API_CONFIG","devEnv","DEV_ENV","disableSsrRedux","DISABLE_SSR_REDUX","nodeEnv","packagejson","projects","PROJECTS","proxyDeliveryApi","PROXY_DELIVERY_API","publicUri","PUBLIC_URI","project","selectCurrentProject","reverseProxyPaths","REVERSE_PROXY_PATHS","servers","SERVERS","contensisVersionStatus","selectVersionStatus","mapStateToVersionInfo","mappedProps","VersionInfoStyledTable","styled","table","withConfig","displayName","componentId","VersionInfo","React","createElement","colSpan","href","className","target","rel","alias","ver","web","previewWeb","api","cms","iis","previewIis","path","id","style","margin","padding","listStyleType","toString","k","v","connect"],"mappings":"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"}