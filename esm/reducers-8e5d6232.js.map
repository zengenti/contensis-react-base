{"version":3,"file":"reducers-8e5d6232.js","sources":["../src/user/redux/types.js","../src/user/redux/reducers.ts"],"sourcesContent":["const ACTION_PREFIX = '@USER/';\r\nexport const VALIDATE_USER = `${ACTION_PREFIX}VALIDATE_USER`;\r\nexport const SET_AUTHENTICATION_STATE = `${ACTION_PREFIX}SET_AUTHENTICATION_STATE`;\r\nexport const LOGIN_USER = `${ACTION_PREFIX}LOGIN_USER`;\r\nexport const LOGIN_SUCCESSFUL = `${ACTION_PREFIX}LOGIN_SUCCESSFUL`;\r\nexport const LOGIN_FAILED = `${ACTION_PREFIX}LOGIN_FAILED`;\r\nexport const LOGOUT_USER = `${ACTION_PREFIX}LOGOUT_USER`;\r\nexport const REGISTER_USER = `${ACTION_PREFIX}REGISTER_USER`;\r\nexport const REGISTER_USER_SUCCESS = `${ACTION_PREFIX}REGISTER_USER_SUCCESS`;\r\nexport const REGISTER_USER_FAILED = `${ACTION_PREFIX}REGISTER_USER_FAILED`;\r\n\r\nexport const REQUEST_USER_PASSWORD_RESET = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET`;\r\nexport const RESET_USER_PASSWORD = `${ACTION_PREFIX}RESET_USER_PASSWORD`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SENDING = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SENDING`;\r\nexport const REQUEST_USER_PASSWORD_RESET_SUCCESS = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_SUCCESS`;\r\nexport const REQUEST_USER_PASSWORD_RESET_ERROR = `${ACTION_PREFIX}REQUEST_USER_PASSWORD_RESET_ERROR`;\r\nexport const RESET_USER_PASSWORD_SENDING = `${ACTION_PREFIX}RESET_USER_PASSWORD_SENDING`;\r\nexport const RESET_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}RESET_USER_PASSWORD_SUCCESS`;\r\nexport const RESET_USER_PASSWORD_ERROR = `${ACTION_PREFIX}RESET_USER_PASSWORD_ERROR`;\r\n\r\nexport const CHANGE_USER_PASSWORD = `${ACTION_PREFIX}CHANGE_USER_PASSWORD`;\r\nexport const CHANGE_USER_PASSWORD_SENDING = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SENDING`;\r\nexport const CHANGE_USER_PASSWORD_SUCCESS = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_SUCCESS`;\r\nexport const CHANGE_USER_PASSWORD_ERROR = `${ACTION_PREFIX}CHANGE_USER_PASSWORD_ERROR`;\r\n","import { Draft, produce } from 'immer';\r\nimport { AppState } from '~/redux/appstate';\r\nimport {\r\n  REGISTER_USER,\r\n  REGISTER_USER_FAILED,\r\n  REGISTER_USER_SUCCESS,\r\n  SET_AUTHENTICATION_STATE,\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REQUEST_USER_PASSWORD_RESET_SENDING,\r\n  REQUEST_USER_PASSWORD_RESET_SUCCESS,\r\n  REQUEST_USER_PASSWORD_RESET_ERROR,\r\n  RESET_USER_PASSWORD_SENDING,\r\n  RESET_USER_PASSWORD_SUCCESS,\r\n  RESET_USER_PASSWORD_ERROR,\r\n  CHANGE_USER_PASSWORD_SENDING,\r\n  CHANGE_USER_PASSWORD_SUCCESS,\r\n  CHANGE_USER_PASSWORD_ERROR,\r\n} from './types';\r\n\r\nconst defaultAuthenticationState = {\r\n  clientCredentials: null,\r\n  errorMessage: null,\r\n  isAuthenticated: false,\r\n  isAuthenticationError: false,\r\n  isError: false,\r\n  isLoading: false,\r\n};\r\n\r\nconst defaultPasswordResetRequestValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultResetPasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultChangePasswordValues = {\r\n  isSending: false,\r\n  sent: false,\r\n  error: null,\r\n};\r\n\r\nconst defaultRegistrationValues = {\r\n  isLoading: false,\r\n  success: false,\r\n  error: null,\r\n};\r\n\r\nexport const initialUserState = {\r\n  authenticationState: defaultAuthenticationState,\r\n  passwordResetRequest: defaultPasswordResetRequestValues,\r\n  resetPassword: defaultResetPasswordValues,\r\n  changePassword: defaultChangePasswordValues,\r\n  groups: [],\r\n};\r\n\r\nexport default produce((state: Draft<AppState['user']>, action) => {\r\n  switch (action.type) {\r\n    case LOGOUT_USER: {\r\n      return initialUserState;\r\n    }\r\n    case LOGIN_USER:\r\n    case SET_AUTHENTICATION_STATE: {\r\n      if (!action.authenticationState) {\r\n        action.authenticationState = defaultAuthenticationState;\r\n      }\r\n\r\n      const {\r\n        authenticationState: {\r\n          clientCredentials = null,\r\n          errorMessage = null,\r\n          isAuthenticated,\r\n          isAuthenticationError = false,\r\n          isError = false,\r\n          isLoading = action.type === LOGIN_USER,\r\n        },\r\n        user,\r\n      } = action;\r\n\r\n      if (user) {\r\n        user.name =\r\n          `${user.firstName}${user.lastName ? ` ${user.lastName}` : ''}` ||\r\n          null;\r\n        user.isZengentiStaff = user.email.includes('@zengenti.com');\r\n      }\r\n\r\n      state = {\r\n        ...initialUserState,\r\n        ...(user || state),\r\n        authenticationState: {\r\n          clientCredentials,\r\n          errorMessage,\r\n          isAuthenticated:\r\n            isAuthenticated || state?.authenticationState?.isAuthenticated,\r\n          isAuthenticationError,\r\n          isError,\r\n          isLoading,\r\n        },\r\n      };\r\n      return state;\r\n    }\r\n    // REGISTER_USER is the trigger to set the user.registration initial state\r\n    // and will set user.registration.isLoading to true\r\n    // REGISTER_USER_FAILED will unset user.registration.isLoading and will set\r\n    // the value in user.registration.error\r\n    // REGISTER_USER_SUCCESS will unset user.registration.isLoading and will\r\n    // set user.registration to the created user from the api response\r\n    case REGISTER_USER:\r\n    case REGISTER_USER_FAILED:\r\n    case REGISTER_USER_SUCCESS: {\r\n      const { error, user } = action;\r\n\r\n      // Set registration object from the supplied action.user\r\n      // so we can call these values back later\r\n      state.registration = (user ||\r\n        state.registration ||\r\n        defaultRegistrationValues) as typeof defaultRegistrationValues;\r\n\r\n      // Set registration flags so the UI can track the status\r\n      state.registration.success = action.type === REGISTER_USER_SUCCESS;\r\n      state.registration.error = error || false;\r\n      state.registration.isLoading = action.type === REGISTER_USER;\r\n      return;\r\n    }\r\n    case REQUEST_USER_PASSWORD_RESET_SENDING:\r\n      state.passwordResetRequest = defaultPasswordResetRequestValues;\r\n      state.passwordResetRequest.isSending = true;\r\n      return;\r\n    case REQUEST_USER_PASSWORD_RESET_SUCCESS:\r\n      if (state.passwordResetRequest) {\r\n        state.passwordResetRequest.isSending = false;\r\n        state.passwordResetRequest.sent = true;\r\n      }\r\n      return;\r\n    case REQUEST_USER_PASSWORD_RESET_ERROR:\r\n      if (state.passwordResetRequest) {\r\n        state.passwordResetRequest.isSending = false;\r\n        state.passwordResetRequest.error = action.error;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_SENDING:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = true;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_SUCCESS:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = false;\r\n        state.resetPassword.sent = true;\r\n      }\r\n      return;\r\n    case RESET_USER_PASSWORD_ERROR:\r\n      if (state.resetPassword) {\r\n        state.resetPassword.isSending = false;\r\n        state.resetPassword.error = action.error;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_SENDING:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = true;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_SUCCESS:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = false;\r\n        state.changePassword.sent = true;\r\n      }\r\n      return;\r\n    case CHANGE_USER_PASSWORD_ERROR:\r\n      if (state.changePassword) {\r\n        state.changePassword.isSending = false;\r\n        state.changePassword.error = action.error;\r\n      }\r\n      return;\r\n    default:\r\n      return;\r\n  }\r\n}, initialUserState);\r\n"],"names":["ACTION_PREFIX","VALIDATE_USER","SET_AUTHENTICATION_STATE","LOGIN_USER","LOGIN_SUCCESSFUL","LOGIN_FAILED","LOGOUT_USER","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","REQUEST_USER_PASSWORD_RESET","RESET_USER_PASSWORD","REQUEST_USER_PASSWORD_RESET_SENDING","REQUEST_USER_PASSWORD_RESET_SUCCESS","REQUEST_USER_PASSWORD_RESET_ERROR","RESET_USER_PASSWORD_SENDING","RESET_USER_PASSWORD_SUCCESS","RESET_USER_PASSWORD_ERROR","CHANGE_USER_PASSWORD","CHANGE_USER_PASSWORD_SENDING","CHANGE_USER_PASSWORD_SUCCESS","CHANGE_USER_PASSWORD_ERROR","defaultAuthenticationState","clientCredentials","errorMessage","isAuthenticated","isAuthenticationError","isError","isLoading","defaultPasswordResetRequestValues","isSending","sent","error","defaultResetPasswordValues","defaultChangePasswordValues","defaultRegistrationValues","success","initialUserState","authenticationState","passwordResetRequest","resetPassword","changePassword","groups","produce","state","action","type","user","name","firstName","lastName","isZengentiStaff","email","includes","registration"],"mappings":"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"}