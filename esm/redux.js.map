{"version":3,"file":"redux.js","sources":["../src/redux/types/index.js","../src/redux/actions/navigation.js","../src/redux/actions/index.js","../src/redux/selectors/index.js","../src/redux/index.ts"],"sourcesContent":["import * as navigation from './navigation';\r\nimport * as routing from '~/routing/redux/types';\r\nimport * as version from './version';\r\n\r\nexport default { navigation, routing, version };\r\n","import { action } from '../util';\r\n\r\nimport { GET_NODE_TREE } from '~/redux/types/navigation';\r\n\r\nexport const loadNavigationTree = () => action(GET_NODE_TREE);\r\n","import * as navigation from './navigation';\r\nimport * as routing from '~/routing/redux/actions';\r\nimport * as version from './version';\r\n\r\nexport default { navigation, routing, version };\r\n","import * as navigation from './navigation';\r\nimport * as routing from '~/routing/redux/selectors';\r\nimport * as version from './version';\r\n\r\nexport default { navigation, routing, version };\r\n","import types from './types';\r\nimport actions from './actions';\r\nimport selectors from './selectors';\r\n\r\nexport { action, getJS, getImmutableOrJS as getIn } from './util';\r\n\r\nexport { reduxStore as store } from './store/store';\r\n\r\nexport {\r\n  convertSagaArray,\r\n  injectRedux,\r\n  injectReducer,\r\n  injectSaga,\r\n  useInjectRedux,\r\n} from './store/injectors';\r\n\r\n// Remap the objects so they are presented in \"feature\" hierarchy\r\n// e.g. { routing: { types, actions }, navigation: { types, actions } }\r\n// instead of { types: { routing, navigation }, actions: { routing, navigation } }\r\n\r\nexport const navigation = {\r\n  types: types.navigation,\r\n  actions: actions.navigation,\r\n  selectors: selectors.navigation,\r\n};\r\nexport const routing = {\r\n  types: types.routing,\r\n  actions: actions.routing,\r\n  selectors: selectors.routing,\r\n};\r\nexport const version = {\r\n  types: types.version,\r\n  actions: actions.version,\r\n  selectors: selectors.version,\r\n};\r\n"],"names":["navigation","routing","version","loadNavigationTree","action","GET_NODE_TREE","types","actions","selectors"],"mappings":";;;;;;;;;;;;;;;;;AAIA,YAAe;cAAEA,YAAU;WAAEC,SAAO;AAAEC,WAAAA,SAAAA;AAAQ,CAAC;;ACAxC,MAAMC,kBAAkB,GAAGA,MAAMC,MAAM,CAACC,aAAa,CAAC;;;;;;;ACA7D,cAAe;cAAEL,YAAU;WAAEC,SAAO;AAAEC,WAAAA,SAAAA;AAAQ,CAAC;;ACA/C,gBAAe;cAAEF,YAAU;WAAEC,SAAO;AAAEC,WAAAA,SAAAA;AAAQ,CAAC;;ACY/C;AACA;AACA;;AAEO,MAAMF,UAAU,GAAG;EACxBM,KAAK,EAAEA,KAAK,CAACN,UAAU;EACvBO,OAAO,EAAEA,OAAO,CAACP,UAAU;EAC3BQ,SAAS,EAAEA,SAAS,CAACR,UAAAA;AACvB,EAAC;AACM,MAAMC,OAAO,GAAG;EACrBK,KAAK,EAAEA,KAAK,CAACL,OAAO;EACpBM,OAAO,EAAEA,OAAO,CAACN,OAAO;EACxBO,SAAS,EAAEA,SAAS,CAACP,OAAAA;AACvB,EAAC;AACM,MAAMC,OAAO,GAAG;EACrBI,KAAK,EAAEA,KAAK,CAACJ,OAAO;EACpBK,OAAO,EAAEA,OAAO,CAACL,OAAO;EACxBM,SAAS,EAAEA,SAAS,CAACN,OAAAA;AACvB;;;;"}